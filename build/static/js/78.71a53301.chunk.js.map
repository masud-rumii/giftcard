{"version":3,"sources":["view/components/feedback/modal/basic.jsx","view/components/feedback/modal/code.js","view/components/feedback/modal/info.jsx","view/components/feedback/modal/customizeWidth.jsx","view/components/feedback/modal/position.jsx","view/components/feedback/modal/confirmation.jsx","assets/images/modal/pop-up.svg","view/components/feedback/modal/yoda.jsx","view/components/feedback/modal/index.jsx","layout/components/content/page-content/index.jsx"],"names":["BasicModal","useState","isModalVisible","setIsModalVisible","checkedCode","setCheckedCode","codeClass","setCodeClass","handleOk","handleCancel","className","span","lg","onClick","setTimeout","type","icon","title","width","visible","onOk","onCancel","footer","closeIcon","size","language","style","monoBlue","InfoModal","ghost","Modal","info","content","success","error","warning","CustomizeWidthModal","setVisible","centered","PositionModal","modal1Visible","setIsModal1Visible","modal2Visible","setIsModal2Visible","setModal1Visible","setModal2Visible","top","confirm","ConfirmationModal","Promise","resolve","reject","Math","random","catch","console","log","okText","okType","cancelText","okButtonProps","disabled","YodaModal","PopupModalVisible","setPopupModalVisible","PopupWidthModalVisible","setPopupWidthModalVisible","FormModalVisible","setFormModalVisible","FormWidthModalVisible","setFormWidthModalVisible","handleFormOk","handlePopupWidthCancel","handleFormCancel","handleFormWidthCancel","closable","src","popUpImage","alt","block","justify","md","layout","name","initialValues","remember","Item","label","rules","required","message","Password","valuePropName","htmlType","gutter","TextArea","desc","breadcrumb","link","PageContent","props","borderRadius","height","fill","xmlns","d","stroke","strokeWidth","strokeLinejoin","id","x1","y1","x2","y2","gradientUnits","stopColor","offset","stopOpacity","sm","to","map","item","index"],"mappings":"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","file":"static/js/78.71a53301.chunk.js","sourcesContent":["import React, { useState } from \"react\";\n\nimport SyntaxHighlighter from \"react-syntax-highlighter\";\nimport { monoBlue } from \"react-syntax-highlighter/dist/esm/styles/hljs\";\nimport { basic } from \"./code.js\";\n\nimport { Card, Row, Col, Button, Modal } from \"antd\";\nimport { RiCloseFill, RiCodeSSlashLine } from \"react-icons/ri\";\n\nexport default function BasicModal() {\n  const [isModalVisible, setIsModalVisible] = useState(false);\n  const [checkedCode, setCheckedCode] = useState(false);\n  const [codeClass, setCodeClass] = useState(false);\n\n  function toggleChecked() {\n    setTimeout(() => setCodeClass(!codeClass), 100);\n    setCheckedCode(!checkedCode);\n  }\n\n  const showModal = () => {\n    setIsModalVisible(true);\n  };\n\n  const handleOk = () => {\n    setIsModalVisible(false);\n  };\n\n  const handleCancel = () => {\n    setIsModalVisible(false);\n  };\n\n  return (\n    <Card className=\"hp-border-color-black-40\">\n      <Row>\n        <Col className=\"hp-mb-16\" span={24}>\n          <Row>\n            <Col lg={12} span={20}>\n              <h4>Basic Modal</h4>\n              <p className=\"hp-p1-body\">Basic modal.</p>\n            </Col>\n\n            <Col lg={12} span={4} className=\"hp-text-right\">\n              <Button\n                onClick={toggleChecked}\n                type=\"text\"\n                icon={<RiCodeSSlashLine className=\"hp-text-color-black-80\" />}\n              />\n            </Col>\n          </Row>\n        </Col>\n\n        <Col span={24}>\n          <Button type=\"primary\" onClick={showModal}>\n            Open Modal\n          </Button>\n\n          <Modal\n            title={<h5 className=\"hp-mb-0\">Basic Modal</h5>}\n            width={416}\n            visible={isModalVisible}\n            onOk={handleOk}\n            onCancel={handleCancel}\n            footer={\n              <>\n                <Button type=\"text\" key=\"back\" onClick={handleCancel}>\n                  Cancel\n                </Button>\n\n                <Button type=\"primary\" onClick={handleOk}>\n                  Confirm\n                </Button>\n              </>\n            }\n            closeIcon={\n              <RiCloseFill\n                className=\"remix-icon hp-text-color-black-100 hp-text-color-dark-0\"\n                size={24}\n              />\n            }\n          >\n            <p className=\"hp-p2-body\">\n              Lorem ipsum dolor sit amet, consectetur adipiscing elit. Aliquam\n              vestibulum risus velit, ut placerat diam imperdiet nec. Aenean ex\n              turpis, feugiat sed euismod nec, iaculis id dui. Suspendisse.\n            </p>\n          </Modal>\n        </Col>\n      </Row>\n\n      {checkedCode && (\n        <SyntaxHighlighter\n          language=\"javascript\"\n          className={`show-code hp-mt-24 ${codeClass && \"show-code-active\"}`}\n          style={monoBlue}\n        >\n          {basic}\n        </SyntaxHighlighter>\n      )}\n    </Card>\n  );\n}\n","export const basic = `\nimport React, { useState } from \"react\";\n\nimport { Button, Modal } from \"antd\";\nimport { RiCloseFill } from \"react-icons/ri\";\n\nconst [isModalVisible, setIsModalVisible] = useState(false);\n\nconst showModal = () => {\n  setIsModalVisible(true);\n};\n\nconst handleOk = () => {\n  setIsModalVisible(false);\n};\n\nconst handleCancel = () => {\n  setIsModalVisible(false);\n};\n\nreturn (\n  <>\n    <Button type=\"primary\" onClick={showModal}>\n      Open Modal\n    </Button>\n\n    <Modal\n      title={<h5 className=\"hp-mb-0\">Basic Modal</h5>}\n      width={416}\n      visible={isModalVisible}\n      onOk={handleOk}\n      onCancel={handleCancel}\n      footer={\n        <>\n          <Button type=\"text\" key=\"back\" onClick={handleCancel}>\n            Cancel\n          </Button>\n          <Button type=\"primary\" onClick={handleOk}>\n            Confirm\n          </Button>\n        </>\n      }\n      closeIcon={\n        <RiCloseFill\n          className=\"remix-icon text-color-black-100\"\n          size={24}\n        />\n      }\n    >\n      <p className=\"hp-p2-body\">\n        Lorem ipsum dolor sit amet, consectetur adipiscing elit. Aliquam\n        vestibulum risus velit, ut placerat diam imperdiet nec. Aenean ex\n        turpis, feugiat sed euismod nec, iaculis id dui. Suspendisse.\n      </p>\n    </Modal>\n  </>\n);\n`;\n\nexport const confirmation = `\nimport { Button, Modal } from \"antd\";\nimport { RiInformationLine } from \"react-icons/ri\";\n\nconst { confirm } = Modal;\n\nfunction showConfirm() {\n  confirm({\n    title: (\n      <h5 className=\"hp-mb-0 hp-font-weight-500\">\n        Do you Want to delete these items?\n      </h5>\n    ),\n    icon: (\n      <span className=\"remix-icon\">\n        <RiInformationLine />\n      </span>\n    ),\n    content: (\n      <p className=\"hp-p1-body hp-text-color-black-80\">Some descriptions</p>\n    ),\n    onOk() {},\n    onCancel() {},\n  });\n}\n\nfunction showPromiseConfirm() {\n  confirm({\n    title: (\n      <h5 className=\"hp-mb-0 hp-font-weight-500\">\n        Do you Want to delete these items?\n      </h5>\n    ),\n    icon: (\n      <span className=\"remix-icon\">\n        <RiInformationLine />\n      </span>\n    ),\n    content: (\n      <p className=\"hp-p1-body hp-text-color-black-80\">\n        When clicked the OK button, this dialog will be closed after 1 second\n      </p>\n    ),\n    onOk() {\n      return new Promise((resolve, reject) => {\n        setTimeout(Math.random() > 0.5 ? resolve : reject, 1000);\n      }).catch(() => console.log(\"Oops errors!\"));\n    },\n    onCancel() {},\n  });\n}\n\nfunction showDeleteConfirm() {\n  confirm({\n    title: (\n      <h5 className=\"hp-mb-0 hp-font-weight-500\">\n        Are you sure delete this task?\n      </h5>\n    ),\n    icon: (\n      <span className=\"remix-icon\">\n        <RiInformationLine />\n      </span>\n    ),\n    content: (\n      <p className=\"hp-p1-body hp-text-color-black-80\">Some descriptions</p>\n    ),\n    okText: \"Yes\",\n    okType: \"danger\",\n    cancelText: \"No\",\n    onOk() {},\n    onCancel() {},\n  });\n}\n\nfunction showPropsConfirm() {\n  confirm({\n    title: (\n      <h5 className=\"hp-mb-0 hp-font-weight-500\">\n        Are you sure delete this task?\n      </h5>\n    ),\n    icon: (\n      <span className=\"remix-icon\">\n        <RiInformationLine />\n      </span>\n    ),\n    content: (\n      <p className=\"hp-p1-body hp-text-color-black-80\">Some descriptions</p>\n    ),\n    okText: \"Yes\",\n    okType: \"danger\",\n    okButtonProps: {\n      disabled: true,\n    },\n    cancelText: \"No\",\n    onOk() {},\n    onCancel() {},\n  });\n}\n\nreturn (\n  <>\n    <Button\n      className=\"hp-mb-16 hp-mr-16\"\n      type=\"primary\"\n      ghost\n      onClick={showConfirm}\n    >\n      Confirm\n    </Button>\n\n    <Button\n      className=\"hp-mb-16 hp-mr-16\"\n      type=\"primary\"\n      ghost\n      onClick={showPromiseConfirm}\n    >\n      With promise\n    </Button>\n\n    <Button\n      className=\"hp-mb-16 hp-mr-16\"\n      type=\"primary\"\n      ghost\n      onClick={showDeleteConfirm}\n    >\n      Delete\n    </Button>\n\n    <Button\n      className=\"hp-mb-16 hp-mr-16\"\n      type=\"primary\"\n      ghost\n      onClick={showPropsConfirm}\n    >\n      With extra props\n    </Button>\n  </>\n);\n`;\n\nexport const information = `\nimport { Button, Modal } from \"antd\";\nimport {\n  RiCheckboxCircleLine,\n  RiAlertLine,\n  RiInformationLine,\n} from \"react-icons/ri\";\n\nfunction info() {\n  Modal.info({\n    icon: (\n      <span className=\"remix-icon\">\n        <RiInformationLine />\n      </span>\n    ),\n    title: (\n      <h5 className=\"hp-mb-0 hp-font-weight-500\">This is Info message</h5>\n    ),\n    content: (\n      <div>\n        <p className=\"hp-p1-body hp-text-color-black-80\">Some contents.</p>\n      </div>\n    ),\n    onOk() {},\n  });\n}\n\nfunction success() {\n  Modal.success({\n    icon: (\n      <span className=\"remix-icon\">\n        <RiCheckboxCircleLine />\n      </span>\n    ),\n    title: (\n      <h5 className=\"hp-mb-0 hp-font-weight-500\">This is Success message</h5>\n    ),\n    content: (\n      <div>\n        <p className=\"hp-p1-body hp-text-color-black-80\">Some contents.</p>\n      </div>\n    ),\n  });\n}\n\nfunction error() {\n  Modal.error({\n    icon: (\n      <span className=\"remix-icon\">\n        <RiAlertLine />\n      </span>\n    ),\n    title: (\n      <h5 className=\"hp-mb-0 hp-font-weight-500\">This is Error message</h5>\n    ),\n    content: (\n      <div>\n        <p className=\"hp-p1-body hp-text-color-black-80\">Some contents.</p>\n      </div>\n    ),\n  });\n}\n\nfunction warning() {\n  Modal.warning({\n    icon: (\n      <span className=\"remix-icon\">\n        <RiAlertLine />\n      </span>\n    ),\n    title: (\n      <h5 className=\"hp-mb-0 hp-font-weight-500\">This is Warning message</h5>\n    ),\n    content: (\n      <div>\n        <p className=\"hp-p1-body hp-text-color-black-80\">Some contents.</p>\n      </div>\n    ),\n  });\n}\n\nreturn (\n  <>\n    <Button\n      className=\"hp-mb-16 hp-mr-16\"\n      type=\"primary\"\n      ghost\n      onClick={info}\n    >\n      Info\n    </Button>\n\n    <Button\n      className=\"hp-mb-16 hp-mr-16\"\n      type=\"primary\"\n      ghost\n      onClick={success}\n    >\n      Success\n    </Button>\n\n    <Button\n      className=\"hp-mb-16 hp-mr-16\"\n      type=\"primary\"\n      ghost\n      onClick={error}\n    >\n      Error\n    </Button>\n\n    <Button\n      className=\"hp-mb-16 hp-mr-16\"\n      type=\"primary\"\n      ghost\n      onClick={warning}\n    >\n      Warning\n    </Button>\n  </>\n);\n`;\n\nexport const position = `\nimport React, { useState } from \"react\";\n\nimport { Button, Modal } from \"antd\";\nimport { RiCloseFill } from \"react-icons/ri\";\n\nconst [modal1Visible, setIsModal1Visible] = useState(false);\nconst [modal2Visible, setIsModal2Visible] = useState(false);\n\nfunction setModal1Visible(modal1Visible) {\n  setIsModal1Visible(modal1Visible);\n}\n\nfunction setModal2Visible(modal2Visible) {\n  setIsModal2Visible(modal2Visible);\n}\n\nreturn (\n  <>\n    <div>\n      <Button type=\"primary\" onClick={() => setModal1Visible(true)}>\n        Modal dialog at 20px to Top\n      </Button>\n\n      <Modal\n        title={<h5 className=\"hp-mb-0\">20px to Top</h5>}\n        style={{ top: 20 }}\n        visible={modal1Visible}\n        onOk={() => setModal1Visible(false)}\n        onCancel={() => setModal1Visible(false)}\n        closeIcon={\n          <RiCloseFill\n            className=\"remix-icon text-color-black-100\"\n            size={24}\n          />\n        }\n      >\n        <p className=\"hp-p2-body\">\n          Lorem ipsum dolor sit amet, consectetur adipiscing elit. Aliquam\n          vestibulum risus velit, ut placerat diam imperdiet nec. Aenean\n          ex turpis, feugiat sed euismod nec, iaculis id dui. Suspendisse.\n        </p>\n      </Modal>\n    </div>\n\n    <div className=\"hp-mt-16\">\n      <Button type=\"primary\" onClick={() => setModal2Visible(true)}>\n        Vertically centered modal dialog\n      </Button>\n\n      <Modal\n        title={<h5 className=\"hp-mb-0\">Vertically centered modal dialog</h5>}\n        centered\n        visible={modal2Visible}\n        onOk={() => setModal2Visible(false)}\n        onCancel={() => setModal2Visible(false)}\n        closeIcon={\n          <RiCloseFill\n            className=\"remix-icon text-color-black-100\"\n            size={24}\n          />\n        }\n      >\n        <p className=\"hp-p2-body\">\n          Lorem ipsum dolor sit amet, consectetur adipiscing elit. Aliquam\n          vestibulum risus velit, ut placerat diam imperdiet nec. Aenean\n          ex turpis, feugiat sed euismod nec, iaculis id dui. Suspendisse.\n        </p>\n      </Modal>\n    </div>\n  </>\n);\n`;\n\nexport const customWidth = `\nimport React, { useState } from \"react\";\n\nimport { Button, Modal } from \"antd\";\nimport { RiCloseFill } from \"react-icons/ri\";\n\nconst [visible, setVisible] = useState(false);\n\nreturn (\n  <>\n    <Button type=\"primary\" onClick={() => setVisible(true)}>\n      Open Modal of 1000px width\n    </Button>\n\n    <Modal\n      title={<h5 className=\"hp-mb-0\">Modal 1000px width</h5>}\n      centered\n      visible={visible}\n      onOk={() => setVisible(false)}\n      onCancel={() => setVisible(false)}\n      width={1000}\n      footer={\n        <>\n          <Button onClick={() => setVisible(false)} type=\"text\">\n            Cancel\n          </Button>\n\n          <Button onClick={() => setVisible(false)} type=\"primary\">\n            Confirm\n          </Button>\n        </>\n      }\n      closeIcon={\n        <RiCloseFill\n          className=\"remix-icon text-color-black-100\"\n          size={24}\n        />\n      }\n    >\n      <p className=\"hp-p2-body\">\n        Lorem ipsum dolor sit amet, consectetur adipiscing elit. Aliquam\n        vestibulum risus velit, ut placerat diam imperdiet nec. Aenean ex\n        turpis, feugiat sed euismod nec, iaculis id dui. Suspendisse.\n      </p>\n    </Modal>\n  </>\n);\n`;\n\nexport const yoda = `\nimport React, { useState } from \"react\";\n\nimport { Row, Col, Form, Input, Checkbox, Button, Modal } from \"antd\";\nimport { RiCloseFill, RiMailAddLine } from \"react-icons/ri\";\n\nimport popUpImage from \"../../../../assets/images/modal/pop-up.svg\";\n\nconst [PopupModalVisible, setPopupModalVisible] = useState(false);\nconst [PopupWidthModalVisible, setPopupWidthModalVisible] = useState(false);\nconst [FormModalVisible, setFormModalVisible] = useState(false);\nconst [FormWidthModalVisible, setFormWidthModalVisible] = useState(false);\n\nconst showPopupModal = () => {\n  setPopupModalVisible(true);\n};\n\nconst showPopupWidthModal = () => {\n  setPopupWidthModalVisible(true);\n};\n\nconst showFormModal = () => {\n  setFormModalVisible(true);\n};\n\nconst showFormWidthModal = () => {\n  setFormWidthModalVisible(true);\n};\n\n//--\n\nconst handlePopupOk = () => {\n  setPopupModalVisible(false);\n};\n\nconst handlePopupWidthOk = () => {\n  setPopupWidthModalVisible(false);\n};\n\nconst handleFormOk = () => {\n  setFormModalVisible(false);\n};\n\nconst handleFormWidthOk = () => {\n  setFormWidthModalVisible(false);\n};\n\n//--\n\nconst handlePopupCancel = () => {\n  setPopupModalVisible(false);\n};\n\nconst handlePopupWidthCancel = () => {\n  setPopupWidthModalVisible(false);\n};\n\nconst handleFormCancel = () => {\n  setFormModalVisible(false);\n};\n\nconst handleFormWidthCancel = () => {\n  setFormWidthModalVisible(false);\n};\n\nreturn (\n  <>\n    <Button\n      className=\"hp-mb-16 hp-mr-16\"\n      type=\"primary\"\n      ghost\n      onClick={showPopupModal}\n    >\n      Pop-up\n    </Button>\n\n    <Button\n      className=\"hp-mb-16 hp-mr-16\"\n      type=\"primary\"\n      ghost\n      onClick={showPopupWidthModal}\n    >\n      Pop-up Width\n    </Button>\n\n    <Button\n      className=\"hp-mb-16 hp-mr-16\"\n      type=\"primary\"\n      ghost\n      onClick={showFormModal}\n    >\n      Form\n    </Button>\n\n    <Button\n      className=\"hp-mb-16 hp-mr-16\"\n      type=\"primary\"\n      ghost\n      onClick={showFormWidthModal}\n    >\n      Form Width\n    </Button>\n\n    <Modal\n      width={416}\n      visible={PopupModalVisible}\n      onCancel={handlePopupCancel}\n      footer={false}\n      closable={false}\n      className=\"popup-modal\"\n    >\n      <div className=\"hp-text-center\">\n        <img src={popUpImage} alt=\"Pop-up\" />\n        <h3 className=\"hp-text-color-dark-bg\">Pop-up Title</h3>\n        <p className=\"hp-p2-body\">\n          Curabitur varius purus sed congue consectetur. Donec a leo\n          malesuada,\n        </p>\n        <Button\n          block\n          className=\"hp-mt-16\"\n          type=\"primary\"\n          icon={<RiMailAddLine className=\"remix-icon\" />}\n          onClick={handlePopupOk}\n        >\n          Subscribe\n        </Button>\n      </div>\n    </Modal>\n\n    <Modal\n      width={1000}\n      visible={PopupWidthModalVisible}\n      onCancel={handlePopupWidthCancel}\n      footer={false}\n      closable={false}\n      className=\"popup-modal\"\n    >\n      <Col className=\"hp-text-center\">\n        <img src={popUpImage} alt=\"Pop-up\" />\n        <Row justify=\"center\">\n          <Col md={14}>\n            <h3 className=\"hp-text-color-dark-bg\">Pop-up Title</h3>\n            <p className=\"hp-p2-body\">\n              Lorem ipsum dolor sit amet, consectetur adipiscing elit.\n              Nunc, urna arcu mattis sagittis ut velit ornare scelerisque.\n              Justo eget eleifend sed urna, risus. Augue ornare sit non\n              auctor consectetur. Amet.\n            </p>\n          </Col>\n        </Row>\n\n        <Row className=\"hp-mt-16\">\n          <Col span={12}>\n            <Button\n              block\n              type=\"primary\"\n              ghost\n              onClick={handlePopupWidthCancel}\n            >\n              Cancel\n            </Button>\n          </Col>\n\n          <Col span={12} className=\"hp-pl-8\">\n            <Button\n              block\n              type=\"primary\"\n              icon={<RiMailAddLine className=\"remix-icon\" />}\n              onClick={handlePopupWidthOk}\n            >\n              Subscribe\n            </Button>\n          </Col>\n        </Row>\n      </Col>\n    </Modal>\n\n    <Modal\n      title=\"Basic Modal\"\n      width={416}\n      visible={FormModalVisible}\n      onCancel={handleFormCancel}\n      footer={\n        <Button block type=\"primary\" ghost onClick={handleFormOk}>\n          Signup\n        </Button>\n      }\n      closeIcon={\n        <RiCloseFill\n          className=\"remix-icon text-color-black-100\"\n          size={24}\n        />\n      }\n    >\n      <Form\n        layout=\"vertical\"\n        name=\"basic\"\n        initialValues={{ remember: true }}\n      >\n        <Form.Item\n          label=\"Username\"\n          name=\"username\"\n          rules={[\n            { required: true, message: \"Please input your username!\" },\n          ]}\n        >\n          <Input />\n        </Form.Item>\n\n        <Form.Item\n          label=\"Password\"\n          name=\"password\"\n          rules={[\n            { required: true, message: \"Please input your password!\" },\n          ]}\n        >\n          <Input.Password />\n        </Form.Item>\n\n        <Form.Item name=\"remember\" valuePropName=\"checked\">\n          <Checkbox>Remember me</Checkbox>\n        </Form.Item>\n\n        <Form.Item>\n          <Button\n            block\n            type=\"primary\"\n            htmlType=\"submit\"\n            onClick={handleFormOk}\n          >\n            Button\n          </Button>\n        </Form.Item>\n      </Form>\n\n      <Button block type=\"text\" onClick={handleFormCancel}>\n        Cancel\n      </Button>\n    </Modal>\n\n    <Modal\n      title=\"Basic Modal\"\n      width={1000}\n      visible={FormWidthModalVisible}\n      onCancel={handleFormWidthCancel}\n      footer={\n        <Row gutter={[8, 8]} justify=\"end\">\n          <Col>\n            <Button type=\"primary\" ghost>\n              Delete\n              </Button>\n          </Col>\n\n          <Col>\n            <Button type=\"test\" onClick={handleFormWidthCancel}>\n              Cancel\n              </Button>\n          </Col>\n\n          <Col>\n            <Button\n              type=\"primary\"\n              htmlType=\"submit\"\n              onClick={handleFormWidthOk}\n            >\n              Confirm\n              </Button>\n          </Col>\n        </Row>\n      }\n      closeIcon={\n        <RiCloseFill\n          className=\"remix-icon text-color-black-100\"\n          size={24}\n        />\n      }\n    >\n      <Form\n        layout=\"vertical\"\n        name=\"basic\"\n        initialValues={{ remember: true }}\n      >\n        <Row>\n          <Col md={12} span={24}>\n            <Form.Item\n              label=\"First Name\"\n              name=\"firstname\"\n              rules={[\n                {\n                  required: true,\n                  message: \"Please input your firstname!\",\n                },\n              ]}\n            >\n              <Input />\n            </Form.Item>\n          </Col>\n\n          <Col md={12} span={24}>\n            <Form.Item\n              className=\"hp-pl-sm-0 hp-pl-16\"\n              label=\"Last Name\"\n              name=\"lastname\"\n              rules={[\n                {\n                  required: true,\n                  message: \"Please input your lastname!\",\n                },\n              ]}\n            >\n              <Input />\n            </Form.Item>\n          </Col>\n        </Row>\n\n        <Row>\n          <Col md={12} span={24}>\n            <Form.Item\n              label=\"Password\"\n              name=\"password\"\n              rules={[\n                { required: true, message: \"At least 6 Character\" },\n              ]}\n            >\n              <Input.Password />\n            </Form.Item>\n          </Col>\n\n          <Col md={12} span={24}>\n            <Form.Item\n              className=\"hp-pl-sm-0 hp-pl-16\"\n              label=\"Zip Code\"\n              name=\"zipcode\"\n              rules={[{ required: true, message: \"1234\" }]}\n            >\n              <Input />\n            </Form.Item>\n          </Col>\n        </Row>\n\n        <Row>\n          <Col span={24}>\n            <Form.Item\n              label=\"Address\"\n              name=\"address\"\n              rules={[{ required: true, message: \"St. 200 etc.\" }]}\n            >\n              <Input.TextArea />\n            </Form.Item>\n          </Col>\n        </Row>\n      </Form>\n    </Modal>\n  </>\n);\n`;\n","import React, { useState } from \"react\";\n\nimport SyntaxHighlighter from \"react-syntax-highlighter\";\nimport { monoBlue } from \"react-syntax-highlighter/dist/esm/styles/hljs\";\nimport { information } from \"./code.js\";\n\nimport { Card, Row, Col, Button, Modal } from \"antd\";\nimport {\n  RiCheckboxCircleLine,\n  RiAlertLine,\n  RiInformationLine,\n  RiCodeSSlashLine,\n} from \"react-icons/ri\";\n\nexport default function InfoModal() {\n  const [checkedCode, setCheckedCode] = useState(false);\n  const [codeClass, setCodeClass] = useState(false);\n\n  function toggleChecked() {\n    setTimeout(() => setCodeClass(!codeClass), 100);\n    setCheckedCode(!checkedCode);\n  }\n\n  function info() {\n    Modal.info({\n      icon: (\n        <span className=\"remix-icon\">\n          <RiInformationLine />\n        </span>\n      ),\n      title: (\n        <h5 className=\"hp-mb-0 hp-font-weight-500\">This is Info message</h5>\n      ),\n      content: (\n        <div>\n          <p className=\"hp-p1-body\">Some contents.</p>\n        </div>\n      ),\n      onOk() {},\n    });\n  }\n\n  function success() {\n    Modal.success({\n      icon: (\n        <span className=\"remix-icon\">\n          <RiCheckboxCircleLine />\n        </span>\n      ),\n      title: (\n        <h5 className=\"hp-mb-0 hp-font-weight-500\">This is Success message</h5>\n      ),\n      content: (\n        <div>\n          <p className=\"hp-p1-body\">Some contents.</p>\n        </div>\n      ),\n    });\n  }\n\n  function error() {\n    Modal.error({\n      icon: (\n        <span className=\"remix-icon\">\n          <RiAlertLine />\n        </span>\n      ),\n      title: (\n        <h5 className=\"hp-mb-0 hp-font-weight-500\">This is Error message</h5>\n      ),\n      content: (\n        <div>\n          <p className=\"hp-p1-body\">Some contents.</p>\n        </div>\n      ),\n    });\n  }\n\n  function warning() {\n    Modal.warning({\n      icon: (\n        <span className=\"remix-icon\">\n          <RiAlertLine />\n        </span>\n      ),\n      title: (\n        <h5 className=\"hp-mb-0 hp-font-weight-500\">This is Warning message</h5>\n      ),\n      content: (\n        <div>\n          <p className=\"hp-p1-body\">Some contents.</p>\n        </div>\n      ),\n    });\n  }\n\n  return (\n    <Card className=\"hp-border-color-black-40\">\n      <Row>\n        <Col className=\"hp-mb-16\" span={24}>\n          <Row>\n            <Col lg={12} span={20}>\n              <h4>Information modal dialog</h4>\n              <p className=\"hp-p1-body\">\n                In the various types of information modal dialog, only one\n                button to close dialog is provided.\n              </p>\n            </Col>\n\n            <Col lg={12} span={4} className=\"hp-text-right\">\n              <Button\n                onClick={toggleChecked}\n                type=\"text\"\n                icon={<RiCodeSSlashLine className=\"hp-text-color-black-80\" />}\n              />\n            </Col>\n          </Row>\n        </Col>\n\n        <Col span={24}>\n          <Button\n            className=\"hp-mb-16 hp-mr-16\"\n            type=\"primary\"\n            ghost\n            onClick={info}\n          >\n            Info\n          </Button>\n\n          <Button\n            className=\"hp-mb-16 hp-mr-16\"\n            type=\"primary\"\n            ghost\n            onClick={success}\n          >\n            Success\n          </Button>\n\n          <Button\n            className=\"hp-mb-16 hp-mr-16\"\n            type=\"primary\"\n            ghost\n            onClick={error}\n          >\n            Error\n          </Button>\n\n          <Button\n            className=\"hp-mb-16 hp-mr-16\"\n            type=\"primary\"\n            ghost\n            onClick={warning}\n          >\n            Warning\n          </Button>\n        </Col>\n      </Row>\n\n      {checkedCode && (\n        <SyntaxHighlighter\n          language=\"javascript\"\n          className={`show-code hp-mt-24 ${codeClass && \"show-code-active\"}`}\n          style={monoBlue}\n        >\n          {information}\n        </SyntaxHighlighter>\n      )}\n    </Card>\n  );\n}\n","import React, { useState } from \"react\";\n\nimport SyntaxHighlighter from \"react-syntax-highlighter\";\nimport { monoBlue } from \"react-syntax-highlighter/dist/esm/styles/hljs\";\nimport { customWidth } from \"./code.js\";\n\nimport { Card, Row, Col, Button, Modal } from \"antd\";\nimport { RiCloseFill, RiCodeSSlashLine } from \"react-icons/ri\";\n\nexport default function CustomizeWidthModal() {\n  const [visible, setVisible] = useState(false);\n  const [checkedCode, setCheckedCode] = useState(false);\n  const [codeClass, setCodeClass] = useState(false);\n\n  function toggleChecked() {\n    setTimeout(() => setCodeClass(!codeClass), 100);\n    setCheckedCode(!checkedCode);\n  }\n\n  return (\n    <Card className=\"hp-border-color-black-40\">\n      <Row>\n        <Col className=\"hp-mb-16\" span={24}>\n          <Row>\n            <Col lg={12} span={20}>\n              <h4>To customize the width of modal</h4>\n              <p className=\"hp-p1-body\">\n                Use width to set the width of the modal dialog.\n              </p>\n            </Col>\n\n            <Col lg={12} span={4} className=\"hp-text-right\">\n              <Button\n                onClick={toggleChecked}\n                type=\"text\"\n                icon={<RiCodeSSlashLine className=\"hp-text-color-black-80\" />}\n              />\n            </Col>\n          </Row>\n        </Col>\n\n        <Col span={24}>\n          <Button type=\"primary\" onClick={() => setVisible(true)}>\n            Open Modal of 1000px width\n          </Button>\n\n          <Modal\n            title={<h5 className=\"hp-mb-0\">Modal 1000px width</h5>}\n            centered\n            visible={visible}\n            onOk={() => setVisible(false)}\n            onCancel={() => setVisible(false)}\n            width={1000}\n            footer={\n              <>\n                <Button onClick={() => setVisible(false)} type=\"text\">\n                  Cancel\n                </Button>\n\n                <Button onClick={() => setVisible(false)} type=\"primary\">\n                  Confirm\n                </Button>\n              </>\n            }\n            closeIcon={\n              <RiCloseFill\n                className=\"remix-icon hp-text-color-black-100 hp-text-color-dark-0\"\n                size={24}\n              />\n            }\n          >\n            <p className=\"hp-p2-body\">\n              Lorem ipsum dolor sit amet, consectetur adipiscing elit. Aliquam\n              vestibulum risus velit, ut placerat diam imperdiet nec. Aenean ex\n              turpis, feugiat sed euismod nec, iaculis id dui. Suspendisse.\n            </p>\n          </Modal>\n        </Col>\n      </Row>\n\n      {checkedCode && (\n        <SyntaxHighlighter\n          language=\"javascript\"\n          className={`show-code hp-mt-24 ${codeClass && \"show-code-active\"}`}\n          style={monoBlue}\n        >\n          {customWidth}\n        </SyntaxHighlighter>\n      )}\n    </Card>\n  );\n}\n","import React, { useState } from \"react\";\n\nimport SyntaxHighlighter from \"react-syntax-highlighter\";\nimport { monoBlue } from \"react-syntax-highlighter/dist/esm/styles/hljs\";\nimport { position } from \"./code.js\";\n\nimport { Card, Row, Col, Button, Modal } from \"antd\";\nimport { RiCloseFill, RiCodeSSlashLine } from \"react-icons/ri\";\n\nexport default function PositionModal() {\n  const [modal1Visible, setIsModal1Visible] = useState(false);\n  const [modal2Visible, setIsModal2Visible] = useState(false);\n  const [checkedCode, setCheckedCode] = useState(false);\n  const [codeClass, setCodeClass] = useState(false);\n\n  function toggleChecked() {\n    setTimeout(() => setCodeClass(!codeClass), 100);\n    setCheckedCode(!checkedCode);\n  }\n\n  function setModal1Visible(modal1Visible) {\n    setIsModal1Visible(modal1Visible);\n  }\n\n  function setModal2Visible(modal2Visible) {\n    setIsModal2Visible(modal2Visible);\n  }\n\n  return (\n    <Card className=\"hp-border-color-black-40\">\n      <Row>\n        <Col className=\"hp-mb-16\" span={24}>\n          <Row>\n            <Col lg={12} span={20}>\n              <h4>To customize the position of modal</h4>\n              <p className=\"hp-p1-body\">\n                You can use centered,style.top or other styles to set position\n                of modal dialog.\n              </p>\n            </Col>\n\n            <Col lg={12} span={4} className=\"hp-text-right\">\n              <Button\n                onClick={toggleChecked}\n                type=\"text\"\n                icon={<RiCodeSSlashLine className=\"hp-text-color-black-80\" />}\n              />\n            </Col>\n          </Row>\n        </Col>\n\n        <Col span={24}>\n          <Col>\n            <Button type=\"primary\" onClick={() => setModal1Visible(true)}>\n              Modal dialog at 20px to Top\n            </Button>\n\n            <Modal\n              title={<h5 className=\"hp-mb-0\">20px to Top</h5>}\n              style={{ top: 20 }}\n              visible={modal1Visible}\n              onOk={() => setModal1Visible(false)}\n              onCancel={() => setModal1Visible(false)}\n              closeIcon={\n                <RiCloseFill\n                  className=\"remix-icon hp-text-color-black-100 hp-text-color-dark-0\"\n                  size={24}\n                />\n              }\n            >\n              <p className=\"hp-p2-body\">\n                Lorem ipsum dolor sit amet, consectetur adipiscing elit. Aliquam\n                vestibulum risus velit, ut placerat diam imperdiet nec. Aenean\n                ex turpis, feugiat sed euismod nec, iaculis id dui. Suspendisse.\n              </p>\n            </Modal>\n          </Col>\n\n          <Col className=\"hp-mt-16\">\n            <Button type=\"primary\" onClick={() => setModal2Visible(true)}>\n              Vertically centered modal dialog\n            </Button>\n\n            <Modal\n              title={\n                <h5 className=\"hp-mb-0\">Vertically centered modal dialog</h5>\n              }\n              centered\n              visible={modal2Visible}\n              onOk={() => setModal2Visible(false)}\n              onCancel={() => setModal2Visible(false)}\n              closeIcon={\n                <RiCloseFill\n                  className=\"remix-icon hp-text-color-black-100 hp-text-color-dark-0\"\n                  size={24}\n                />\n              }\n            >\n              <p className=\"hp-p2-body\">\n                Lorem ipsum dolor sit amet, consectetur adipiscing elit. Aliquam\n                vestibulum risus velit, ut placerat diam imperdiet nec. Aenean\n                ex turpis, feugiat sed euismod nec, iaculis id dui. Suspendisse.\n              </p>\n            </Modal>\n          </Col>\n        </Col>\n      </Row>\n\n      {checkedCode && (\n        <SyntaxHighlighter\n          language=\"javascript\"\n          className={`show-code hp-mt-24 ${codeClass && \"show-code-active\"}`}\n          style={monoBlue}\n        >\n          {position}\n        </SyntaxHighlighter>\n      )}\n    </Card>\n  );\n}\n","import React, { useState } from \"react\";\n\nimport SyntaxHighlighter from \"react-syntax-highlighter\";\nimport { monoBlue } from \"react-syntax-highlighter/dist/esm/styles/hljs\";\nimport { confirmation } from \"./code.js\";\n\nimport { Card, Row, Col, Button, Modal } from \"antd\";\nimport { RiInformationLine, RiCodeSSlashLine } from \"react-icons/ri\";\n\nconst { confirm } = Modal;\n\nexport default function ConfirmationModal() {\n  const [checkedCode, setCheckedCode] = useState(false);\n  const [codeClass, setCodeClass] = useState(false);\n\n  function toggleChecked() {\n    setTimeout(() => setCodeClass(!codeClass), 100);\n    setCheckedCode(!checkedCode);\n  }\n\n  function showConfirm() {\n    confirm({\n      title: (\n        <h5 className=\"hp-mb-0 hp-font-weight-500\">\n          Do you Want to delete these items?\n        </h5>\n      ),\n      icon: (\n        <span className=\"remix-icon\">\n          <RiInformationLine />\n        </span>\n      ),\n      content: (\n        <p className=\"hp-p1-body\">Some descriptions</p>\n      ),\n      onOk() {},\n      onCancel() {},\n    });\n  }\n\n  function showPromiseConfirm() {\n    confirm({\n      title: (\n        <h5 className=\"hp-mb-0 hp-font-weight-500\">\n          Do you Want to delete these items?\n        </h5>\n      ),\n      icon: (\n        <span className=\"remix-icon\">\n          <RiInformationLine />\n        </span>\n      ),\n      content: (\n        <p className=\"hp-p1-body\">\n          When clicked the OK button, this dialog will be closed after 1 second\n        </p>\n      ),\n      onOk() {\n        return new Promise((resolve, reject) => {\n          setTimeout(Math.random() > 0.5 ? resolve : reject, 1000);\n        }).catch(() => console.log(\"Oops errors!\"));\n      },\n      onCancel() {},\n    });\n  }\n\n  function showDeleteConfirm() {\n    confirm({\n      title: (\n        <h5 className=\"hp-mb-0 hp-font-weight-500\">\n          Are you sure delete this task?\n        </h5>\n      ),\n      icon: (\n        <span className=\"remix-icon\">\n          <RiInformationLine />\n        </span>\n      ),\n      content: (\n        <p className=\"hp-p1-body\">Some descriptions</p>\n      ),\n      okText: \"Yes\",\n      okType: \"danger\",\n      cancelText: \"No\",\n      onOk() {},\n      onCancel() {},\n    });\n  }\n\n  function showPropsConfirm() {\n    confirm({\n      title: (\n        <h5 className=\"hp-mb-0 hp-font-weight-500\">\n          Are you sure delete this task?\n        </h5>\n      ),\n      icon: (\n        <span className=\"remix-icon\">\n          <RiInformationLine />\n        </span>\n      ),\n      content: (\n        <p className=\"hp-p1-body\">Some descriptions</p>\n      ),\n      okText: \"Yes\",\n      okType: \"danger\",\n      okButtonProps: {\n        disabled: true,\n      },\n      cancelText: \"No\",\n      onOk() {},\n      onCancel() {},\n    });\n  }\n\n  return (\n    <Card className=\"hp-border-color-black-40\">\n      <Row>\n        <Col className=\"hp-mb-16\" span={24}>\n          <Row>\n            <Col lg={12} span={20}>\n              <h4>Confirmation modal dialog</h4>\n              <p className=\"hp-p1-body\">\n                Use confirm() to show a confirmation modal dialog. Let\n                onCancel/onOk function return a promise object to delay closing\n                the dialog.\n              </p>\n            </Col>\n\n            <Col lg={12} span={4} className=\"hp-text-right\">\n              <Button\n                onClick={toggleChecked}\n                type=\"text\"\n                icon={<RiCodeSSlashLine className=\"hp-text-color-black-80\" />}\n              />\n            </Col>\n          </Row>\n        </Col>\n\n        <Col span={24}>\n          <Button\n            className=\"hp-mb-16 hp-mr-16\"\n            type=\"primary\"\n            ghost\n            onClick={showConfirm}\n          >\n            Confirm\n          </Button>\n\n          <Button\n            className=\"hp-mb-16 hp-mr-16\"\n            type=\"primary\"\n            ghost\n            onClick={showPromiseConfirm}\n          >\n            With promise\n          </Button>\n\n          <Button\n            className=\"hp-mb-16 hp-mr-16\"\n            type=\"primary\"\n            ghost\n            onClick={showDeleteConfirm}\n          >\n            Delete\n          </Button>\n\n          <Button\n            className=\"hp-mb-16 hp-mr-16\"\n            type=\"primary\"\n            ghost\n            onClick={showPropsConfirm}\n          >\n            With extra props\n          </Button>\n        </Col>\n      </Row>\n\n      {checkedCode && (\n        <SyntaxHighlighter\n          language=\"javascript\"\n          className={`show-code hp-mt-24 ${codeClass && \"show-code-active\"}`}\n          style={monoBlue}\n        >\n          {confirmation}\n        </SyntaxHighlighter>\n      )}\n    </Card>\n  );\n}\n","export default __webpack_public_path__ + \"static/media/pop-up.a5bde0de.svg\";","import React, { useState } from \"react\";\n\nimport SyntaxHighlighter from \"react-syntax-highlighter\";\nimport { monoBlue } from \"react-syntax-highlighter/dist/esm/styles/hljs\";\nimport { yoda } from \"./code.js\";\n\nimport { Card, Row, Col, Form, Input, Checkbox, Button, Modal } from \"antd\";\nimport { RiCloseFill, RiMailAddLine, RiCodeSSlashLine } from \"react-icons/ri\";\n\nimport popUpImage from \"../../../../assets/images/modal/pop-up.svg\";\n\nexport default function YodaModal() {\n  const [PopupModalVisible, setPopupModalVisible] = useState(false);\n  const [PopupWidthModalVisible, setPopupWidthModalVisible] = useState(false);\n  const [FormModalVisible, setFormModalVisible] = useState(false);\n  const [FormWidthModalVisible, setFormWidthModalVisible] = useState(false);\n  const [checkedCode, setCheckedCode] = useState(false);\n  const [codeClass, setCodeClass] = useState(false);\n\n  function toggleChecked() {\n    setTimeout(() => setCodeClass(!codeClass), 100);\n    setCheckedCode(!checkedCode);\n  }\n\n  //--\n\n  const showPopupModal = () => {\n    setPopupModalVisible(true);\n  };\n\n  const showPopupWidthModal = () => {\n    setPopupWidthModalVisible(true);\n  };\n\n  const showFormModal = () => {\n    setFormModalVisible(true);\n  };\n\n  const showFormWidthModal = () => {\n    setFormWidthModalVisible(true);\n  };\n\n  //--\n\n  const handlePopupOk = () => {\n    setPopupModalVisible(false);\n  };\n\n  const handlePopupWidthOk = () => {\n    setPopupWidthModalVisible(false);\n  };\n\n  const handleFormOk = () => {\n    setFormModalVisible(false);\n  };\n\n  const handleFormWidthOk = () => {\n    setFormWidthModalVisible(false);\n  };\n\n  //--\n\n  const handlePopupCancel = () => {\n    setPopupModalVisible(false);\n  };\n\n  const handlePopupWidthCancel = () => {\n    setPopupWidthModalVisible(false);\n  };\n\n  const handleFormCancel = () => {\n    setFormModalVisible(false);\n  };\n\n  const handleFormWidthCancel = () => {\n    setFormWidthModalVisible(false);\n  };\n\n  return (\n    <Card className=\"hp-border-color-black-40\">\n      <Row>\n        <Col className=\"hp-mb-16\" span={24}>\n          <Row>\n            <Col lg={12} span={20}>\n              <h4>Yoda Modal</h4>\n              <p className=\"hp-p1-body\">Special modals.</p>\n            </Col>\n\n            <Col lg={12} span={4} className=\"hp-text-right\">\n              <Button\n                onClick={toggleChecked}\n                type=\"text\"\n                icon={<RiCodeSSlashLine className=\"hp-text-color-black-80\" />}\n              />\n            </Col>\n          </Row>\n        </Col>\n\n        <Col span={24}>\n          <Button\n            className=\"hp-mb-16 hp-mr-16\"\n            type=\"primary\"\n            ghost\n            onClick={showPopupModal}\n          >\n            Pop-up\n          </Button>\n\n          <Button\n            className=\"hp-mb-16 hp-mr-16\"\n            type=\"primary\"\n            ghost\n            onClick={showPopupWidthModal}\n          >\n            Pop-up Width\n          </Button>\n\n          <Button\n            className=\"hp-mb-16 hp-mr-16\"\n            type=\"primary\"\n            ghost\n            onClick={showFormModal}\n          >\n            Form\n          </Button>\n\n          <Button\n            className=\"hp-mb-16 hp-mr-16\"\n            type=\"primary\"\n            ghost\n            onClick={showFormWidthModal}\n          >\n            Form Width\n          </Button>\n\n          <Modal\n            width={416}\n            visible={PopupModalVisible}\n            onCancel={handlePopupCancel}\n            footer={false}\n            closable={false}\n            className=\"popup-modal\"\n          >\n            <div className=\"hp-text-center\">\n              <img src={popUpImage} alt=\"Pop-up\" />\n              <h3 className=\"hp-text-color-dark-bg\">Pop-up Title</h3>\n              <p className=\"hp-p2-body\">\n                Curabitur varius purus sed congue consectetur. Donec a leo\n                malesuada,\n              </p>\n              <Button\n                block\n                className=\"hp-mt-16\"\n                type=\"primary\"\n                icon={<RiMailAddLine className=\"remix-icon\" />}\n                onClick={handlePopupOk}\n              >\n                Subscribe\n              </Button>\n            </div>\n          </Modal>\n\n          <Modal\n            width={1000}\n            visible={PopupWidthModalVisible}\n            onCancel={handlePopupWidthCancel}\n            footer={false}\n            closable={false}\n            className=\"popup-modal\"\n          >\n            <Col className=\"hp-text-center\">\n              <img src={popUpImage} alt=\"Pop-up\" />\n              <Row justify=\"center\">\n                <Col md={14}>\n                  <h3 className=\"hp-text-color-dark-bg\">Pop-up Title</h3>\n                  <p className=\"hp-p2-body\">\n                    Lorem ipsum dolor sit amet, consectetur adipiscing elit.\n                    Nunc, urna arcu mattis sagittis ut velit ornare scelerisque.\n                    Justo eget eleifend sed urna, risus. Augue ornare sit non\n                    auctor consectetur. Amet.\n                  </p>\n                </Col>\n              </Row>\n\n              <Row className=\"hp-mt-16\">\n                <Col span={12}>\n                  <Button\n                    block\n                    type=\"primary\"\n                    ghost\n                    onClick={handlePopupWidthCancel}\n                  >\n                    Cancel\n                  </Button>\n                </Col>\n\n                <Col span={12} className=\"hp-pl-8\">\n                  <Button\n                    block\n                    type=\"primary\"\n                    icon={<RiMailAddLine className=\"remix-icon\" />}\n                    onClick={handlePopupWidthOk}\n                  >\n                    Subscribe\n                  </Button>\n                </Col>\n              </Row>\n            </Col>\n          </Modal>\n\n          <Modal\n            title={<h5 className=\"hp-mb-0\">Basic Modal</h5>}\n            width={416}\n            visible={FormModalVisible}\n            onCancel={handleFormCancel}\n            footer={\n              <Button block type=\"primary\" ghost onClick={handleFormOk}>\n                Signup\n              </Button>\n            }\n            closeIcon={\n              <RiCloseFill\n                className=\"remix-icon hp-text-color-black-100 hp-text-color-dark-0\"\n                size={24}\n              />\n            }\n          >\n            <Form\n              layout=\"vertical\"\n              name=\"basic\"\n              initialValues={{ remember: true }}\n            >\n              <Form.Item\n                label=\"Username\"\n                name=\"username\"\n                rules={[\n                  { required: true, message: \"Please input your username!\" },\n                ]}\n              >\n                <Input />\n              </Form.Item>\n\n              <Form.Item\n                label=\"Password\"\n                name=\"password\"\n                rules={[\n                  { required: true, message: \"Please input your password!\" },\n                ]}\n              >\n                <Input.Password />\n              </Form.Item>\n\n              <Form.Item name=\"remember\" valuePropName=\"checked\">\n                <Checkbox>Remember me</Checkbox>\n              </Form.Item>\n\n              <Form.Item>\n                <Button\n                  block\n                  type=\"primary\"\n                  htmlType=\"submit\"\n                  onClick={handleFormOk}\n                >\n                  Button\n                </Button>\n              </Form.Item>\n            </Form>\n\n            <Button block type=\"text\" onClick={handleFormCancel}>\n              Cancel\n            </Button>\n          </Modal>\n\n          <Modal\n            title={<h5 className=\"hp-mb-0\">Basic Modal</h5>}\n            width={1000}\n            visible={FormWidthModalVisible}\n            onCancel={handleFormWidthCancel}\n            footer={\n              <Row gutter={[8, 8]} justify=\"end\">\n                <Col>\n                  <Button type=\"primary\" ghost>\n                    Delete\n                    </Button>\n                </Col>\n\n                <Col>\n                  <Button type=\"test\" onClick={handleFormWidthCancel}>\n                    Cancel\n                    </Button>\n                </Col>\n\n                <Col>\n                  <Button\n                    type=\"primary\"\n                    htmlType=\"submit\"\n                    onClick={handleFormWidthOk}\n                  >\n                    Confirm\n                    </Button>\n                </Col>\n              </Row>\n            }\n            closeIcon={\n              <RiCloseFill\n                className=\"remix-icon hp-text-color-black-100 hp-text-color-dark-0\"\n                size={24}\n              />\n            }\n          >\n            <Form\n              layout=\"vertical\"\n              name=\"basic\"\n              initialValues={{ remember: true }}\n            >\n              <Row>\n                <Col md={12} span={24}>\n                  <Form.Item\n                    label=\"First Name\"\n                    name=\"firstname\"\n                    rules={[\n                      {\n                        required: true,\n                        message: \"Please input your firstname!\",\n                      },\n                    ]}\n                  >\n                    <Input />\n                  </Form.Item>\n                </Col>\n\n                <Col md={12} span={24}>\n                  <Form.Item\n                    className=\"hp-pl-sm-0 hp-pl-16\"\n                    label=\"Last Name\"\n                    name=\"lastname\"\n                    rules={[\n                      {\n                        required: true,\n                        message: \"Please input your lastname!\",\n                      },\n                    ]}\n                  >\n                    <Input />\n                  </Form.Item>\n                </Col>\n              </Row>\n\n              <Row>\n                <Col md={12} span={24}>\n                  <Form.Item\n                    label=\"Password\"\n                    name=\"password\"\n                    rules={[\n                      { required: true, message: \"At least 6 Character\" },\n                    ]}\n                  >\n                    <Input.Password />\n                  </Form.Item>\n                </Col>\n\n                <Col md={12} span={24}>\n                  <Form.Item\n                    className=\"hp-pl-sm-0 hp-pl-16\"\n                    label=\"Zip Code\"\n                    name=\"zipcode\"\n                    rules={[{ required: true, message: \"1234\" }]}\n                  >\n                    <Input />\n                  </Form.Item>\n                </Col>\n              </Row>\n\n              <Row>\n                <Col span={24}>\n                  <Form.Item\n                    label=\"Address\"\n                    name=\"address\"\n                    rules={[{ required: true, message: \"St. 200 etc.\" }]}\n                  >\n                    <Input.TextArea />\n                  </Form.Item>\n                </Col>\n              </Row>\n            </Form>\n          </Modal>\n        </Col>\n      </Row >\n\n      { checkedCode && (\n        <SyntaxHighlighter\n          language=\"javascript\"\n          className={`show-code hp-mt-24 ${codeClass && \"show-code-active\"}`}\n          style={monoBlue}\n        >\n          {yoda}\n        </SyntaxHighlighter>\n      )\n      }\n    </Card >\n  );\n}","import React from \"react\";\n\nimport { Row, Col } from \"antd\";\n\nimport PageContent from \"../../../../layout/components/content/page-content\";\nimport BasicModal from \"./basic\";\nimport InfoModal from \"./info\";\nimport CustomizeWidthModal from \"./customizeWidth\";\nimport PositionModal from \"./position\";\nimport ConfirmationModal from \"./confirmation\";\nimport YodaModal from \"./yoda\";\n\nexport default function Modal() {\n  return (\n    <Row gutter={[32, 32]} className=\"hp-mb-32\">\n      <Col span={24}>\n        <PageContent\n          title=\"Modal\"\n          desc=\"Modal dialogs.\"\n          breadcrumb={[\n            {\n              title: \"Components\",\n              link: \"/components/components-page\"\n            },\n            {\n              title: \"Feedback\",\n            },\n            {\n              title: \"Modal\",\n            }\n          ]}\n        />\n      </Col>\n\n      <Col span={24}>\n        <BasicModal />\n      </Col>\n\n      <Col span={24}>\n        <InfoModal />\n      </Col>\n\n      <Col span={24}>\n        <CustomizeWidthModal />\n      </Col>\n\n      <Col span={24}>\n        <ConfirmationModal />\n      </Col>\n\n      <Col span={24}>\n        <PositionModal />\n      </Col>\n\n      <Col span={24}>\n        <YodaModal />\n      </Col>\n    </Row>\n  );\n}\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nimport { Breadcrumb, Col, Row } from \"antd\";\n\nexport default function PageContent(props) {\n  const { title, breadcrumb, desc } = props;\n\n  return (\n    <Col span={24} className=\"hp-bg-black-bg hp-py-sm-32 hp-py-64 hp-px-sm-24 hp-px-md-48 hp-px-80 hp-overflow-hidden\" style={{ borderRadius: 32 }}>\n      <svg\n        width={358}\n        height={336}\n        fill=\"none\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n        className=\"hp-position-absolute-bottom-right hp-rtl-scale-x-n1\"\n      >\n        <path\n          d=\"M730.404 135.471 369.675-6.641l88.802 164.001-243.179-98.8 246.364 263.281-329.128-126.619 114.698 166.726-241.68-62.446\"\n          stroke=\"url(#a)\"\n          strokeWidth={40}\n          strokeLinejoin=\"bevel\"\n        />\n        <defs>\n          <linearGradient\n            id=\"a\"\n            x1={315.467}\n            y1={6.875}\n            x2={397.957}\n            y2={337.724}\n            gradientUnits=\"userSpaceOnUse\"\n          >\n            <stop stopColor=\"#fff\" />\n            <stop offset={1} stopColor=\"#fff\" stopOpacity={0} />\n          </linearGradient>\n        </defs>\n      </svg>\n\n      <Row>\n        <Col sm={12} span={24}>\n          <Row>\n            {\n              title && (\n                <Col span={24}>\n                  <h1 className=\"hp-mb-0 hp-text-color-black-0\">{title}</h1>\n                </Col>\n              )\n            }\n\n            {\n              breadcrumb && (\n                <Col span={24}>\n                  <Breadcrumb className=\"hp-d-flex hp-flex-wrap hp-mt-24\">\n                    <Breadcrumb.Item>\n                      <Link to=\"/\" className=\"hp-text-color-black-0 hp-hover-text-color-primary-2\">Home</Link>\n                    </Breadcrumb.Item>\n\n                    {\n                      breadcrumb.map((item, index) => (\n                        <Breadcrumb.Item key={index}>\n                          <Link to={item.link ? item.link : '#'} className={`hp-text-color-black-0${item.link ? ' hp-hover-text-color-primary-2' : ''}`}>{item.title}</Link>\n                        </Breadcrumb.Item>\n                      ))\n                    }\n                  </Breadcrumb>\n                </Col>\n              )\n            }\n\n            {\n              desc && (\n                <Col span={24}>\n                  <p className=\"h5 hp-mb-0 hp-mt-24 hp-text-color-black-0\">{desc}</p>\n                </Col>\n              )\n            }\n          </Row>\n        </Col>\n      </Row>\n    </Col>\n  );\n}\n"],"sourceRoot":""}