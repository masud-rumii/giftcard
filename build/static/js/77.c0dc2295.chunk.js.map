{"version":3,"sources":["view/components/feedback/message/normal.jsx","view/components/feedback/message/code.js","view/components/feedback/message/types.jsx","view/components/feedback/message/duration.jsx","view/components/feedback/message/loading.jsx","view/components/feedback/message/index.jsx","layout/components/content/page-content/index.jsx"],"names":["NormalMessage","useState","checkedCode","setCheckedCode","codeClass","setCodeClass","className","span","lg","onClick","setTimeout","type","icon","message","info","content","language","style","monoBlue","TypesMessage","ghost","success","error","warning","DurationMessage","duration","LoadingIndicatorMessage","hide","loading","Message","gutter","title","desc","breadcrumb","link","PageContent","props","borderRadius","width","height","fill","xmlns","d","stroke","strokeWidth","strokeLinejoin","id","x1","y1","x2","y2","gradientUnits","stopColor","offset","stopOpacity","sm","Item","to","map","item","index"],"mappings":"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","file":"static/js/77.c0dc2295.chunk.js","sourcesContent":["import React, { useState } from \"react\";\n\nimport SyntaxHighlighter from \"react-syntax-highlighter\";\nimport { monoBlue } from \"react-syntax-highlighter/dist/esm/styles/hljs\";\nimport { normal } from \"./code.js\";\n\nimport { Card, Row, Col, Button, message } from \"antd\";\nimport { RiErrorWarningLine, RiCodeSSlashLine } from \"react-icons/ri\";\n\nexport default function NormalMessage() {\n  const [checkedCode, setCheckedCode] = useState(false);\n  const [codeClass, setCodeClass] = useState(false);\n\n  function toggleChecked() {\n    setTimeout(() => setCodeClass(!codeClass), 100);\n    setCheckedCode(!checkedCode);\n  }\n\n  const info = () => {\n    message.info({\n      content: \"This is a normal message\",\n      icon: <RiErrorWarningLine className=\"remix-icon\" />,\n    });\n  };\n\n  return (\n    <Card className=\"hp-border-color-black-40\">\n      <Row>\n        <Col className=\"hp-mb-16\" span={24}>\n          <Row>\n            <Col lg={12} span={20}>\n              <h4>Normal Prompt</h4>\n              <p className=\"hp-p1-body\">Normal message for information.</p>\n            </Col>\n\n            <Col lg={12} span={4} className=\"hp-text-right\">\n              <Button\n                onClick={toggleChecked}\n                type=\"text\"\n                icon={<RiCodeSSlashLine className=\"hp-text-color-black-80\" />}\n              />\n            </Col>\n          </Row>\n        </Col>\n\n        <Col span={24}>\n          <Button type=\"primary\" onClick={info}>\n            Display normal message\n          </Button>\n        </Col>\n      </Row>\n\n      {checkedCode && (\n        <SyntaxHighlighter\n          language=\"javascript\"\n          className={`show-code hp-mt-24 ${codeClass && \"show-code-active\"}`}\n          style={monoBlue}\n        >\n          {normal}\n        </SyntaxHighlighter>\n      )}\n    </Card>\n  );\n}\n","export const normal = `\nimport { Button, message } from \"antd\";\nimport { RiErrorWarningLine } from \"react-icons/ri\";\n\nconst info = () => {\n  message.info({\n    content: \"This is a normal message\",\n    icon: <RiErrorWarningLine className=\"remix-icon\" />,\n  });\n};\n\nreturn (\n  <Button type=\"primary\" onClick={info}>\n    Display normal message\n  </Button>\n);\n`;\n\nexport const types = `\nimport { Button, message } from \"antd\";\nimport {\n  RiCheckboxCircleLine,\n  RiErrorWarningLine,\n  RiCloseCircleLine,\n} from \"react-icons/ri\";\n\nconst success = () => {\n  message.success({\n    content: \"This is a success message\",\n    icon: <RiCheckboxCircleLine className=\"remix-icon\" />,\n  });\n};\n\nconst error = () => {\n  message.error({\n    content: \"This is an error message\",\n    icon: <RiCloseCircleLine className=\"remix-icon\" />,\n  });\n};\n\nconst warning = () => {\n  message.warning({\n    content: \"This is a warning message\",\n    icon: <RiErrorWarningLine className=\"remix-icon\" />,\n  });\n};\n\nreturn (\n  <>\n    <Button\n      className=\"hp-mb-16 hp-mr-16\"\n      type=\"primary\"\n      ghost\n      onClick={success}\n    >\n      Success\n    </Button>\n    \n    <Button\n      className=\"hp-mb-16 hp-mr-16\"\n      type=\"primary\"\n      ghost\n      onClick={error}\n    >\n      Error\n    </Button>\n    \n    <Button\n      className=\"hp-mb-16 hp-mr-16\"\n      type=\"primary\"\n      ghost\n      onClick={warning}\n    >\n      Warning\n    </Button>\n  </>\n);\n`;\n\nexport const duration = `\nimport { Button, message } from \"antd\";\nimport { RiCheckboxCircleLine } from \"react-icons/ri\";\n\nconst success = () => {\n  message.success({\n    content:\n      \"This is a prompt message for success, and it will disappear in 10 seconds\",\n    icon: <RiCheckboxCircleLine className=\"remix-icon\" />,\n    duration: 10,\n  });\n};\n\nreturn (\n  <Button type=\"primary\" ghost onClick={success}>\n    Customized display duration\n  </Button>\n);\n`;\n\nexport const loading = `\nimport { Button, message } from \"antd\";\n\nconst success = () => {\n  const hide = message.loading(\"Action in progress..\", 0);\n  setTimeout(hide, 2500);\n};\n\nreturn (\n  <Button type=\"primary\" ghost onClick={success}>\n    Display a loading indicator\n  </Button>\n);\n`;\n","import React, { useState } from \"react\";\n\nimport SyntaxHighlighter from \"react-syntax-highlighter\";\nimport { monoBlue } from \"react-syntax-highlighter/dist/esm/styles/hljs\";\nimport { types } from \"./code.js\";\n\nimport { Card, Row, Col, Button, message } from \"antd\";\nimport {\n  RiCheckboxCircleLine,\n  RiErrorWarningLine,\n  RiCloseCircleLine,\n  RiCodeSSlashLine,\n} from \"react-icons/ri\";\n\nexport default function TypesMessage() {\n  const [checkedCode, setCheckedCode] = useState(false);\n  const [codeClass, setCodeClass] = useState(false);\n\n  function toggleChecked() {\n    setTimeout(() => setCodeClass(!codeClass), 100);\n    setCheckedCode(!checkedCode);\n  }\n\n  const success = () => {\n    message.success({\n      content: \"This is a success message\",\n      icon: <RiCheckboxCircleLine className=\"remix-icon\" />,\n    });\n  };\n\n  const error = () => {\n    message.error({\n      content: \"This is an error message\",\n      icon: <RiCloseCircleLine className=\"remix-icon\" />,\n    });\n  };\n\n  const warning = () => {\n    message.warning({\n      content: \"This is a warning message\",\n      icon: <RiErrorWarningLine className=\"remix-icon\" />,\n    });\n  };\n\n  return (\n    <Card className=\"hp-border-color-black-40\">\n      <Row>\n        <Col className=\"hp-mb-16\" span={24}>\n          <Row>\n            <Col lg={12} span={20}>\n              <h4>Other Types of Message</h4>\n              <p className=\"hp-p1-body\">\n                Messages of success, error and warning types.\n              </p>\n            </Col>\n\n            <Col lg={12} span={4} className=\"hp-text-right\">\n              <Button\n                onClick={toggleChecked}\n                type=\"text\"\n                icon={<RiCodeSSlashLine className=\"hp-text-color-black-80\" />}\n              />\n            </Col>\n          </Row>\n        </Col>\n\n        <Col span={24}>\n          <Button\n            className=\"hp-mb-16 hp-mr-16\"\n            type=\"primary\"\n            ghost\n            onClick={success}\n          >\n            Success\n          </Button>\n\n          <Button\n            className=\"hp-mb-16 hp-mr-16\"\n            type=\"primary\"\n            ghost\n            onClick={error}\n          >\n            Error\n          </Button>\n\n          <Button\n            className=\"hp-mb-16 hp-mr-16\"\n            type=\"primary\"\n            ghost\n            onClick={warning}\n          >\n            Warning\n          </Button>\n        </Col>\n      </Row>\n\n      {checkedCode && (\n        <SyntaxHighlighter\n          language=\"javascript\"\n          className={`show-code hp-mt-24 ${codeClass && \"show-code-active\"}`}\n          style={monoBlue}\n        >\n          {types}\n        </SyntaxHighlighter>\n      )}\n    </Card>\n  );\n}","import React, { useState } from \"react\";\n\nimport SyntaxHighlighter from \"react-syntax-highlighter\";\nimport { monoBlue } from \"react-syntax-highlighter/dist/esm/styles/hljs\";\nimport { duration } from \"./code.js\";\n\nimport { Card, Row, Col, Button, message } from \"antd\";\nimport { RiCheckboxCircleLine, RiCodeSSlashLine } from \"react-icons/ri\";\n\nexport default function DurationMessage() {\n  const [checkedCode, setCheckedCode] = useState(false);\n  const [codeClass, setCodeClass] = useState(false);\n\n  function toggleChecked() {\n    setTimeout(() => setCodeClass(!codeClass), 100);\n    setCheckedCode(!checkedCode);\n  }\n\n  const success = () => {\n    message.success({\n      content:\n        \"This is a prompt message for success, and it will disappear in 10 seconds\",\n      icon: <RiCheckboxCircleLine className=\"remix-icon\" />,\n      duration: 10,\n    });\n  };\n\n  return (\n    <Card className=\"hp-border-color-black-40\">\n      <Row>\n        <Col className=\"hp-mb-16\" span={24}>\n          <Row>\n            <Col lg={12} span={20}>\n              <h4>Customize Duration</h4>\n              <p className=\"hp-p1-body\">\n                Customize message display duration from default 3s to 10s.\n              </p>\n            </Col>\n\n            <Col lg={12} span={4} className=\"hp-text-right\">\n              <Button\n                onClick={toggleChecked}\n                type=\"text\"\n                icon={<RiCodeSSlashLine className=\"hp-text-color-black-80\" />}\n              />\n            </Col>\n          </Row>\n        </Col>\n\n        <Col span={24}>\n          <Button type=\"primary\" ghost onClick={success}>\n            Customized display duration\n          </Button>\n        </Col>\n      </Row>\n\n      {checkedCode && (\n        <SyntaxHighlighter\n          language=\"javascript\"\n          className={`show-code hp-mt-24 ${codeClass && \"show-code-active\"}`}\n          style={monoBlue}\n        >\n          {duration}\n        </SyntaxHighlighter>\n      )}\n    </Card>\n  );\n}\n","import React, { useState } from \"react\";\n\nimport SyntaxHighlighter from \"react-syntax-highlighter\";\nimport { monoBlue } from \"react-syntax-highlighter/dist/esm/styles/hljs\";\nimport { loading } from \"./code.js\";\n\nimport { Card, Row, Col, Button, message } from \"antd\";\nimport { RiCodeSSlashLine } from \"react-icons/ri\";\n\nexport default function LoadingIndicatorMessage() {\n  const [checkedCode, setCheckedCode] = useState(false);\n  const [codeClass, setCodeClass] = useState(false);\n\n  function toggleChecked() {\n    setTimeout(() => setCodeClass(!codeClass), 100);\n    setCheckedCode(!checkedCode);\n  }\n\n  const success = () => {\n    const hide = message.loading(\"Action in progress..\", 0);\n    setTimeout(hide, 2500);\n  };\n\n  return (\n    <Card className=\"hp-border-color-black-40\">\n      <Row>\n        <Col className=\"hp-mb-16\" span={24}>\n          <Row>\n            <Col lg={12} span={20}>\n              <h4>Message with Loading Indicator</h4>\n              <p className=\"hp-p1-body\">\n                Display a global loading indicator, which is dismissed by itself\n                asynchronously.\n              </p>\n            </Col>\n\n            <Col lg={12} span={4} className=\"hp-text-right\">\n              <Button\n                onClick={toggleChecked}\n                type=\"text\"\n                icon={<RiCodeSSlashLine className=\"hp-text-color-black-80\" />}\n              />\n            </Col>\n          </Row>\n        </Col>\n\n        <Col span={24}>\n          <Button type=\"primary\" ghost onClick={success}>\n            Display a loading indicator\n          </Button>\n        </Col>\n      </Row>\n\n      {checkedCode && (\n        <SyntaxHighlighter\n          language=\"javascript\"\n          className={`show-code hp-mt-24 ${codeClass && \"show-code-active\"}`}\n          style={monoBlue}\n        >\n          {loading}\n        </SyntaxHighlighter>\n      )}\n    </Card>\n  );\n}\n","import React from \"react\";\n\nimport { Row, Col } from \"antd\";\n\nimport PageContent from \"../../../../layout/components/content/page-content\";\nimport NormalMessage from \"./normal\";\nimport TypesMessage from \"./types\";\nimport DurationMessage from \"./duration\";\nimport LoadingIndicatorMessage from \"./loading\";\n\nexport default function Message() {\n  return (\n    <Row gutter={[32, 32]} className=\"hp-mb-32\">\n      <Col span={24}>\n        <PageContent\n          title=\"Message\"\n          desc=\"Display global messages as feedback in response to user operations.\"\n          breadcrumb={[\n            {\n              title: \"Components\",\n              link: \"/components/components-page\"\n            },\n            {\n              title: \"Feedback\",\n            },\n            {\n              title: \"Message\",\n            }\n          ]}\n        />\n      </Col>\n\n      <Col span={24}>\n        <NormalMessage />\n      </Col>\n\n      <Col span={24}>\n        <DurationMessage />\n      </Col>\n\n      <Col span={24}>\n        <TypesMessage />\n      </Col>\n\n      <Col span={24}>\n        <LoadingIndicatorMessage />\n      </Col>\n    </Row>\n  );\n}\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nimport { Breadcrumb, Col, Row } from \"antd\";\n\nexport default function PageContent(props) {\n  const { title, breadcrumb, desc } = props;\n\n  return (\n    <Col span={24} className=\"hp-bg-black-bg hp-py-sm-32 hp-py-64 hp-px-sm-24 hp-px-md-48 hp-px-80 hp-overflow-hidden\" style={{ borderRadius: 32 }}>\n      <svg\n        width={358}\n        height={336}\n        fill=\"none\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n        className=\"hp-position-absolute-bottom-right hp-rtl-scale-x-n1\"\n      >\n        <path\n          d=\"M730.404 135.471 369.675-6.641l88.802 164.001-243.179-98.8 246.364 263.281-329.128-126.619 114.698 166.726-241.68-62.446\"\n          stroke=\"url(#a)\"\n          strokeWidth={40}\n          strokeLinejoin=\"bevel\"\n        />\n        <defs>\n          <linearGradient\n            id=\"a\"\n            x1={315.467}\n            y1={6.875}\n            x2={397.957}\n            y2={337.724}\n            gradientUnits=\"userSpaceOnUse\"\n          >\n            <stop stopColor=\"#fff\" />\n            <stop offset={1} stopColor=\"#fff\" stopOpacity={0} />\n          </linearGradient>\n        </defs>\n      </svg>\n\n      <Row>\n        <Col sm={12} span={24}>\n          <Row>\n            {\n              title && (\n                <Col span={24}>\n                  <h1 className=\"hp-mb-0 hp-text-color-black-0\">{title}</h1>\n                </Col>\n              )\n            }\n\n            {\n              breadcrumb && (\n                <Col span={24}>\n                  <Breadcrumb className=\"hp-d-flex hp-flex-wrap hp-mt-24\">\n                    <Breadcrumb.Item>\n                      <Link to=\"/\" className=\"hp-text-color-black-0 hp-hover-text-color-primary-2\">Home</Link>\n                    </Breadcrumb.Item>\n\n                    {\n                      breadcrumb.map((item, index) => (\n                        <Breadcrumb.Item key={index}>\n                          <Link to={item.link ? item.link : '#'} className={`hp-text-color-black-0${item.link ? ' hp-hover-text-color-primary-2' : ''}`}>{item.title}</Link>\n                        </Breadcrumb.Item>\n                      ))\n                    }\n                  </Breadcrumb>\n                </Col>\n              )\n            }\n\n            {\n              desc && (\n                <Col span={24}>\n                  <p className=\"h5 hp-mb-0 hp-mt-24 hp-text-color-black-0\">{desc}</p>\n                </Col>\n              )\n            }\n          </Row>\n        </Col>\n      </Row>\n    </Col>\n  );\n}\n"],"sourceRoot":""}