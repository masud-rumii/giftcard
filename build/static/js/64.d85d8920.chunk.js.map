{"version":3,"sources":["view/components/data-display/card/basic.jsx","view/components/data-display/card/code.js","view/components/data-display/card/noBorder.jsx","view/components/data-display/card/simple.jsx","view/components/data-display/card/customize.jsx","view/components/data-display/card/withTabs.jsx","view/components/data-display/card/index.jsx","layout/components/content/page-content/index.jsx"],"names":["BasicCard","useState","checkedCode","setCheckedCode","codeClass","setCodeClass","className","lg","span","onClick","setTimeout","type","icon","xl","md","sm","xs","title","extra","href","size","language","style","monoBlue","CardNoBorder","bordered","SimpleCard","Meta","Card","CustomizedCard","hoverable","cover","alt","src","height","description","CardWithTabs","contentList","tab1","tab2","contentListNoTitle","article","app","project","key","setKey","noTitleKey","setNoTitleKey","onTabChange","tabList","tab","activeTabKey","tabBarExtraContent","Cards","gutter","desc","breadcrumb","link","PageContent","props","borderRadius","width","fill","xmlns","d","stroke","strokeWidth","strokeLinejoin","id","x1","y1","x2","y2","gradientUnits","stopColor","offset","stopOpacity","Item","to","map","item","index"],"mappings":"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","file":"static/js/64.d85d8920.chunk.js","sourcesContent":["import React, { useState } from \"react\";\n\nimport SyntaxHighlighter from \"react-syntax-highlighter\";\nimport { monoBlue } from \"react-syntax-highlighter/dist/esm/styles/hljs\";\nimport { basic } from \"./code.js\";\n\nimport { Card, Row, Col, Button } from \"antd\";\nimport { RiCodeSSlashLine } from \"react-icons/ri\";\n\nexport default function BasicCard() {\n  const [checkedCode, setCheckedCode] = useState(false);\n  const [codeClass, setCodeClass] = useState(false);\n\n  function toggleChecked() {\n    setTimeout(() => setCodeClass(!codeClass), 100);\n    setCheckedCode(!checkedCode);\n  }\n\n  return (\n    <Card className=\"hp-border-color-black-40\">\n      <Row>\n        <Col className=\"hp-mb-16\" lg={12} span={20}>\n          <h4>Basic Card</h4>\n          <p className=\"hp-p1-body\">\n            A basic card containing a title, content and an extra corner\n            content. Supports two sizes: default and small.\n          </p>\n        </Col>\n\n        <Col lg={12} span={4} className=\"hp-text-right\">\n          <Button\n            onClick={toggleChecked}\n            type=\"text\"\n            icon={<RiCodeSSlashLine className=\"hp-text-color-black-80\" />}\n          />\n        </Col>\n\n        <Col xl={12} md={24} sm={24} xs={24}>\n          <Card\n            className=\"hp-mb-16 hp-mr-16\"\n            title=\"Default size card\"\n            extra={<a href=\"#\">More</a>}\n          >\n            <p className=\"hp-p1-body\">Card content</p>\n            <p className=\"hp-p1-body\">Card content</p>\n            <p className=\"hp-p1-body\">Card content</p>\n          </Card>\n        </Col>\n\n        <Col xl={12} md={24} sm={24} xs={24}>\n          <Card\n            size=\"small\"\n            title=\"Small size card\"\n            extra={<a href=\"#\">More</a>}\n          >\n            <p className=\"hp-p1-body\">Card content</p>\n            <p className=\"hp-p1-body\">Card content</p>\n            <p className=\"hp-p1-body\">Card content</p>\n          </Card>\n        </Col>\n      </Row>\n\n      {checkedCode && (\n        <SyntaxHighlighter\n          language=\"javascript\"\n          className={`show-code hp-mt-24 ${codeClass && \"show-code-active\"}`}\n          style={monoBlue}\n        >\n          {basic}\n        </SyntaxHighlighter>\n      )}\n    </Card>\n  );\n}","export const basic = `\nimport { Card } from \"antd\";\n\nreturn (\n  <>\n    <Card\n      title=\"Default size card\"\n      extra={<a href=\"#\">More</a>}\n    >\n      <p>Card content</p>\n      <p>Card content</p>\n      <p>Card content</p>\n    </Card>\n\n    <Card\n      size=\"small\"\n      title=\"Small size card\"\n      extra={<a href=\"#\">More</a>}\n    >\n      <p>Card content</p>\n      <p>Card content</p>\n      <p>Card content</p>\n    </Card>\n  </>\n);\n`;\n\nexport const customize = `\nimport { Card } from \"antd\";\n\nconst { Meta } = Card;\n\nreturn (\n  <Card\n    hoverable\n    cover={\n      <img\n        alt=\"example\"\n        src=\"https://os.alipayobjects.com/rmsportal/QBnOOoLaAfKPirc.png\"\n        height={345}\n        className=\"hp-img-cover\"\n      />\n    }\n  >\n    <Meta title=\"Europe Street beat\" description=\"www.instagram.com\" />\n  </Card>\n);\n`;\n\nexport const noBorder = `\nimport { Card } from \"antd\";\n\nreturn (\n  <Card title=\"Card title\" bordered={false} className=\"hp-elevatior\">\n    <p>Card content</p>\n    <p>Card content</p>\n    <p>Card content</p>\n  </Card>\n);\n`;\n\nexport const simple = `\nimport { Card } from \"antd\";\n\nreturn (\n  <Card>\n    <p>Card content</p>\n    <p>Card content</p>\n    <p>Card content</p>\n  </Card>\n);\n`;\n\nexport const withTabs = `\nimport React, { useState } from \"react\";\n\nimport { Card } from \"antd\";\n\nconst tabList = [\n  {\n    key: \"tab1\",\n    tab: \"tab1\",\n  },\n  {\n    key: \"tab2\",\n    tab: \"tab2\",\n  },\n];\n\nconst contentList = {\n  tab1: <p>content1</p>,\n  tab2: <p>content2</p>,\n};\n\nconst tabListNoTitle = [\n  {\n    key: \"article\",\n    tab: \"article\",\n  },\n  {\n    key: \"app\",\n    tab: \"app\",\n  },\n  {\n    key: \"project\",\n    tab: \"project\",\n  },\n];\n\nconst contentListNoTitle = {\n  article: <p>article content</p>,\n  app: <p>app content</p>,\n  project: <p>project content</p>,\n};\n\nconst [key, setKey] = useState(\"tab1\");\nconst [noTitleKey, setNoTitleKey] = useState(\"app\");\n\nconst onTabChange = (key, type) => {\n  if (type === \"key\") {\n    setKey(key);\n  } else if (type === \"noTitleKey\") {\n    setNoTitleKey(key);\n  }\n};\n\nreturn (\n  <>\n    <Card\n      title=\"Card title\"\n      extra={<a href=\"#\">More</a>}\n      tabList={tabList}\n      activeTabKey={key}\n      onTabChange={(key) => {\n        onTabChange(key, \"key\");\n      }}\n    >\n      {contentList[key]}\n    </Card>\n    \n    <Card\n      tabList={tabListNoTitle}\n      activeTabKey={noTitleKey}\n      tabBarExtraContent={<a href=\"#\">More</a>}\n      onTabChange={(key) => {\n        onTabChange(key, \"noTitleKey\");\n      }}\n    >\n      {contentListNoTitle[noTitleKey]}\n    </Card>\n  </>\n);\n`;","import React, { useState } from \"react\";\n\nimport SyntaxHighlighter from \"react-syntax-highlighter\";\nimport { monoBlue } from \"react-syntax-highlighter/dist/esm/styles/hljs\";\nimport { noBorder } from \"./code.js\";\n\nimport { Card, Row, Col, Button } from \"antd\";\nimport { RiCodeSSlashLine } from \"react-icons/ri\";\n\nexport default function CardNoBorder() {\n  const [checkedCode, setCheckedCode] = useState(false);\n  const [codeClass, setCodeClass] = useState(false);\n\n  function toggleChecked() {\n    setTimeout(() => setCodeClass(!codeClass), 100);\n    setCheckedCode(!checkedCode);\n  }\n\n  return (\n    <Card className=\"hp-border-color-black-40\">\n      <Row>\n        <Col className=\"hp-mb-16\" lg={12} span={20}>\n          <h4>No Border</h4>\n          <p className=\"hp-p1-body\">A borderless card on a gray background.</p>\n        </Col>\n\n        <Col lg={12} span={4} className=\"hp-text-right\">\n          <Button\n            onClick={toggleChecked}\n            type=\"text\"\n            icon={<RiCodeSSlashLine className=\"hp-text-color-black-80\" />}\n          />\n        </Col>\n\n        <Col xl={12} md={24} sm={24} xs={24}>\n          <Card title=\"Card title\" bordered={false} className=\"hp-elevatior\">\n            <p className=\"hp-p1-body\">Card content</p>\n            <p className=\"hp-p1-body\">Card content</p>\n            <p className=\"hp-p1-body\">Card content</p>\n          </Card>\n        </Col>\n      </Row>\n\n      {checkedCode && (\n        <SyntaxHighlighter\n          language=\"javascript\"\n          className={`show-code hp-mt-24 ${codeClass && \"show-code-active\"}`}\n          style={monoBlue}\n        >\n          {noBorder}\n        </SyntaxHighlighter>\n      )}\n    </Card>\n  );\n}\n","import React, { useState } from \"react\";\n\nimport SyntaxHighlighter from \"react-syntax-highlighter\";\nimport { monoBlue } from \"react-syntax-highlighter/dist/esm/styles/hljs\";\nimport { simple } from \"./code.js\";\n\nimport { Card, Row, Col, Button } from \"antd\";\nimport { RiCodeSSlashLine } from \"react-icons/ri\";\n\nexport default function SimpleCard() {\n  const [checkedCode, setCheckedCode] = useState(false);\n  const [codeClass, setCodeClass] = useState(false);\n\n  function toggleChecked() {\n    setTimeout(() => setCodeClass(!codeClass), 100);\n    setCheckedCode(!checkedCode);\n  }\n\n  return (\n    <Card className=\"hp-border-color-black-40\">\n      <Row>\n        <Col className=\"hp-mb-16\" lg={12} span={20}>\n          <h4>Simple Card</h4>\n          <p className=\"hp-p1-body\">\n            A simple card only containing a content area.\n          </p>\n        </Col>\n\n        <Col lg={12} span={4} className=\"hp-text-right\">\n          <Button\n            onClick={toggleChecked}\n            type=\"text\"\n            icon={<RiCodeSSlashLine className=\"hp-text-color-black-80\" />}\n          />\n        </Col>\n\n        <Col xl={12} md={24} sm={24} xs={24}>\n          <Card>\n            <p className=\"hp-p1-body\">Card content</p>\n            <p className=\"hp-p1-body\">Card content</p>\n            <p className=\"hp-p1-body\">Card content</p>\n          </Card>\n        </Col>\n      </Row>\n\n      {checkedCode && (\n        <SyntaxHighlighter\n          language=\"javascript\"\n          className={`show-code hp-mt-24 ${codeClass && \"show-code-active\"}`}\n          style={monoBlue}\n        >\n          {simple}\n        </SyntaxHighlighter>\n      )}\n    </Card>\n  );\n}\n","import React, { useState } from \"react\";\n\nimport SyntaxHighlighter from \"react-syntax-highlighter\";\nimport { monoBlue } from \"react-syntax-highlighter/dist/esm/styles/hljs\";\nimport { customize } from \"./code.js\";\n\nimport { Card, Row, Col, Button } from \"antd\";\nimport { RiCodeSSlashLine } from \"react-icons/ri\";\n\nconst { Meta } = Card;\n\nexport default function CustomizedCard() {\n  const [checkedCode, setCheckedCode] = useState(false);\n  const [codeClass, setCodeClass] = useState(false);\n\n  function toggleChecked() {\n    setTimeout(() => setCodeClass(!codeClass), 100);\n    setCheckedCode(!checkedCode);\n  }\n\n  return (\n    <Card className=\"hp-border-color-black-40\">\n      <Row>\n        <Col className=\"hp-mb-16\" lg={12} span={20}>\n          <h4>Customized Content</h4>\n          <p className=\"hp-p1-body\">\n            You can use Card.Meta to support more flexible content.\n          </p>\n        </Col>\n\n        <Col lg={12} span={4} className=\"hp-text-right\">\n          <Button\n            onClick={toggleChecked}\n            type=\"text\"\n            icon={<RiCodeSSlashLine className=\"hp-text-color-black-80\" />}\n          />\n        </Col>\n\n        <Col>\n          <Card\n            hoverable\n            cover={\n              <img\n                alt=\"example\"\n                src=\"https://os.alipayobjects.com/rmsportal/QBnOOoLaAfKPirc.png\"\n                height={345}\n                className=\"hp-img-cover\"\n              />\n            }\n          >\n            <Meta title=\"Europe Street beat\" description=\"www.instagram.com\" />\n          </Card>\n        </Col>\n      </Row>\n\n      {checkedCode && (\n        <SyntaxHighlighter\n          language=\"javascript\"\n          className={`show-code hp-mt-24 ${codeClass && \"show-code-active\"}`}\n          style={monoBlue}\n        >\n          {customize}\n        </SyntaxHighlighter>\n      )}\n    </Card>\n  );\n}\n","import React, { useState } from \"react\";\n\nimport SyntaxHighlighter from \"react-syntax-highlighter\";\nimport { monoBlue } from \"react-syntax-highlighter/dist/esm/styles/hljs\";\nimport { withTabs } from \"./code.js\";\n\nimport { Card, Row, Col, Button } from \"antd\";\nimport { RiCodeSSlashLine } from \"react-icons/ri\";\n\nexport default function CardWithTabs() {\n  const [checkedCode, setCheckedCode] = useState(false);\n  const [codeClass, setCodeClass] = useState(false);\n\n  function toggleChecked() {\n    setTimeout(() => setCodeClass(!codeClass), 100);\n    setCheckedCode(!checkedCode);\n  }\n\n  const tabList = [\n    {\n      key: \"tab1\",\n      tab: \"tab1\",\n    },\n    {\n      key: \"tab2\",\n      tab: \"tab2\",\n    },\n  ];\n\n  const contentList = {\n    tab1: <p className=\"hp-p1-body\">content1</p>,\n    tab2: <p className=\"hp-p1-body\">content2</p>,\n  };\n\n  const tabListNoTitle = [\n    {\n      key: \"article\",\n      tab: \"article\",\n    },\n    {\n      key: \"app\",\n      tab: \"app\",\n    },\n    {\n      key: \"project\",\n      tab: \"project\",\n    },\n  ];\n\n  const contentListNoTitle = {\n    article: <p className=\"hp-p1-body\">article content</p>,\n    app: <p className=\"hp-p1-body\">app content</p>,\n    project: <p className=\"hp-p1-body\">project content</p>,\n  };\n\n  const [key, setKey] = useState(\"tab1\");\n  const [noTitleKey, setNoTitleKey] = useState(\"app\");\n\n  const onTabChange = (key, type) => {\n    if (type === \"key\") {\n      setKey(key);\n    } else if (type === \"noTitleKey\") {\n      setNoTitleKey(key);\n    }\n  };\n\n  return (\n    <Card className=\"hp-border-color-black-40\">\n      <Row>\n        <Col className=\"hp-mb-16\" lg={12} span={20}>\n          <h4>With Tabs</h4>\n          <p className=\"hp-p1-body\">More content can be hosted.</p>\n        </Col>\n\n        <Col lg={12} span={4} className=\"hp-text-right\">\n          <Button\n            onClick={toggleChecked}\n            type=\"text\"\n            icon={<RiCodeSSlashLine className=\"hp-text-color-black-80\" />}\n          />\n        </Col>\n\n        <Col lg={24} md={24} sm={24} xs={24}>\n          <Card\n            className=\"hp-mb-24\"\n            title=\"Card title\"\n            extra={<a href=\"#\">More</a>}\n            tabList={tabList}\n            activeTabKey={key}\n            onTabChange={(key) => {\n              onTabChange(key, \"key\");\n            }}\n          >\n            {contentList[key]}\n          </Card>\n\n          <Card\n            tabList={tabListNoTitle}\n            activeTabKey={noTitleKey}\n            tabBarExtraContent={<a href=\"#\">More</a>}\n            onTabChange={(key) => {\n              onTabChange(key, \"noTitleKey\");\n            }}\n          >\n            {contentListNoTitle[noTitleKey]}\n          </Card>\n        </Col>\n      </Row>\n\n      {checkedCode && (\n        <SyntaxHighlighter\n          language=\"javascript\"\n          className={`show-code hp-mt-24 ${codeClass && \"show-code-active\"}`}\n          style={monoBlue}\n        >\n          {withTabs}\n        </SyntaxHighlighter>\n      )}\n    </Card>\n  );\n}\n","import React from \"react\";\n\nimport { Row, Col } from \"antd\";\n\nimport PageContent from \"../../../../layout/components/content/page-content\";\nimport BasicCard from \"./basic\";\nimport CardNoBorder from \"./noBorder\";\nimport SimpleCard from \"./simple\";\nimport CustomizedCard from \"./customize\";\nimport CardWithTabs from \"./withTabs\";\n\nexport default function Cards() {\n  return (\n    <Row gutter={[32, 32]} className=\"hp-mb-32\">\n      <Col span={24}>\n        <PageContent\n          title=\"Card\"\n          desc=\"Simple rectangular container.\"\n          breadcrumb={[\n            {\n              title: \"Components\",\n              link: \"/components/components-page\"\n            },\n            {\n              title: \"Data Display\",\n            },\n            {\n              title: \"Card\",\n            }\n          ]}\n        />\n      </Col>\n\n      <Col span={24}>\n        <BasicCard />\n      </Col>\n\n      <Col span={24}>\n        <CustomizedCard />\n      </Col>\n\n      <Col span={24}>\n        <CardNoBorder />\n      </Col>\n\n      <Col span={24}>\n        <SimpleCard />\n      </Col>\n\n      <Col span={24}>\n        <CardWithTabs />\n      </Col>\n    </Row>\n  );\n}\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nimport { Breadcrumb, Col, Row } from \"antd\";\n\nexport default function PageContent(props) {\n  const { title, breadcrumb, desc } = props;\n\n  return (\n    <Col span={24} className=\"hp-bg-black-bg hp-py-sm-32 hp-py-64 hp-px-sm-24 hp-px-md-48 hp-px-80 hp-overflow-hidden\" style={{ borderRadius: 32 }}>\n      <svg\n        width={358}\n        height={336}\n        fill=\"none\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n        className=\"hp-position-absolute-bottom-right hp-rtl-scale-x-n1\"\n      >\n        <path\n          d=\"M730.404 135.471 369.675-6.641l88.802 164.001-243.179-98.8 246.364 263.281-329.128-126.619 114.698 166.726-241.68-62.446\"\n          stroke=\"url(#a)\"\n          strokeWidth={40}\n          strokeLinejoin=\"bevel\"\n        />\n        <defs>\n          <linearGradient\n            id=\"a\"\n            x1={315.467}\n            y1={6.875}\n            x2={397.957}\n            y2={337.724}\n            gradientUnits=\"userSpaceOnUse\"\n          >\n            <stop stopColor=\"#fff\" />\n            <stop offset={1} stopColor=\"#fff\" stopOpacity={0} />\n          </linearGradient>\n        </defs>\n      </svg>\n\n      <Row>\n        <Col sm={12} span={24}>\n          <Row>\n            {\n              title && (\n                <Col span={24}>\n                  <h1 className=\"hp-mb-0 hp-text-color-black-0\">{title}</h1>\n                </Col>\n              )\n            }\n\n            {\n              breadcrumb && (\n                <Col span={24}>\n                  <Breadcrumb className=\"hp-d-flex hp-flex-wrap hp-mt-24\">\n                    <Breadcrumb.Item>\n                      <Link to=\"/\" className=\"hp-text-color-black-0 hp-hover-text-color-primary-2\">Home</Link>\n                    </Breadcrumb.Item>\n\n                    {\n                      breadcrumb.map((item, index) => (\n                        <Breadcrumb.Item key={index}>\n                          <Link to={item.link ? item.link : '#'} className={`hp-text-color-black-0${item.link ? ' hp-hover-text-color-primary-2' : ''}`}>{item.title}</Link>\n                        </Breadcrumb.Item>\n                      ))\n                    }\n                  </Breadcrumb>\n                </Col>\n              )\n            }\n\n            {\n              desc && (\n                <Col span={24}>\n                  <p className=\"h5 hp-mb-0 hp-mt-24 hp-text-color-black-0\">{desc}</p>\n                </Col>\n              )\n            }\n          </Row>\n        </Col>\n      </Row>\n    </Col>\n  );\n}\n"],"sourceRoot":""}