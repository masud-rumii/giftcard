{"version":3,"sources":["view/apps/calendar/Calendar.jsx","assets/images/apps/calendar/sidebar.svg","view/apps/calendar/Sidebar.jsx","view/apps/calendar/AddEventSidebar.jsx","redux/calendar/data/index.jsx","redux/calendar/calendarActions.jsx","view/apps/calendar/index.jsx"],"names":["Calendar","props","calendarRef","useRef","store","dispatch","blankEvent","calendarApi","selectEvent","updateEvent","calendarsColor","setCalendarApi","showModal","useEffect","current","getApi","calendarOptions","events","length","plugins","interactionPlugin","dayGridPlugin","timeGridPlugin","initialView","headerToolbar","start","end","editable","eventResizableFromStart","dragScroll","dayMaxEvents","navLinks","eventClassNames","calendarEvent","event","colorName","_def","extendedProps","calendar","eventClick","clickedEvent","dateClick","info","ev","date","eventDrop","droppedEvent","eventResize","resizedEvent","ref","memo","filters","label","color","Sidebar","updateFilter","updateAllFilters","className","span","type","onClick","block","icon","size","id","checked","selectedCalendars","onChange","e","target","map","filter","index","includes","defaultChecked","align","justify","src","illustration","alt","isObjEmpty","obj","Object","keys","TextArea","Input","AddEventSidebar","addEvent","removeEvent","refetchEvents","handleCancel","isModalVisible","setIsModalVisible","selectedEvent","useForm","handleSubmit","errors","useState","desc","setDesc","title","setTitle","allDay","Date","endPicker","setEndPicker","startPicker","setStartPicker","value","setValue","handleAddEvent","display","undefined","handleResetInputValues","handleUpdateEvent","eventToUpdate","description","updatedEventData","propsToUpdate","extendedPropsToUpdate","existingEvent","getEventById","propName","setProp","setDates","setExtendedProp","updateEventInCalendar","handleDeleteEvent","eventId","remove","FooterAddOrUpdate","FooterCancelOrDelete","ghost","modalTitle","visible","onCancel","footer","centered","closeIcon","width","layout","onSubmit","Item","name","style","placeholder","required","options","enableTime","dateFormat","static","badge","classNamePrefix","isClearable","data","components","Option","rows","instance","axios","create","baseURL","timeout","headers","mock","MockAdapter","nextDay","getTime","nextMonth","getMonth","getFullYear","prevMonth","url","onGet","reply","config","calendars","onPost","JSON","parse","lastIndex","push","eventData","Number","find","assign","onDelete","eventIndex","findIndex","splice","fetchEvents","get","then","response","getState","post","delete","Travel","Social","Work","Important","Sider","Layout","Content","Calender","isDrawervisible","setIsDrawerVisible","useDispatch","useSelector","state","customise","handleOk","placement","closable","onClose","theme","flex","guests","location"],"mappings":"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","file":"static/js/96.0448929f.chunk.js","sourcesContent":["import { useEffect, useRef, memo } from \"react\";\r\n\r\nimport FullCalendar from \"@fullcalendar/react\";\r\nimport dayGridPlugin from \"@fullcalendar/daygrid\";\r\nimport timeGridPlugin from \"@fullcalendar/timegrid\";\r\nimport interactionPlugin from \"@fullcalendar/interaction\";\r\n\r\nconst Calendar = (props) => {\r\n  const calendarRef = useRef(null);\r\n\r\n  const {\r\n    store,\r\n    dispatch,\r\n    blankEvent,\r\n    calendarApi,\r\n    selectEvent,\r\n    updateEvent,\r\n    calendarsColor,\r\n    setCalendarApi,\r\n    showModal,\r\n  } = props;\r\n\r\n  useEffect(() => {\r\n    if (calendarApi === null) {\r\n      setCalendarApi(calendarRef.current.getApi());\r\n    }\r\n  }, [calendarApi]);\r\n\r\n  const calendarOptions = {\r\n    events: store.events.length ? store.events : [],\r\n    plugins: [interactionPlugin, dayGridPlugin, timeGridPlugin],\r\n    initialView: \"dayGridMonth\",\r\n    headerToolbar: {\r\n      start: \"prev,next,title\",\r\n      end: \"dayGridMonth,timeGridWeek,timeGridDay\",\r\n    },\r\n    editable: true,\r\n    eventResizableFromStart: true,\r\n    dragScroll: true,\r\n    dayMaxEvents: 2,\r\n    navLinks: true,\r\n\r\n    eventClassNames({ event: calendarEvent }) {\r\n      const colorName =\r\n        calendarsColor[calendarEvent._def.extendedProps.calendar];\r\n\r\n      return [`bg-light-${colorName}`];\r\n    },\r\n\r\n    eventClick({ event: clickedEvent }) {\r\n      dispatch(selectEvent(clickedEvent));\r\n      showModal();\r\n    },\r\n\r\n    dateClick(info) {\r\n      const ev = blankEvent;\r\n      ev.start = info.date;\r\n      ev.end = info.date;\r\n      dispatch(selectEvent(ev));\r\n    },\r\n\r\n    eventDrop({ event: droppedEvent }) {\r\n      dispatch(updateEvent(droppedEvent));\r\n    },\r\n\r\n    eventResize({ event: resizedEvent }) {\r\n      dispatch(updateEvent(resizedEvent));\r\n    },\r\n\r\n    ref: calendarRef,\r\n  };\r\n\r\n  return <FullCalendar {...calendarOptions} />;\r\n};\r\n\r\nexport default memo(Calendar);","export default __webpack_public_path__ + \"static/media/sidebar.44d1d3b3.svg\";","import React from \"react\";\r\n\r\nimport { Col, Row, Button, Checkbox } from \"antd\";\r\n\r\nimport { RiCalendarEventLine } from \"react-icons/ri\";\r\nimport illustration from \"../../../assets/images/apps/calendar/sidebar.svg\";\r\n\r\n// Filters\r\nconst filters = [\r\n  {\r\n    label: \"Travel\",\r\n    color: \"travel\",\r\n  },\r\n  {\r\n    label: \"Social\",\r\n    color: \"social\",\r\n  },\r\n  {\r\n    label: \"Work\",\r\n    color: \"work\",\r\n  },\r\n  {\r\n    label: \"Important\",\r\n    color: \"important\",\r\n  },\r\n];\r\n\r\nconst Sidebar = (props) => {\r\n  const { updateFilter, updateAllFilters, showModal, store, dispatch } = props;\r\n\r\n  return (\r\n    <Row className=\"hp-h-100 hp-pr-24\">\r\n      <Col span={24}>\r\n        <h3>YodaCalendar</h3>\r\n\r\n        <Button\r\n          className=\"hp-mt-16\"\r\n          type=\"primary\"\r\n          onClick={showModal}\r\n          block\r\n          icon={<RiCalendarEventLine className=\"remix-icon\" size={17} />}\r\n        >\r\n          New Event\r\n        </Button>\r\n\r\n        <h5 className=\"hp-mt-48\">Calendars</h5>\r\n\r\n        <Checkbox\r\n          className=\"hp-mb-8\"\r\n          id=\"view-all\"\r\n          checked={store.selectedCalendars.length === filters.length}\r\n          onChange={(e) => dispatch(updateAllFilters(e.target.checked))}\r\n        >\r\n          Select All\r\n        </Checkbox>\r\n\r\n        <div className=\"hp-calendar-checkbox-list\">\r\n          {filters.length &&\r\n            filters.map((filter, index) => {\r\n              return (\r\n                <Checkbox\r\n                  key={index}\r\n                  id={filter.label}\r\n                  onChange={() => dispatch(updateFilter(filter.label))}\r\n                  checked={store.selectedCalendars.includes(filter.label)}\r\n                  defaultChecked={true}\r\n                  className=\"hp-mb-8\"\r\n                  data-color={filter.color}\r\n                >\r\n                  {filter.label}\r\n                </Checkbox>\r\n              );\r\n            })}\r\n        </div>\r\n      </Col>\r\n\r\n      <Row\r\n        className=\"hp-calendar-menu-footer hp-w-100\"\r\n        align=\"bottom\"\r\n        justify=\"center\"\r\n      >\r\n        <img src={illustration} alt=\"illustration\" />\r\n      </Row>\r\n    </Row>\r\n  );\r\n};\r\n\r\nexport default Sidebar;\r\n","import { Fragment, useState } from \"react\";\r\n\r\nimport Select, { components } from \"react-select\";\r\nimport \"flatpickr/dist/themes/light.css\";\r\nimport Flatpickr from \"react-flatpickr\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { RiCloseFill } from \"react-icons/ri\";\r\nimport { Button, Input, Form, Modal, Badge, Row, Col } from \"antd\";\r\n\r\nexport const isObjEmpty = (obj) => Object.keys(obj).length === 0;\r\n\r\nconst { TextArea } = Input;\r\n\r\nconst AddEventSidebar = (props) => {\r\n  const {\r\n    store,\r\n    dispatch,\r\n    addEvent,\r\n    selectEvent,\r\n    updateEvent,\r\n    removeEvent,\r\n    calendarApi,\r\n    refetchEvents,\r\n    handleCancel,\r\n    isModalVisible,\r\n    setIsModalVisible,\r\n    showModal,\r\n  } = props;\r\n\r\n  const selectedEvent = store.selectedEvent;\r\n  const { errors, handleSubmit } = useForm();\r\n\r\n  const [desc, setDesc] = useState(\"\");\r\n  const [title, setTitle] = useState(\"\");\r\n  const [allDay, setAllDay] = useState(false);\r\n  const [endPicker, setEndPicker] = useState(new Date());\r\n  const [startPicker, setStartPicker] = useState(new Date());\r\n  const [value, setValue] = useState([{ value: \"Travel\", label: \"Travel\" }]);\r\n\r\n  const options = [\r\n    { value: \"Travel\", label: \"Travel\", badge: \"#C903FF\" },\r\n    { value: \"Social\", label: \"Social\", badge: \"#00F7BF\" },\r\n    { value: \"Work\", label: \"Work\", badge: \"#FFC700\" },\r\n    { value: \"Important\", label: \"Important\", badge: \"#FF0022\" },\r\n  ];\r\n\r\n  const OptionComponent = ({ data, ...props }) => {\r\n    return (\r\n      <components.Option {...props}>\r\n        <Badge color={data.badge} />\r\n        {data.label}\r\n      </components.Option>\r\n    );\r\n  };\r\n\r\n  // Adds New Event\r\n  const handleAddEvent = () => {\r\n    const obj = {\r\n      title,\r\n      start: startPicker,\r\n      end: endPicker,\r\n      allDay,\r\n      display: \"block\",\r\n      extendedProps: {\r\n        calendar: value[0].label,\r\n        desc: desc.length ? desc : undefined,\r\n      },\r\n    };\r\n    dispatch(addEvent(obj));\r\n    refetchEvents();\r\n    handleCancel();\r\n  };\r\n\r\n  // Reset Input Values on Close\r\n  const handleResetInputValues = () => {\r\n    dispatch(selectEvent({}));\r\n    setTitle(\"\");\r\n    setDesc(\"\");\r\n    setValue([{ value: \"Travel\", label: \"Travel\" }]);\r\n    setStartPicker(new Date());\r\n    setEndPicker(new Date());\r\n    setIsModalVisible(false);\r\n  };\r\n\r\n  // (UI) updateEventInCalendar\r\n  const updateEventInCalendar = (\r\n    updatedEventData,\r\n    propsToUpdate,\r\n    extendedPropsToUpdate\r\n  ) => {\r\n    const existingEvent = calendarApi.getEventById(updatedEventData.id);\r\n\r\n    // Set event properties except date related\r\n    for (let index = 0; index < propsToUpdate.length; index++) {\r\n      const propName = propsToUpdate[index];\r\n      existingEvent.setProp(propName, updatedEventData[propName]);\r\n    }\r\n\r\n    // Set date related props\r\n    existingEvent.setDates(updatedEventData.start, updatedEventData.end, {\r\n      allDay: updatedEventData.allDay,\r\n    });\r\n\r\n    // Set event's extendedProps\r\n    // eslint-disable-next-line no-plusplus\r\n    for (let index = 0; index < extendedPropsToUpdate.length; index++) {\r\n      const propName = extendedPropsToUpdate[index];\r\n      existingEvent.setExtendedProp(\r\n        propName,\r\n        updatedEventData.extendedProps[propName]\r\n      );\r\n    }\r\n  };\r\n\r\n  // Updates Event in Store\r\n  const handleUpdateEvent = () => {\r\n    const eventToUpdate = {\r\n      id: selectedEvent.id,\r\n      title,\r\n      allDay,\r\n      start: startPicker,\r\n      end: endPicker,\r\n      extendedProps: {\r\n        description: desc,\r\n        calendar: value[0].label,\r\n      },\r\n    };\r\n\r\n    const propsToUpdate = [\"id\", \"title\"];\r\n    const extendedPropsToUpdate = [\"calendar\", \"description\"];\r\n\r\n    dispatch(updateEvent(eventToUpdate));\r\n    updateEventInCalendar(eventToUpdate, propsToUpdate, extendedPropsToUpdate);\r\n    setIsModalVisible(false);\r\n  };\r\n\r\n  // (UI) removeEventInCalendar\r\n  const removeEventInCalendar = (eventId) => {\r\n    calendarApi.getEventById(eventId).remove();\r\n  };\r\n\r\n  const handleDeleteEvent = () => {\r\n    dispatch(removeEvent(selectedEvent.id));\r\n    removeEventInCalendar(selectedEvent.id);\r\n    setIsModalVisible(false);\r\n  };\r\n\r\n  const FooterAddOrUpdate = () => {\r\n    if (\r\n      isObjEmpty(selectedEvent) ||\r\n      (!isObjEmpty(selectedEvent) && !selectedEvent.title.length)\r\n    ) {\r\n      return (\r\n        <Fragment>\r\n          <Button\r\n            onClick={() => {\r\n              handleAddEvent();\r\n              handleResetInputValues();\r\n            }}\r\n            type=\"primary\"\r\n            block\r\n          >\r\n            Add\r\n          </Button>\r\n        </Fragment>\r\n      );\r\n    } else {\r\n      return (\r\n        <Fragment>\r\n          <Button\r\n            type=\"primary\"\r\n            onClick={() => {\r\n              setIsModalVisible(true);\r\n              handleResetInputValues();\r\n              handleUpdateEvent();\r\n            }}\r\n            block\r\n          >\r\n            Update\r\n          </Button>\r\n        </Fragment>\r\n      );\r\n    }\r\n  };\r\n\r\n  const FooterCancelOrDelete = () => {\r\n    if (\r\n      isObjEmpty(selectedEvent) ||\r\n      (!isObjEmpty(selectedEvent) && !selectedEvent.title.length)\r\n    ) {\r\n      return (\r\n        <Fragment>\r\n          <Button\r\n            onClick={() => {\r\n              handleResetInputValues();\r\n            }}\r\n            type=\"primary\"\r\n            block\r\n            ghost\r\n          >\r\n            Cancel\r\n          </Button>\r\n        </Fragment>\r\n      );\r\n    } else {\r\n      return (\r\n        <Fragment>\r\n          <Button\r\n            type=\"danger\"\r\n            onClick={() => {\r\n              setIsModalVisible(true);\r\n              handleResetInputValues();\r\n              handleDeleteEvent();\r\n            }}\r\n            block\r\n            ghost\r\n          >\r\n            Delete\r\n          </Button>\r\n        </Fragment>\r\n      );\r\n    }\r\n  };\r\n\r\n  const modalTitle = (\r\n    <h5 className=\"modal-title\">\r\n      {selectedEvent && selectedEvent.title && selectedEvent.title.length\r\n        ? \"Update\"\r\n        : \"Add\"}\r\n      Event\r\n    </h5>\r\n  );\r\n\r\n  return (\r\n    <Modal\r\n      visible={isModalVisible}\r\n      title={modalTitle}\r\n      onCancel={() => {\r\n        handleResetInputValues();\r\n        handleCancel();\r\n      }}\r\n      className=\"hp-modal-p-24\"\r\n      footer={\r\n        <Row justify=\"center\">\r\n          <Col span={12} className=\"hp-pr-4\">\r\n            <FooterCancelOrDelete />\r\n          </Col>\r\n\r\n          <Col span={12} className=\"hp-pl-4\">\r\n            <FooterAddOrUpdate />\r\n          </Col>\r\n        </Row>\r\n      }\r\n      centered\r\n      closeIcon={\r\n        <RiCloseFill className=\"remix-icon text-color-black-100\" size={24} />\r\n      }\r\n      width={416}\r\n    >\r\n      <Form\r\n        layout=\"vertical\"\r\n        onSubmit={handleSubmit(() => {\r\n          if (\r\n            isObjEmpty(selectedEvent) ||\r\n            (!isObjEmpty(selectedEvent) && !selectedEvent.title.length)\r\n          ) {\r\n            handleAddEvent();\r\n          } else {\r\n            handleUpdateEvent();\r\n          }\r\n        })}\r\n      >\r\n        <Form.Item label=\"Event Title :\">\r\n          <Input\r\n            id=\"title\"\r\n            name=\"title\"\r\n            style={{ width: \"100%\" }}\r\n            placeholder=\"Title\"\r\n            value={title}\r\n            onChange={(e) => setTitle(e.target.value)}\r\n          />\r\n        </Form.Item>\r\n\r\n        <Form.Item label=\"From :\">\r\n          <Flatpickr\r\n            required\r\n            id=\"startDate\"\r\n            name=\"startDate\"\r\n            style={{ width: \"100%\" }}\r\n            onChange={(date) => setStartPicker(date[0])}\r\n            value={startPicker}\r\n            options={{\r\n              enableTime: allDay === false,\r\n              dateFormat: \"d M Y - H:i K\",\r\n              static: true,\r\n            }}\r\n          />\r\n        </Form.Item>\r\n\r\n        <Form.Item label=\"To :\">\r\n          <Flatpickr\r\n            required\r\n            id=\"endDate\"\r\n            name=\"endDate\"\r\n            style={{ width: \"100%\" }}\r\n            onChange={(date) => setEndPicker(date[0])}\r\n            value={endPicker}\r\n            options={{\r\n              enableTime: allDay === false,\r\n              dateFormat: \"d M Y - H:i K\",\r\n              static: true,\r\n            }}\r\n          />\r\n        </Form.Item>\r\n\r\n        <Form.Item label=\"Event :\">\r\n          <Select\r\n            id=\"label\"\r\n            value={value}\r\n            options={options}\r\n            classNamePrefix=\"select\"\r\n            isClearable={false}\r\n            onChange={(data) => setValue([data])}\r\n            components={{\r\n              Option: OptionComponent,\r\n            }}\r\n          />\r\n        </Form.Item>\r\n\r\n        <Form.Item label=\"Description :\">\r\n          <TextArea\r\n            style={{ width: \"100%\" }}\r\n            type=\"textarea\"\r\n            name=\"text\"\r\n            id=\"description\"\r\n            rows={4}\r\n            value={desc}\r\n            onChange={(e) => setDesc(e.target.value)}\r\n            placeholder=\"Description\"\r\n          />\r\n        </Form.Item>\r\n      </Form>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default AddEventSidebar;\r\n","import axios from \"axios\";\r\nimport MockAdapter from \"axios-mock-adapter\";\r\n\r\nlet instance = axios.create({\r\n  baseURL: \"https://localhost:3000/\",\r\n  timeout: 1000,\r\n  headers: {\r\n    \"X-Custom-Header\": \"foobar\",\r\n  },\r\n});\r\n\r\nlet mock = new MockAdapter(instance);\r\n\r\nconst date = new Date();\r\nconst nextDay = new Date(new Date().getTime() + 24 * 60 * 60 * 1000);\r\n\r\nconst nextMonth = date.getMonth() === 11 ? new Date(date.getFullYear() + 1, 0, 1) : new Date(date.getFullYear(), date.getMonth() + 1, 1)\r\nconst prevMonth = date.getMonth() === 11 ? new Date(date.getFullYear() - 1, 0, 1) : new Date(date.getFullYear(), date.getMonth() - 1, 1)\r\n\r\nconst data = {\r\n  events: [\r\n    {\r\n      id: 1,\r\n      url: \"\",\r\n      title: \"Design Review\",\r\n      start: date,\r\n      end: nextDay,\r\n      allDay: false,\r\n      extendedProps: {\r\n        calendar: \"Work\",\r\n      },\r\n    },\r\n    {\r\n      id: 2,\r\n      url: \"\",\r\n      title: \"Meeting With Client\",\r\n      start: new Date(date.getFullYear(), date.getMonth() + 1, -11),\r\n      end: new Date(date.getFullYear(), date.getMonth() + 1, -10),\r\n      allDay: true,\r\n      extendedProps: {\r\n        calendar: \"Work\",\r\n      },\r\n    },\r\n    {\r\n      id: 3,\r\n      url: \"\",\r\n      title: \"Family Trip\",\r\n      allDay: true,\r\n      start: new Date(date.getFullYear(), date.getMonth() + 1, -9),\r\n      end: new Date(date.getFullYear(), date.getMonth() + 1, -7),\r\n      extendedProps: {\r\n        calendar: \"Travel\",\r\n      },\r\n    },\r\n    {\r\n      id: 4,\r\n      url: \"\",\r\n      title: \"Doctor's Appointment\",\r\n      start: new Date(date.getFullYear(), date.getMonth() + 1, -11),\r\n      end: new Date(date.getFullYear(), date.getMonth() + 1, -10),\r\n      allDay: true,\r\n      extendedProps: {\r\n        calendar: \"Important\",\r\n      },\r\n    },\r\n    {\r\n      id: 6,\r\n      url: \"\",\r\n      title: \"Meditation\",\r\n      start: new Date(date.getFullYear(), date.getMonth() + 1, -13),\r\n      end: new Date(date.getFullYear(), date.getMonth() + 1, -12),\r\n      allDay: true,\r\n      extendedProps: {\r\n        calendar: \"Important\",\r\n      },\r\n    },\r\n    {\r\n      id: 7,\r\n      url: \"\",\r\n      title: \"Dinner\",\r\n      start: new Date(date.getFullYear(), date.getMonth() + 1, -13),\r\n      end: new Date(date.getFullYear(), date.getMonth() + 1, -12),\r\n      allDay: true,\r\n      extendedProps: {\r\n        calendar: \"Social\",\r\n      },\r\n    },\r\n    {\r\n      id: 8,\r\n      url: \"\",\r\n      title: \"Product Review\",\r\n      start: new Date(date.getFullYear(), date.getMonth() + 1, -13),\r\n      end: new Date(date.getFullYear(), date.getMonth() + 1, -12),\r\n      allDay: true,\r\n      extendedProps: {\r\n        calendar: \"Work\",\r\n      },\r\n    },\r\n    {\r\n      id: 9,\r\n      url: \"\",\r\n      title: \"Monthly Meeting\",\r\n      start: nextMonth,\r\n      end: nextMonth,\r\n      allDay: true,\r\n      extendedProps: {\r\n        calendar: \"Work\",\r\n      },\r\n    },\r\n    {\r\n      id: 10,\r\n      url: \"\",\r\n      title: \"Monthly Checkup\",\r\n      start: prevMonth,\r\n      end: prevMonth,\r\n      allDay: true,\r\n      extendedProps: {\r\n        calendar: \"Important\",\r\n      },\r\n    },\r\n  ],\r\n};\r\n\r\n// Return calendar events\r\nmock.onGet(\"/apps/calendar/events\").reply((config) => {\r\n  const calendars = config.calendars;\r\n\r\n  return [\r\n    200,\r\n    data.events.filter((event) =>\r\n      calendars.includes(event.extendedProps.calendar)\r\n    ),\r\n  ];\r\n});\r\n\r\n// Add new event\r\nmock.onPost(\"/apps/calendar/add-event\").reply((config) => {\r\n  const { event } = JSON.parse(config.data);\r\n\r\n  const { length } = data.events;\r\n  let lastIndex = 0;\r\n  if (length) {\r\n    lastIndex = data.events[length - 1].id;\r\n  }\r\n  event.id = lastIndex + 1;\r\n\r\n  data.events.push(event);\r\n\r\n  return [\r\n    201,\r\n    {\r\n      event,\r\n    },\r\n  ];\r\n});\r\n\r\n// Update Event\r\nmock.onPost(\"/apps/calendar/update-event\").reply((config) => {\r\n  const { event: eventData } = JSON.parse(config.data);\r\n\r\n  eventData.id = Number(eventData.id);\r\n\r\n  const event = data.events.find((ev) => ev.id === Number(eventData.id));\r\n  Object.assign(event, eventData);\r\n\r\n  return [\r\n    200,\r\n    {\r\n      event,\r\n    },\r\n  ];\r\n});\r\n\r\n// Remove Event\r\nmock.onDelete(\"/apps/calendar/remove-event\").reply((config) => {\r\n  let { id } = config;\r\n\r\n  const eventId = Number(id);\r\n\r\n  const eventIndex = data.events.findIndex((ev) => ev.id === eventId);\r\n  data.events.splice(eventIndex, 1);\r\n  return [200];\r\n});\r\n\r\nexport default instance;","import instance from \"./data\";\r\n\r\n// Fetch Events\r\nexport const fetchEvents = (calendars) => {\r\n  return (dispatch) => {\r\n    instance.get(\"/apps/calendar/events\", { calendars }).then((response) => {\r\n      dispatch({\r\n        type: \"FETCH_EVENTS\",\r\n        events: response.data,\r\n      });\r\n    });\r\n  };\r\n};\r\n\r\n// Add Event\r\nexport const addEvent = (event) => {\r\n  return (dispatch, getState) => {\r\n    instance.post(\"/apps/calendar/add-event\", { event }).then(() => {\r\n      dispatch({\r\n        type: \"ADD_EVENT\",\r\n      });\r\n      dispatch(fetchEvents(getState().calendar.selectedCalendars));\r\n    });\r\n  };\r\n};\r\n\r\n// Update Event\r\nexport const updateEvent = (event) => {\r\n  return (dispatch) => {\r\n    instance.post(\"/apps/calendar/update-event\", { event }).then(() => {\r\n      dispatch({\r\n        type: \"UPDATE_EVENT\",\r\n      });\r\n    });\r\n  };\r\n};\r\n\r\n// Filter Events\r\nexport const updateFilter = (filter) => {\r\n  return (dispatch, getState) => {\r\n    dispatch({\r\n      type: \"UPDATE_FILTERS\",\r\n      filter,\r\n    });\r\n    dispatch(fetchEvents(getState().calendar.selectedCalendars));\r\n  };\r\n};\r\n\r\n// Add/Remove All Filters\r\nexport const updateAllFilters = (value) => {\r\n  return (dispatch, getState) => {\r\n    dispatch({\r\n      type: \"UPDATE_ALL_FILTERS\",\r\n      value,\r\n    });\r\n    dispatch(fetchEvents(getState().calendar.selectedCalendars));\r\n  };\r\n};\r\n\r\n// Remove Event\r\nexport const removeEvent = (id) => {\r\n  return (dispatch) => {\r\n    instance.delete(\"/apps/calendar/remove-event\", { id }).then(() => {\r\n      dispatch({\r\n        type: \"REMOVE_EVENT\",\r\n      });\r\n    });\r\n  };\r\n};\r\n\r\n// Select Event (get event data on click)\r\nexport const selectEvent = (event) => {\r\n  return (dispatch) => {\r\n    dispatch({\r\n      type: \"SELECT_EVENT\",\r\n      event,\r\n    });\r\n  };\r\n};\r\n","import React, { useState, useEffect } from \"react\";\r\n\r\nimport { Layout, Row, Col, Card, Button, Drawer } from \"antd\";\r\nimport { RiMenuFill, RiCloseFill } from \"react-icons/ri\";\r\n\r\n// Component\r\nimport Calendar from \"./Calendar\";\r\nimport Sidebar from \"./Sidebar\";\r\nimport AddEventSidebar from \"./AddEventSidebar\";\r\n\r\n// Redux\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport {\r\n  fetchEvents,\r\n  selectEvent,\r\n  updateEvent,\r\n  updateFilter,\r\n  updateAllFilters,\r\n  addEvent,\r\n  removeEvent,\r\n} from \"../../../redux/calendar/calendarActions\";\r\n\r\n// Colors\r\nconst calendarsColor = {\r\n  Travel: \"travel\",\r\n  Social: \"social\",\r\n  Work: \"work\",\r\n  Important: \"important\",\r\n};\r\n\r\nconst { Sider, Content } = Layout;\r\n\r\nexport default function Calender() {\r\n  const [calendarApi, setCalendarApi] = useState(null);\r\n  const [isModalVisible, setIsModalVisible] = useState(false);\r\n  const [isDrawervisible, setIsDrawerVisible] = useState(false);\r\n\r\n  // Redux\r\n  const dispatch = useDispatch();\r\n  const store = useSelector((state) => state.calendar);\r\n  const customise = useSelector(state => state.customise)\r\n\r\n  const showDrawer = () => {\r\n    setIsDrawerVisible(true);\r\n  };\r\n\r\n  const closeDrawer = () => {\r\n    setIsDrawerVisible(false);\r\n  };\r\n\r\n  const showModal = () => {\r\n    setIsModalVisible(true);\r\n  };\r\n\r\n  const handleOk = () => {\r\n    setIsModalVisible(false);\r\n  };\r\n\r\n  const handleCancel = () => {\r\n    setIsModalVisible(false);\r\n  };\r\n\r\n  // Object\r\n  const blankEvent = {\r\n    title: \"\",\r\n    start: \"\",\r\n    end: \"\",\r\n    allDay: false,\r\n    url: \"\",\r\n    extendedProps: {\r\n      calendar: \"\",\r\n      guests: [],\r\n      location: \"\",\r\n      description: \"\",\r\n    },\r\n  };\r\n\r\n  // RefetchEvents\r\n  const refetchEvents = () => {\r\n    if (calendarApi !== null) {\r\n      calendarApi.refetchEvents();\r\n    }\r\n  };\r\n\r\n  // Fetch Events\r\n  useEffect(() => {\r\n    dispatch(fetchEvents(store.selectedCalendars));\r\n  }, []);\r\n\r\n  return (\r\n    <Layout className=\"hp-calendar hp-mb-32 hp-bg-dark-90\">\r\n      <Drawer\r\n        title=\" \"\r\n        className=\"hp-calendar-mobile-menu\"\r\n        placement=\"left\"\r\n        closable={true}\r\n        onClose={closeDrawer}\r\n        visible={isDrawervisible}\r\n        closeIcon={\r\n          <RiCloseFill\r\n            className=\"remix-icon hp-text-color-black-80 hp-text-color-dark-30\"\r\n            size={24}\r\n          />\r\n        }\r\n      >\r\n        <Sidebar\r\n          store={store}\r\n          dispatch={dispatch}\r\n          updateFilter={updateFilter}\r\n          updateAllFilters={updateAllFilters}\r\n          showModal={showModal}\r\n          handleOk={handleOk}\r\n          handleCancel={handleCancel}\r\n          isModalVisible={isModalVisible}\r\n        />\r\n      </Drawer>\r\n\r\n      <Content>\r\n        <Row className=\"hp-calendar-mobile-menu-btn hp-bg-color-black-0 hp-bg-color-dark-100 hp-border-radius hp-py-12 hp-px-sm-8 hp-px-24 hp-mb-16\">\r\n          <Button\r\n            className=\"hp-p-0\"\r\n            type=\"text\"\r\n            icon={\r\n              <RiMenuFill\r\n                size={24}\r\n                className=\"remix-icon hp-text-color-black-80 hp-text-color-dark-30\"\r\n              />\r\n            }\r\n            onClick={showDrawer}\r\n          />\r\n        </Row>\r\n\r\n        <Card>\r\n          <Row>\r\n            <Sider\r\n              className=\"hp-bg-dark-100 hp-border-right-1 hp-border-color-dark-80 hp-py-24 hp-mr-24\"\r\n              theme={customise.theme == \"light\" ? \"light\" : \"dark\"}\r\n              width={256}\r\n            >\r\n              <Sidebar\r\n                store={store}\r\n                dispatch={dispatch}\r\n                updateFilter={updateFilter}\r\n                updateAllFilters={updateAllFilters}\r\n                showModal={showModal}\r\n                handleOk={handleOk}\r\n                handleCancel={handleCancel}\r\n                isModalVisible={isModalVisible}\r\n              />\r\n            </Sider>\r\n\r\n            <Col flex=\"1 1\" className=\"hp-py-24\">\r\n              <Calendar\r\n                store={store}\r\n                dispatch={dispatch}\r\n                blankEvent={blankEvent}\r\n                calendarApi={calendarApi}\r\n                selectEvent={selectEvent}\r\n                updateEvent={updateEvent}\r\n                calendarsColor={calendarsColor}\r\n                setCalendarApi={setCalendarApi}\r\n                showModal={showModal}\r\n              />\r\n            </Col>\r\n          </Row>\r\n        </Card>\r\n\r\n        <AddEventSidebar\r\n          store={store}\r\n          dispatch={dispatch}\r\n          addEvent={addEvent}\r\n          selectEvent={selectEvent}\r\n          updateEvent={updateEvent}\r\n          removeEvent={removeEvent}\r\n          calendarApi={calendarApi}\r\n          refetchEvents={refetchEvents}\r\n          handleCancel={handleCancel}\r\n          isModalVisible={isModalVisible}\r\n          setIsModalVisible={setIsModalVisible}\r\n          showModal={showModal}\r\n        />\r\n      </Content>\r\n    </Layout>\r\n  );\r\n}\r\n"],"sourceRoot":""}