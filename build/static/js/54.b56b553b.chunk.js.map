{"version":3,"sources":["view/components/data-entry/upload/click.jsx","view/components/data-entry/upload/code.js","view/components/data-entry/upload/fileList.jsx","view/components/data-entry/upload/picturesList.jsx","view/components/data-entry/upload/avatar.jsx","view/components/data-entry/upload/picturesWall.jsx","view/components/data-entry/upload/drag.jsx","view/components/data-entry/upload/index.jsx","layout/components/content/page-content/index.jsx","assets/images/memoji/memoji-1.png"],"names":["ClickUpload","useState","checkedCode","setCheckedCode","codeClass","setCodeClass","props","name","action","headers","authorization","onChange","info","file","status","console","log","fileList","message","success","content","icon","className","error","span","lg","onClick","setTimeout","type","language","style","monoBlue","FileListUpload","uid","url","setFileList","multiple","slice","map","response","PicturesListUpload","images","thumbUrl","listType","defaultFileList","AvatarUpload","imageUrl","setImageUrl","loading","setLoading","uploadButton","size","marginTop","showUploadList","beforeUpload","isJpgOrPng","isLt2M","img","callback","reader","FileReader","addEventListener","result","readAsDataURL","getBase64","originFileObj","src","alt","width","PicturesWallUpload","Promise","resolve","reject","onload","onerror","previewVisible","setPreviewVisible","previewImage","setPreviewImage","previewTitle","setPreviewTitle","handlePreview","preview","substring","lastIndexOf","onPreview","e","length","visible","title","footer","onCancel","Dragger","Upload","DragUpload","onDrop","gutter","desc","breadcrumb","link","PageContent","borderRadius","height","fill","xmlns","d","stroke","strokeWidth","strokeLinejoin","id","x1","y1","x2","y2","gradientUnits","stopColor","offset","stopOpacity","sm","Item","to","item","index"],"mappings":"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","file":"static/js/54.b56b553b.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\n\r\nimport SyntaxHighlighter from \"react-syntax-highlighter\";\r\nimport { monoBlue } from \"react-syntax-highlighter/dist/esm/styles/hljs\";\r\nimport { click } from \"./code.js\";\r\n\r\nimport { Card, Row, Col, Upload, message, Button } from \"antd\";\r\nimport {\r\n  RiUpload2Line,\r\n  RiCheckboxCircleLine,\r\n  RiCloseCircleLine,\r\n  RiCodeSSlashLine,\r\n} from \"react-icons/ri\";\r\n\r\nexport default function ClickUpload() {\r\n  const [checkedCode, setCheckedCode] = useState(false);\r\n  const [codeClass, setCodeClass] = useState(false);\r\n\r\n  function toggleChecked() {\r\n    setTimeout(() => setCodeClass(!codeClass), 100);\r\n    setCheckedCode(!checkedCode);\r\n  }\r\n\r\n  const props = {\r\n    name: \"file\",\r\n    action: \"https://www.mocky.io/v2/5cc8019d300000980a055e76\",\r\n    headers: {\r\n      authorization: \"authorization-text\",\r\n    },\r\n    onChange(info) {\r\n      if (info.file.status !== \"uploading\") {\r\n        console.log(info.file, info.fileList);\r\n      }\r\n      if (info.file.status === \"done\") {\r\n        message.success({\r\n          content: `${info.file.name} file uploaded successfully.`,\r\n          icon: <RiCheckboxCircleLine className=\"remix-icon\" />,\r\n        });\r\n      } else if (info.file.status === \"error\") {\r\n        message.error({\r\n          content: `${info.file.name} file upload failed.`,\r\n          icon: <RiCloseCircleLine className=\"remix-icon\" />,\r\n        });\r\n      }\r\n    },\r\n  };\r\n\r\n  return (\r\n    <Card className=\"hp-border-color-black-40\">\r\n      <Row>\r\n        <Col className=\"hp-mb-16\" span={24}>\r\n          <Row>\r\n            <Col lg={12} span={20}>\r\n              <h4>Upload by Clicking</h4>\r\n              <p className=\"hp-p1-body\">\r\n                Classic mode. File selection dialog pops up when upload button\r\n                is clicked.\r\n              </p>\r\n            </Col>\r\n\r\n            <Col lg={12} span={4} className=\"hp-text-right\">\r\n              <Button\r\n                onClick={toggleChecked}\r\n                type=\"text\"\r\n                icon={<RiCodeSSlashLine className=\"hp-text-color-black-80\" />}\r\n              />\r\n            </Col>\r\n          </Row>\r\n        </Col>\r\n\r\n        <Col span={24}>\r\n          <Upload {...props}>\r\n            <Button\r\n              type=\"primary\"\r\n              icon={<RiUpload2Line className=\"remix-icon\" />}\r\n            >\r\n              Click to Upload\r\n            </Button>\r\n          </Upload>\r\n        </Col>\r\n      </Row>\r\n\r\n      {checkedCode && (\r\n        <SyntaxHighlighter\r\n          language=\"javascript\"\r\n          className={`show-code hp-mt-24 ${codeClass && \"show-code-active\"}`}\r\n          style={monoBlue}\r\n        >\r\n          {click}\r\n        </SyntaxHighlighter>\r\n      )}\r\n    </Card>\r\n  );\r\n}\r\n","export const click = `\r\nimport React from \"react\";\r\n\r\nimport { Upload, message, Button } from \"antd\";\r\nimport {\r\n  RiUpload2Line,\r\n  RiCheckboxCircleLine,\r\n  RiCloseCircleLine,\r\n} from \"react-icons/ri\";\r\n\r\nconst props = {\r\n  name: \"file\",\r\n  action: \"https://www.mocky.io/v2/5cc8019d300000980a055e76\",\r\n  headers: {\r\n    authorization: \"authorization-text\",\r\n  },\r\n  onChange(info) {\r\n    if (info.file.status !== \"uploading\") {\r\n      console.log(info.file, info.fileList);\r\n    }\r\n    if (info.file.status === \"done\") {\r\n      message.success({\r\n        content: info.file.name + ' file uploaded successfully.',\r\n        icon: <RiCheckboxCircleLine className=\"remix-icon\" />,\r\n      });\r\n    } else if (info.file.status === \"error\") {\r\n      message.error({\r\n        content: info.file.name + ' file upload failed.',\r\n        icon: <RiCloseCircleLine className=\"remix-icon\" />,\r\n      });\r\n    }\r\n  },\r\n};\r\n\r\nreturn (\r\n  <Upload {...props}>\r\n    <Button\r\n      type=\"primary\"\r\n      icon={<RiUpload2Line className=\"remix-icon\" />}\r\n    >\r\n      Click to Upload\r\n    </Button>\r\n  </Upload>\r\n);\r\n`;\r\n\r\nexport const avatar = `\r\nimport React, { useState } from \"react\";\r\n\r\nimport { Upload, message } from \"antd\";\r\nimport { RiLoaderLine, RiAddLine } from \"react-icons/ri\";\r\n\r\nfunction getBase64(img, callback) {\r\n  const reader = new FileReader();\r\n  reader.addEventListener(\"load\", () => callback(reader.result));\r\n  reader.readAsDataURL(img);\r\n}\r\n\r\nfunction beforeUpload(file) {\r\n  const isJpgOrPng = file.type === \"image/jpeg\" || file.type === \"image/png\";\r\n  if (!isJpgOrPng) {\r\n    message.error(\"You can only upload JPG/PNG file!\");\r\n  }\r\n  const isLt2M = file.size / 1024 / 1024 < 2;\r\n  if (!isLt2M) {\r\n    message.error(\"Image must smaller than 2MB!\");\r\n  }\r\n  return isJpgOrPng && isLt2M;\r\n}\r\n\r\nconst [imageUrl, setImageUrl] = useState();\r\nconst [loading, setLoading] = useState(false);\r\n\r\nconst handleChange = (info) => {\r\n  if (info.file.status === \"uploading\") {\r\n    setLoading(true);\r\n    return;\r\n  }\r\n  \r\n  if (info.file.status === \"done\") {\r\n    getBase64(\r\n      info.file.originFileObj,\r\n      (imageUrl) => setImageUrl(imageUrl),\r\n      setLoading(false)\r\n    );\r\n  }\r\n};\r\n\r\nconst uploadButton = (\r\n  <div>\r\n    {loading ? (\r\n      <RiLoaderLine\r\n        className=\"remix-icon-loading remix-icon-spin remix-icon\"\r\n        size={24}\r\n      />\r\n    ) : (\r\n      <RiAddLine size={24} />\r\n    )}\r\n    <div style={{ marginTop: 8 }}>Upload</div>\r\n  </div>\r\n);\r\n\r\nreturn (\r\n  <Upload\r\n    name=\"avatar\"\r\n    listType=\"picture-card\"\r\n    className=\"avatar-uploader\"\r\n    showUploadList={false}\r\n    action=\"https://www.mocky.io/v2/5cc8019d300000980a055e76\"\r\n    beforeUpload={beforeUpload}\r\n    onChange={handleChange}\r\n  >\r\n    {imageUrl ? (\r\n      <img src={imageUrl} alt=\"avatar\" style={{ width: \"100%\" }} />\r\n    ) : (\r\n      uploadButton\r\n    )}\r\n  </Upload>\r\n);\r\n`;\r\n\r\nexport const fileListCode = `\r\nimport React, { useState } from \"react\";\r\n\r\nimport { Upload, Button } from \"antd\";\r\nimport { RiUpload2Line } from \"react-icons/ri\";\r\n\r\nconst [fileList, setFileList] = useState([\r\n  {\r\n    uid: \"-1\",\r\n    name: \"xxx.png\",\r\n    status: \"done\",\r\n    url: \"http://www.baidu.com/xxx.png\",\r\n  },\r\n]);\r\n\r\nconst handleChange = (info) => {\r\n  let fileList = [...info.fileList];\r\n  fileList = fileList.slice(-2);\r\n\r\n  fileList = fileList.map((file) => {\r\n    if (file.response) {\r\n      file.url = file.response.url;\r\n    }\r\n    return file;\r\n  });\r\n\r\n  setFileList(fileList);\r\n};\r\n\r\nconst props = {\r\n  action: \"https://www.mocky.io/v2/5cc8019d300000980a055e76\",\r\n  multiple: true,\r\n};\r\n\r\nreturn (\r\n  <Upload {...props} onChange={handleChange} fileList={fileList}>\r\n    <Button\r\n      type=\"primary\"\r\n      icon={<RiUpload2Line className=\"remix-icon\" />}\r\n    >\r\n      Upload\r\n    </Button>\r\n  </Upload>\r\n);\r\n`;\r\n\r\nexport const picturesList = `\r\nimport React from \"react\";\r\n\r\nimport { Upload, Button } from \"antd\";\r\nimport { RiUpload2Line } from \"react-icons/ri\";\r\n\r\nimport images from \"../../../../assets/images/memoji/memoji-1.png\";\r\n\r\nconst fileList = [\r\n  {\r\n    uid: \"-1\",\r\n    name: \"xxx.png\",\r\n    status: \"done\",\r\n    url: images,\r\n    thumbUrl: images,\r\n  },\r\n  {\r\n    uid: \"-2\",\r\n    name: \"yyy.png\",\r\n    status: \"error\",\r\n  },\r\n];\r\n\r\nreturn (\r\n  <Upload\r\n    action=\"https://www.mocky.io/v2/5cc8019d300000980a055e76\"\r\n    listType=\"picture\"\r\n    defaultFileList={[...fileList]}\r\n  >\r\n    <Button\r\n      type=\"primary\"\r\n      icon={<RiUpload2Line className=\"remix-icon\" />}\r\n    >\r\n      Upload\r\n    </Button>\r\n  </Upload>\r\n);\r\n`;\r\n\r\nexport const picturesWall = `\r\nimport React, { useState } from \"react\";\r\n\r\nimport { Upload, Modal } from \"antd\";\r\nimport { RiAddLine } from \"react-icons/ri\";\r\n\r\nimport images from \"../../../../assets/images/memoji/memoji-1.png\";\r\n\r\nfunction getBase64(file) {\r\n  return new Promise((resolve, reject) => {\r\n    const reader = new FileReader();\r\n    reader.readAsDataURL(file);\r\n    reader.onload = () => resolve(reader.result);\r\n    reader.onerror = (error) => reject(error);\r\n  });\r\n}\r\n\r\nconst [previewVisible, setPreviewVisible] = useState(false);\r\nconst [previewImage, setPreviewImage] = useState();\r\nconst [previewTitle, setPreviewTitle] = useState();\r\nconst [fileList, setFileList] = useState([\r\n  {\r\n    uid: \"-1\",\r\n    name: \"image.png\",\r\n    status: \"done\",\r\n    url: images,\r\n  },\r\n  {\r\n    uid: \"-2\",\r\n    name: \"image.png\",\r\n    status: \"done\",\r\n    url: images,\r\n  },\r\n  {\r\n    uid: \"-3\",\r\n    name: \"image.png\",\r\n    status: \"done\",\r\n    url: images,\r\n  },\r\n  {\r\n    uid: \"-4\",\r\n    name: \"image.png\",\r\n    status: \"done\",\r\n    url: images,\r\n  },\r\n  {\r\n    uid: \"-5\",\r\n    name: \"image.png\",\r\n    status: \"error\",\r\n  },\r\n]);\r\n\r\nconst handleCancel = () => setPreviewVisible(false);\r\n\r\nconst handlePreview = async (file) => {\r\n  if (!file.url && !file.preview) {\r\n    file.preview = await getBase64(file.originFileObj);\r\n  }\r\n\r\n  setPreviewImage(file.url || file.preview);\r\n  setPreviewVisible(true);\r\n  setPreviewTitle(\r\n    file.name || file.url.substring(file.url.lastIndexOf(\"/\") + 1)\r\n  );\r\n};\r\n\r\nconst handleChange = (e) => {\r\n  setFileList(e.fileList);\r\n};\r\n\r\nconst uploadButton = (\r\n  <div>\r\n    <RiAddLine size={24} />\r\n    <div style={{ marginTop: 8 }}>Upload</div>\r\n  </div>\r\n);\r\n\r\nreturn (\r\n  <>\r\n    <Upload\r\n      action=\"https://www.mocky.io/v2/5cc8019d300000980a055e76\"\r\n      listType=\"picture-card\"\r\n      fileList={fileList}\r\n      onPreview={handlePreview}\r\n      onChange={handleChange}\r\n    >\r\n      {fileList.length >= 8 ? null : uploadButton}\r\n    </Upload>\r\n\r\n    <Modal\r\n      visible={previewVisible}\r\n      title={previewTitle}\r\n      footer={null}\r\n      onCancel={handleCancel}\r\n    >\r\n      <img alt=\"example\" style={{ width: \"100%\" }} src={previewImage} />\r\n    </Modal>\r\n  </>       \r\n);\r\n`;\r\n\r\nexport const drag = `\r\nimport React from \"react\";\r\n\r\nimport { Upload, message } from \"antd\";\r\nimport {\r\n  RiUploadCloud2Line,\r\n  RiCheckboxCircleLine,\r\n  RiCloseCircleLine,\r\n} from \"react-icons/ri\";\r\n\r\nconst { Dragger } = Upload;\r\n\r\nconst props = {\r\n  name: \"file\",\r\n  multiple: true,\r\n  action: \"https://www.mocky.io/v2/5cc8019d300000980a055e76\",\r\n  onChange(info) {\r\n    const { status } = info.file;\r\n    if (status !== \"uploading\") {\r\n    }\r\n    if (status === \"done\") {\r\n      message.success({\r\n        content: info.file.name + ' file uploaded successfully.',\r\n        icon: <RiCheckboxCircleLine className=\"remix-icon\" />,\r\n      });\r\n    } else if (status === \"error\") {\r\n      message.error({\r\n        content: info.file.name + ' file upload failed.',\r\n        icon: <RiCloseCircleLine className=\"remix-icon\" />,\r\n      });\r\n    }\r\n  },\r\n  onDrop() {},\r\n};\r\n\r\nreturn (\r\n  <Dragger {...props}>\r\n    <p className=\"ant-upload-drag-icon\">\r\n      <RiUploadCloud2Line className=\"remix-icon\" />\r\n    </p>\r\n\r\n    <p className=\"ant-upload-text\">\r\n      Click or drag file to this area to upload\r\n    </p>\r\n\r\n    <p className=\"ant-upload-hint\">\r\n      Support for a single or bulk upload. Strictly prohibit from\r\n      uploading company data or other band files\r\n    </p>\r\n  </Dragger>\r\n);\r\n`;\r\n","import React, { useState } from \"react\";\r\n\r\nimport SyntaxHighlighter from \"react-syntax-highlighter\";\r\nimport { monoBlue } from \"react-syntax-highlighter/dist/esm/styles/hljs\";\r\nimport { fileListCode } from \"./code.js\";\r\n\r\nimport { Card, Row, Col, Upload, Button } from \"antd\";\r\nimport { RiUpload2Line, RiCodeSSlashLine } from \"react-icons/ri\";\r\n\r\nexport default function FileListUpload() {\r\n  const [checkedCode, setCheckedCode] = useState(false);\r\n  const [codeClass, setCodeClass] = useState(false);\r\n\r\n  function toggleChecked() {\r\n    setTimeout(() => setCodeClass(!codeClass), 100);\r\n    setCheckedCode(!checkedCode);\r\n  }\r\n\r\n  const [fileList, setFileList] = useState([\r\n    {\r\n      uid: \"-1\",\r\n      name: \"xxx.png\",\r\n      status: \"done\",\r\n      url: \"http://www.baidu.com/xxx.png\",\r\n    },\r\n  ]);\r\n\r\n  const handleChange = (info) => {\r\n    let fileList = [...info.fileList];\r\n    fileList = fileList.slice(-2);\r\n\r\n    fileList = fileList.map((file) => {\r\n      if (file.response) {\r\n        file.url = file.response.url;\r\n      }\r\n      return file;\r\n    });\r\n\r\n    setFileList(fileList);\r\n  };\r\n\r\n  const props = {\r\n    action: \"https://www.mocky.io/v2/5cc8019d300000980a055e76\",\r\n    multiple: true,\r\n  };\r\n\r\n  return (\r\n    <Card className=\"hp-border-color-black-40\">\r\n      <Row>\r\n        <Col className=\"hp-mb-16\" span={24}>\r\n          <Row>\r\n            <Col lg={12} span={20}>\r\n              <h4>Complete Control Over File List</h4>\r\n              <p className=\"hp-p1-body\">\r\n                You can gain full control over filelist by configuring fileList\r\n              </p>\r\n            </Col>\r\n\r\n            <Col lg={12} span={4} className=\"hp-text-right\">\r\n              <Button\r\n                onClick={toggleChecked}\r\n                type=\"text\"\r\n                icon={<RiCodeSSlashLine className=\"hp-text-color-black-80\" />}\r\n              />\r\n            </Col>\r\n          </Row>\r\n        </Col>\r\n\r\n        <Col span={24}>\r\n          <Upload {...props} onChange={handleChange} fileList={fileList}>\r\n            <Button\r\n              type=\"primary\"\r\n              icon={<RiUpload2Line className=\"remix-icon\" />}\r\n            >\r\n              Upload\r\n            </Button>\r\n          </Upload>\r\n        </Col>\r\n      </Row>\r\n\r\n      {checkedCode && (\r\n        <SyntaxHighlighter\r\n          language=\"javascript\"\r\n          className={`show-code hp-mt-24 ${codeClass && \"show-code-active\"}`}\r\n          style={monoBlue}\r\n        >\r\n          {fileListCode}\r\n        </SyntaxHighlighter>\r\n      )}\r\n    </Card>\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\r\n\r\nimport SyntaxHighlighter from \"react-syntax-highlighter\";\r\nimport { monoBlue } from \"react-syntax-highlighter/dist/esm/styles/hljs\";\r\nimport { picturesList } from \"./code.js\";\r\n\r\nimport { Card, Row, Col, Upload, Button } from \"antd\";\r\nimport { RiUpload2Line, RiCodeSSlashLine } from \"react-icons/ri\";\r\n\r\nimport images from \"../../../../assets/images/memoji/memoji-1.png\";\r\n\r\nexport default function PicturesListUpload() {\r\n  const [checkedCode, setCheckedCode] = useState(false);\r\n  const [codeClass, setCodeClass] = useState(false);\r\n\r\n  function toggleChecked() {\r\n    setTimeout(() => setCodeClass(!codeClass), 100);\r\n    setCheckedCode(!checkedCode);\r\n  }\r\n\r\n  const fileList = [\r\n    {\r\n      uid: \"-1\",\r\n      name: \"xxx.png\",\r\n      status: \"done\",\r\n      url: images,\r\n      thumbUrl: images,\r\n    },\r\n    {\r\n      uid: \"-2\",\r\n      name: \"yyy.png\",\r\n      status: \"error\",\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <Card className=\"hp-border-color-black-40\">\r\n      <Row>\r\n        <Col className=\"hp-mb-16\" span={24}>\r\n          <Row>\r\n            <Col lg={12} span={20}>\r\n              <h4>Pictures with List Style</h4>\r\n              <p className=\"hp-p1-body\">\r\n                If uploaded file is a picture, the thumbnail can be shown.\r\n              </p>\r\n            </Col>\r\n\r\n            <Col lg={12} span={4} className=\"hp-text-right\">\r\n              <Button\r\n                onClick={toggleChecked}\r\n                type=\"text\"\r\n                icon={<RiCodeSSlashLine className=\"hp-text-color-black-80\" />}\r\n              />\r\n            </Col>\r\n          </Row>\r\n        </Col>\r\n\r\n        <Col span={24}>\r\n          <Upload\r\n            action=\"https://www.mocky.io/v2/5cc8019d300000980a055e76\"\r\n            listType=\"picture\"\r\n            defaultFileList={[...fileList]}\r\n          >\r\n            <Button\r\n              type=\"primary\"\r\n              icon={<RiUpload2Line className=\"remix-icon\" />}\r\n            >\r\n              Upload\r\n            </Button>\r\n          </Upload>\r\n        </Col>\r\n      </Row>\r\n\r\n      {checkedCode && (\r\n        <SyntaxHighlighter\r\n          language=\"javascript\"\r\n          className={`show-code hp-mt-24 ${codeClass && \"show-code-active\"}`}\r\n          style={monoBlue}\r\n        >\r\n          {picturesList}\r\n        </SyntaxHighlighter>\r\n      )}\r\n    </Card>\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\r\n\r\nimport SyntaxHighlighter from \"react-syntax-highlighter\";\r\nimport { monoBlue } from \"react-syntax-highlighter/dist/esm/styles/hljs\";\r\nimport { avatar } from \"./code.js\";\r\n\r\nimport { Card, Row, Col, Upload, message, Button } from \"antd\";\r\nimport { RiLoaderLine, RiAddLine, RiCodeSSlashLine } from \"react-icons/ri\";\r\n\r\nexport default function AvatarUpload() {\r\n  const [checkedCode, setCheckedCode] = useState(false);\r\n  const [codeClass, setCodeClass] = useState(false);\r\n\r\n  function toggleChecked() {\r\n    setTimeout(() => setCodeClass(!codeClass), 100);\r\n    setCheckedCode(!checkedCode);\r\n  }\r\n\r\n  function getBase64(img, callback) {\r\n    const reader = new FileReader();\r\n    reader.addEventListener(\"load\", () => callback(reader.result));\r\n    reader.readAsDataURL(img);\r\n  }\r\n\r\n  function beforeUpload(file) {\r\n    const isJpgOrPng = file.type === \"image/jpeg\" || file.type === \"image/png\";\r\n    if (!isJpgOrPng) {\r\n      message.error(\"You can only upload JPG/PNG file!\");\r\n    }\r\n    const isLt2M = file.size / 1024 / 1024 < 2;\r\n    if (!isLt2M) {\r\n      message.error(\"Image must smaller than 2MB!\");\r\n    }\r\n    return isJpgOrPng && isLt2M;\r\n  }\r\n\r\n  const [imageUrl, setImageUrl] = useState();\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const handleChange = (info) => {\r\n    if (info.file.status === \"uploading\") {\r\n      setLoading(true);\r\n      return;\r\n    }\r\n\r\n    if (info.file.status === \"done\") {\r\n      getBase64(\r\n        info.file.originFileObj,\r\n        (imageUrl) => setImageUrl(imageUrl),\r\n        setLoading(false)\r\n      );\r\n    }\r\n  };\r\n\r\n  const uploadButton = (\r\n    <div>\r\n      {loading ? (\r\n        <RiLoaderLine\r\n          className=\"remix-icon-loading remix-icon-spin remix-icon\"\r\n          size={24}\r\n        />\r\n      ) : (\r\n        <RiAddLine size={24} />\r\n      )}\r\n      <div style={{ marginTop: 8 }}>Upload</div>\r\n    </div>\r\n  );\r\n\r\n  return (\r\n    <Card className=\"hp-border-color-black-40\">\r\n      <Row>\r\n        <Col className=\"hp-mb-16\" span={24}>\r\n          <Row>\r\n            <Col lg={12} span={20}>\r\n              <h4>Avatar</h4>\r\n              <p className=\"hp-p1-body\">\r\n                Click to upload user's avatar, and validate size and format of\r\n                picture with beforeUpload.\r\n              </p>\r\n            </Col>\r\n\r\n            <Col lg={12} span={4} className=\"hp-text-right\">\r\n              <Button\r\n                onClick={toggleChecked}\r\n                type=\"text\"\r\n                icon={<RiCodeSSlashLine className=\"hp-text-color-black-80\" />}\r\n              />\r\n            </Col>\r\n          </Row>\r\n        </Col>\r\n\r\n        <Col span={24}>\r\n          <Upload\r\n            name=\"avatar\"\r\n            listType=\"picture-card\"\r\n            className=\"avatar-uploader\"\r\n            showUploadList={false}\r\n            action=\"https://www.mocky.io/v2/5cc8019d300000980a055e76\"\r\n            beforeUpload={beforeUpload}\r\n            onChange={handleChange}\r\n          >\r\n            {imageUrl ? (\r\n              <img src={imageUrl} alt=\"avatar\" style={{ width: \"100%\" }} />\r\n            ) : (\r\n              uploadButton\r\n            )}\r\n          </Upload>\r\n        </Col>\r\n      </Row>\r\n\r\n      {checkedCode && (\r\n        <SyntaxHighlighter\r\n          language=\"javascript\"\r\n          className={`show-code hp-mt-24 ${codeClass && \"show-code-active\"}`}\r\n          style={monoBlue}\r\n        >\r\n          {avatar}\r\n        </SyntaxHighlighter>\r\n      )}\r\n    </Card>\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\r\n\r\nimport SyntaxHighlighter from \"react-syntax-highlighter\";\r\nimport { monoBlue } from \"react-syntax-highlighter/dist/esm/styles/hljs\";\r\nimport { picturesWall } from \"./code.js\";\r\n\r\nimport { Card, Row, Col, Upload, Modal, Button } from \"antd\";\r\nimport { RiAddLine, RiCodeSSlashLine } from \"react-icons/ri\";\r\n\r\nimport images from \"../../../../assets/images/memoji/memoji-1.png\";\r\n\r\nexport default function PicturesWallUpload() {\r\n  const [checkedCode, setCheckedCode] = useState(false);\r\n  const [codeClass, setCodeClass] = useState(false);\r\n\r\n  function toggleChecked() {\r\n    setTimeout(() => setCodeClass(!codeClass), 100);\r\n    setCheckedCode(!checkedCode);\r\n  }\r\n\r\n  function getBase64(file) {\r\n    return new Promise((resolve, reject) => {\r\n      const reader = new FileReader();\r\n      reader.readAsDataURL(file);\r\n      reader.onload = () => resolve(reader.result);\r\n      reader.onerror = (error) => reject(error);\r\n    });\r\n  }\r\n\r\n  const [previewVisible, setPreviewVisible] = useState(false);\r\n  const [previewImage, setPreviewImage] = useState();\r\n  const [previewTitle, setPreviewTitle] = useState();\r\n  const [fileList, setFileList] = useState([\r\n    {\r\n      uid: \"-1\",\r\n      name: \"image.png\",\r\n      status: \"done\",\r\n      url: images,\r\n    },\r\n    {\r\n      uid: \"-2\",\r\n      name: \"image.png\",\r\n      status: \"done\",\r\n      url: images,\r\n    },\r\n    {\r\n      uid: \"-3\",\r\n      name: \"image.png\",\r\n      status: \"done\",\r\n      url: images,\r\n    },\r\n    {\r\n      uid: \"-4\",\r\n      name: \"image.png\",\r\n      status: \"done\",\r\n      url: images,\r\n    },\r\n    {\r\n      uid: \"-5\",\r\n      name: \"image.png\",\r\n      status: \"error\",\r\n    },\r\n  ]);\r\n\r\n  const handleCancel = () => setPreviewVisible(false);\r\n\r\n  const handlePreview = async (file) => {\r\n    if (!file.url && !file.preview) {\r\n      file.preview = await getBase64(file.originFileObj);\r\n    }\r\n\r\n    setPreviewImage(file.url || file.preview);\r\n    setPreviewVisible(true);\r\n    setPreviewTitle(\r\n      file.name || file.url.substring(file.url.lastIndexOf(\"/\") + 1)\r\n    );\r\n  };\r\n\r\n  const handleChange = (e) => {\r\n    setFileList(e.fileList);\r\n  };\r\n\r\n  const uploadButton = (\r\n    <div>\r\n      <RiAddLine size={24} />\r\n      <div style={{ marginTop: 8 }}>Upload</div>\r\n    </div>\r\n  );\r\n\r\n  return (\r\n    <Card className=\"hp-border-color-black-40\">\r\n      <Row>\r\n        <Col className=\"hp-mb-16\" span={24}>\r\n          <Row>\r\n            <Col lg={12} span={20}>\r\n              <h4>Pictures Wall</h4>\r\n              <p className=\"hp-p1-body\">\r\n                After users upload picture, the thumbnail will be shown in list.\r\n                The upload button will disappear when count meets limitation.\r\n              </p>\r\n            </Col>\r\n\r\n            <Col lg={12} span={4} className=\"hp-text-right\">\r\n              <Button\r\n                onClick={toggleChecked}\r\n                type=\"text\"\r\n                icon={<RiCodeSSlashLine className=\"hp-text-color-black-80\" />}\r\n              />\r\n            </Col>\r\n          </Row>\r\n        </Col>\r\n\r\n        <Col span={24}>\r\n          <Upload\r\n            action=\"https://www.mocky.io/v2/5cc8019d300000980a055e76\"\r\n            listType=\"picture-card\"\r\n            fileList={fileList}\r\n            onPreview={handlePreview}\r\n            onChange={handleChange}\r\n          >\r\n            {fileList.length >= 8 ? null : uploadButton}\r\n          </Upload>\r\n\r\n          <Modal\r\n            visible={previewVisible}\r\n            title={previewTitle}\r\n            footer={null}\r\n            onCancel={handleCancel}\r\n          >\r\n            <img alt=\"example\" style={{ width: \"100%\" }} src={previewImage} />\r\n          </Modal>\r\n        </Col>\r\n      </Row>\r\n\r\n      {checkedCode && (\r\n        <SyntaxHighlighter\r\n          language=\"javascript\"\r\n          className={`show-code hp-mt-24 ${codeClass && \"show-code-active\"}`}\r\n          style={monoBlue}\r\n        >\r\n          {picturesWall}\r\n        </SyntaxHighlighter>\r\n      )}\r\n    </Card>\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\r\n\r\nimport SyntaxHighlighter from \"react-syntax-highlighter\";\r\nimport { monoBlue } from \"react-syntax-highlighter/dist/esm/styles/hljs\";\r\nimport { drag } from \"./code.js\";\r\n\r\nimport { Card, Row, Col, Upload, message, Button } from \"antd\";\r\nimport {\r\n  RiUploadCloud2Line,\r\n  RiCheckboxCircleLine,\r\n  RiCloseCircleLine,\r\n  RiCodeSSlashLine,\r\n} from \"react-icons/ri\";\r\n\r\n\r\nconst { Dragger } = Upload;\r\n\r\nexport default function DragUpload() {\r\n  const [checkedCode, setCheckedCode] = useState(false);\r\n  const [codeClass, setCodeClass] = useState(false);\r\n\r\n  function toggleChecked() {\r\n    setTimeout(() => setCodeClass(!codeClass), 100);\r\n    setCheckedCode(!checkedCode);\r\n  }\r\n\r\n  const props = {\r\n    name: \"file\",\r\n    multiple: true,\r\n    action: \"https://www.mocky.io/v2/5cc8019d300000980a055e76\",\r\n    onChange(info) {\r\n      const { status } = info.file;\r\n      if (status !== \"uploading\") {\r\n      }\r\n      if (status === \"done\") {\r\n        message.success({\r\n          content: `${info.file.name} file uploaded successfully.`,\r\n          icon: <RiCheckboxCircleLine className=\"remix-icon\" />,\r\n        });\r\n      } else if (status === \"error\") {\r\n        message.error({\r\n          content: `${info.file.name} file upload failed.`,\r\n          icon: <RiCloseCircleLine className=\"remix-icon\" />,\r\n        });\r\n      }\r\n    },\r\n    onDrop() {},\r\n  };\r\n\r\n  return (\r\n    <Card className=\"hp-border-color-black-40\">\r\n      <Row>\r\n        <Col className=\"hp-mb-16\" span={24}>\r\n          <Row>\r\n            <Col lg={12} span={20}>\r\n              <h4>Drag and Drop</h4>\r\n              <p className=\"hp-p1-body\">\r\n                You can drag files to a specific area, to upload. Alternatively,\r\n                you can also upload by selecting.\r\n              </p>\r\n            </Col>\r\n\r\n            <Col lg={12} span={4} className=\"hp-text-right\">\r\n              <Button\r\n                onClick={toggleChecked}\r\n                type=\"text\"\r\n                icon={<RiCodeSSlashLine className=\"hp-text-color-black-80\" />}\r\n              />\r\n            </Col>\r\n          </Row>\r\n        </Col>\r\n\r\n        <Col span={24} className=\"hp-upload-dragger-col\">\r\n          <Dragger {...props}>\r\n            <p className=\"ant-upload-drag-icon\">\r\n              <RiUploadCloud2Line className=\"remix-icon\" />\r\n            </p>\r\n\r\n            <p className=\"ant-upload-text\">\r\n              Click or drag file to this area to upload\r\n            </p>\r\n\r\n            <p className=\"ant-upload-hint\">\r\n              Support for a single or bulk upload. Strictly prohibit from\r\n              uploading company data or other band files\r\n            </p>\r\n          </Dragger>\r\n        </Col>\r\n      </Row>\r\n\r\n      {checkedCode && (\r\n        <SyntaxHighlighter\r\n          language=\"javascript\"\r\n          className={`show-code hp-mt-24 ${codeClass && \"show-code-active\"}`}\r\n          style={monoBlue}\r\n        >\r\n          {drag}\r\n        </SyntaxHighlighter>\r\n      )}\r\n    </Card>\r\n  );\r\n}\r\n","import React from \"react\";\r\n\r\nimport { Row, Col } from \"antd\";\r\n\r\nimport PageContent from \"../../../../layout/components/content/page-content\";\r\nimport ClickUpload from \"./click\";\r\nimport FileListUpload from \"./fileList\";\r\nimport PicturesListUpload from \"./picturesList\";\r\nimport AvatarUpload from \"./avatar\";\r\nimport PicturesWallUpload from \"./picturesWall\";\r\nimport DragUpload from \"./drag\";\r\n\r\nexport default function Upload() {\r\n  return (\r\n    <Row gutter={[32, 32]} className=\"hp-mb-32\">\r\n      <Col span={24}>\r\n        <PageContent\r\n          title=\"Upload\"\r\n          desc=\"Upload file by selecting or dragging.\"\r\n          breadcrumb={[\r\n            {\r\n              title: \"Components\",\r\n              link: \"/components/components-page\"\r\n            },\r\n            {\r\n              title: \"Data Entry\",\r\n            },\r\n            {\r\n              title: \"Upload\",\r\n            }\r\n          ]}\r\n        />\r\n      </Col>\r\n\r\n      <Col span={24}>\r\n        <ClickUpload />\r\n      </Col>\r\n\r\n      <Col span={24}>\r\n        <FileListUpload />\r\n      </Col>\r\n\r\n      <Col span={24}>\r\n        <PicturesListUpload />\r\n      </Col>\r\n\r\n      <Col span={24}>\r\n        <AvatarUpload />\r\n      </Col>\r\n\r\n      <Col span={24}>\r\n        <PicturesWallUpload />\r\n      </Col>\r\n\r\n      <Col span={24}>\r\n        <DragUpload />\r\n      </Col>\r\n    </Row>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport { Breadcrumb, Col, Row } from \"antd\";\r\n\r\nexport default function PageContent(props) {\r\n  const { title, breadcrumb, desc } = props;\r\n\r\n  return (\r\n    <Col span={24} className=\"hp-bg-black-bg hp-py-sm-32 hp-py-64 hp-px-sm-24 hp-px-md-48 hp-px-80 hp-overflow-hidden\" style={{ borderRadius: 32 }}>\r\n      <svg\r\n        width={358}\r\n        height={336}\r\n        fill=\"none\"\r\n        xmlns=\"http://www.w3.org/2000/svg\"\r\n        className=\"hp-position-absolute-bottom-right hp-rtl-scale-x-n1\"\r\n      >\r\n        <path\r\n          d=\"M730.404 135.471 369.675-6.641l88.802 164.001-243.179-98.8 246.364 263.281-329.128-126.619 114.698 166.726-241.68-62.446\"\r\n          stroke=\"url(#a)\"\r\n          strokeWidth={40}\r\n          strokeLinejoin=\"bevel\"\r\n        />\r\n        <defs>\r\n          <linearGradient\r\n            id=\"a\"\r\n            x1={315.467}\r\n            y1={6.875}\r\n            x2={397.957}\r\n            y2={337.724}\r\n            gradientUnits=\"userSpaceOnUse\"\r\n          >\r\n            <stop stopColor=\"#fff\" />\r\n            <stop offset={1} stopColor=\"#fff\" stopOpacity={0} />\r\n          </linearGradient>\r\n        </defs>\r\n      </svg>\r\n\r\n      <Row>\r\n        <Col sm={12} span={24}>\r\n          <Row>\r\n            {\r\n              title && (\r\n                <Col span={24}>\r\n                  <h1 className=\"hp-mb-0 hp-text-color-black-0\">{title}</h1>\r\n                </Col>\r\n              )\r\n            }\r\n\r\n            {\r\n              breadcrumb && (\r\n                <Col span={24}>\r\n                  <Breadcrumb className=\"hp-d-flex hp-flex-wrap hp-mt-24\">\r\n                    <Breadcrumb.Item>\r\n                      <Link to=\"/\" className=\"hp-text-color-black-0 hp-hover-text-color-primary-2\">Home</Link>\r\n                    </Breadcrumb.Item>\r\n\r\n                    {\r\n                      breadcrumb.map((item, index) => (\r\n                        <Breadcrumb.Item key={index}>\r\n                          <Link to={item.link ? item.link : '#'} className={`hp-text-color-black-0${item.link ? ' hp-hover-text-color-primary-2' : ''}`}>{item.title}</Link>\r\n                        </Breadcrumb.Item>\r\n                      ))\r\n                    }\r\n                  </Breadcrumb>\r\n                </Col>\r\n              )\r\n            }\r\n\r\n            {\r\n              desc && (\r\n                <Col span={24}>\r\n                  <p className=\"h5 hp-mb-0 hp-mt-24 hp-text-color-black-0\">{desc}</p>\r\n                </Col>\r\n              )\r\n            }\r\n          </Row>\r\n        </Col>\r\n      </Row>\r\n    </Col>\r\n  );\r\n}\r\n","export default __webpack_public_path__ + \"static/media/memoji-1.afa5922f.png\";"],"sourceRoot":""}