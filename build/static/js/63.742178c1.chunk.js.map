{"version":3,"sources":["view/components/data-display/avatar/basic.jsx","view/components/data-display/avatar/code.js","view/components/data-display/avatar/types.jsx","view/components/data-display/avatar/avatarBadge.jsx","view/components/data-display/avatar/responsiveAvatar.jsx","view/components/data-display/avatar/avatarGroup.jsx","view/components/data-display/avatar/index.jsx","layout/components/content/page-content/index.jsx"],"names":["BasicAvatar","useState","checkedCode","setCheckedCode","codeClass","setCodeClass","className","lg","span","onClick","setTimeout","type","icon","gutter","align","size","shape","language","style","monoBlue","AvatarTypes","src","AvatarBadge","count","dot","AvatarResponsive","xs","sm","md","xl","xxl","AvatarGroup","theme","useSelector","state","customise","Group","title","placement","maxCount","maxStyle","color","backgroundColor","Avatar","desc","breadcrumb","link","PageContent","props","borderRadius","width","height","fill","xmlns","d","stroke","strokeWidth","strokeLinejoin","id","x1","y1","x2","y2","gradientUnits","stopColor","offset","stopOpacity","Item","to","map","item","index"],"mappings":"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","file":"static/js/63.742178c1.chunk.js","sourcesContent":["import React, { useState } from \"react\";\n\nimport SyntaxHighlighter from \"react-syntax-highlighter\";\nimport { monoBlue } from \"react-syntax-highlighter/dist/esm/styles/hljs\";\nimport { basic } from \"./code.js\";\n\nimport { Card, Row, Col, Avatar, Button, } from \"antd\";\nimport { RiCodeSSlashLine } from \"react-icons/ri\";\nimport { User } from \"react-iconly\";\n\nexport default function BasicAvatar() {\n  const [checkedCode, setCheckedCode] = useState(false);\n  const [codeClass, setCodeClass] = useState(false);\n\n  function toggleChecked() {\n    setTimeout(() => setCodeClass(!codeClass), 100);\n    setCheckedCode(!checkedCode);\n  }\n\n  return (\n    <Card className=\"hp-border-color-black-40\">\n      <Row>\n        <Col className=\"hp-mb-16\" lg={12} span={20}>\n          <h4>Basic</h4>\n          <p className=\"hp-p1-body\">\n            Three sizes and two shapes are available.\n          </p>\n        </Col>\n\n        <Col lg={12} span={4} className=\"hp-text-right\">\n          <Button\n            onClick={toggleChecked}\n            type=\"text\"\n            icon={<RiCodeSSlashLine className=\"hp-text-color-black-80\" />}\n          />\n        </Col>\n\n        <Col span={24}>\n          <Col className=\"hp-mb-24\">\n            <Row gutter={[16, 16]} align=\"middle\">\n              <Col>\n                <Avatar\n                  size={64}\n                  icon={<User className=\"remix-icon\" />}\n                />\n              </Col>\n\n              <Col>\n                <Avatar\n                  size=\"large\"\n                  icon={<User className=\"remix-icon\" />}\n                />\n              </Col>\n\n              <Col>\n                <Avatar\n                  icon={<User className=\"remix-icon\" />}\n                />\n              </Col>\n\n              <Col>\n                <Avatar\n                  size=\"small\"\n                  icon={<User className=\"remix-icon\" />}\n                />\n              </Col>\n            </Row>\n          </Col>\n\n          <Col>\n            <Row gutter={[16, 16]} align=\"middle\">\n              <Col>\n                <Avatar\n                  shape=\"square\"\n                  size={64}\n                  icon={<User className=\"remix-icon\" />}\n                />\n              </Col>\n\n              <Col>\n                <Avatar\n                  shape=\"square\"\n                  size=\"large\"\n                  icon={<User className=\"remix-icon\" />}\n                />\n              </Col>\n\n              <Col>\n                <Avatar\n                  shape=\"square\"\n                  icon={<User className=\"remix-icon\" />}\n                />\n              </Col>\n\n              <Col>\n                <Avatar\n                  shape=\"square\"\n                  size=\"small\"\n                  icon={<User className=\"remix-icon\" />}\n                />\n              </Col>\n            </Row>\n          </Col>\n        </Col>\n      </Row>\n\n      {checkedCode && (\n        <SyntaxHighlighter\n          language=\"javascript\"\n          className={`show-code hp-mt-24 ${codeClass && \"show-code-active\"}`}\n          style={monoBlue}\n        >\n          {basic}\n        </SyntaxHighlighter>\n      )}\n    </Card>\n  );\n}\n","export const responsiveAvatar = `\nimport { Avatar } from \"antd\";\nimport { User } from \"react-iconly\";\n\nreturn (\n  <Avatar\n    size={{ xs: 24, sm: 32, md: 40, lg: 64, xl: 80, xxl: 100 }}\n    icon={<User className=\"remix-icon\" />}\n  />\n);\n`;\n\nexport const basic = `\nimport { Avatar } from \"antd\";\nimport { User } from \"react-iconly\";\n\nreturn (\n  <>\n    <div>\n      <Avatar size={64} icon={<User className=\"remix-icon\" />} />\n      <Avatar size=\"large\" icon={<User className=\"remix-icon\" />} />\n      <Avatar icon={<User className=\"remix-icon\" />} />\n      <Avatar size=\"small\" icon={<User className=\"remix-icon\" />} />\n    </div>\n\n    <div>\n      <Avatar shape=\"square\" size={64} icon={<User className=\"remix-icon\" />} />\n      <Avatar shape=\"square\" size=\"large\" icon={<User className=\"remix-icon\" />} />\n      <Avatar shape=\"square\" icon={<User className=\"remix-icon\" />} />\n      <Avatar shape=\"square\" size=\"small\" icon={<User className=\"remix-icon\" />} />\n    </div>\n  </>\n);\n`;\n\nexport const avatarbadge = `\nimport { Avatar, Badge } from \"antd\";\nimport { User } from \"react-iconly\";\n\nreturn (\n  <>\n    <Badge count={1}>\n      <Avatar\n        shape=\"square\"\n        size={48}\n        icon={<User className=\"remix-icon\" />}\n      />\n    </Badge>\n\n    <Badge dot>\n      <Avatar\n        shape=\"square\"\n        size={48}\n        icon={<User className=\"remix-icon\" />}\n      />\n    </Badge>\n  </>\n);\n`;\n\nexport const avatarGroup = `\nimport { Avatar, Tooltip, Divider } from \"antd\";\nimport { RiReactjsLine } from \"react-icons/ri\";\nimport { User } from \"react-iconly\";\n\nreturn (\n  <>\n    <Avatar.Group>\n      <Avatar src=\"https://zos.alipayobjects.com/rmsportal/ODTLcjxAfvqbxHnVXCYX.png\" />\n\n      <Avatar className=\"hp-text-color-danger-1 hp-bg-color-danger-4\">\n        K\n      </Avatar>\n\n      <Tooltip title=\"Ant User\" placement=\"top\">\n        <Avatar\n          className=\"hp-text-color-black-100 hp-bg-color-black-20\"\n          icon={<User />}\n        />\n      </Tooltip>\n\n      <Avatar\n        className=\"hp-text-color-info-1 hp-bg-color-info-4\"\n        icon={<RiReactjsLine />}\n      />\n    </Avatar.Group>\n\n    <Divider />\n\n    <Avatar.Group\n      maxCount={2}\n      maxStyle={{ color: \"#FF0022\", backgroundColor: \"#FFE7EA\" }}\n    >\n      <Avatar src=\"https://zos.alipayobjects.com/rmsportal/ODTLcjxAfvqbxHnVXCYX.png\" />\n\n      <Avatar className=\"hp-text-color-warning-1 hp-bg-color-warning-4\">\n        K\n      </Avatar>\n\n      <Tooltip title=\"Ant User\" placement=\"top\">\n        <Avatar\n          style={{ backgroundColor: \"#87d068\" }}\n          icon={<User />}\n        />\n      </Tooltip>\n\n      <Avatar\n        style={{ backgroundColor: \"#1890ff\" }}\n        icon={<RiReactjsLine />}\n      />\n    </Avatar.Group>\n\n    <Divider />\n\n    <Avatar.Group\n      maxCount={2}\n      size=\"large\"\n      maxStyle={{ color: \"#FF0022\", backgroundColor: \"#FFE7EA\" }}\n    >\n      <Avatar src=\"https://zos.alipayobjects.com/rmsportal/ODTLcjxAfvqbxHnVXCYX.png\" />\n\n      <Avatar className=\"hp-text-color-warning-1 hp-bg-color-warning-4\">\n        K\n      </Avatar>\n\n      <Tooltip title=\"Ant User\" placement=\"top\">\n        <Avatar\n          style={{ backgroundColor: \"#87d068\" }}\n          icon={<User />}\n        />\n      </Tooltip>\n\n      <Avatar\n        style={{ backgroundColor: \"#1890ff\" }}\n        icon={<RiReactjsLine />}\n      />\n    </Avatar.Group>\n  </>\n);\n`;\n\nexport const types = `\nimport { Avatar, Image } from \"antd\";\nimport { User } from \"react-iconly\";\n\nreturn (\n  <>\n    <Avatar icon={<User />} />\n\n    <Avatar>S</Avatar>\n\n    <Avatar size={40}>USER</Avatar>\n\n    <Avatar\n      src=\"https://zos.alipayobjects.com/rmsportal/ODTLcjxAfvqbxHnVXCYX.png\"\n    />\n\n    <Avatar\n      src={\n        <Image src=\"https://zos.alipayobjects.com/rmsportal/ODTLcjxAfvqbxHnVXCYX.png\" />\n      }\n    />\n\n    <Avatar className=\"hp-text-color-danger-1 hp-bg-color-danger-4\">\n      D\n    </Avatar>\n    \n    <Avatar\n      className=\"hp-bg-color-success-4 hp-text-color-success-1\"\n      icon={<User className=\"remix-icon\" />}\n    />\n  </>\n);\n`;","import React, { useState } from \"react\";\n\nimport SyntaxHighlighter from \"react-syntax-highlighter\";\nimport { monoBlue } from \"react-syntax-highlighter/dist/esm/styles/hljs\";\nimport { types } from \"./code.js\";\n\nimport { Card, Row, Col, Avatar, Image, Button } from \"antd\";\nimport { RiCodeSSlashLine } from \"react-icons/ri\";\nimport { User } from \"react-iconly\";\n\nexport default function AvatarTypes() {\n  const [checkedCode, setCheckedCode] = useState(false);\n  const [codeClass, setCodeClass] = useState(false);\n\n  function toggleChecked() {\n    setTimeout(() => setCodeClass(!codeClass), 100);\n    setCheckedCode(!checkedCode);\n  }\n\n  return (\n    <Card className=\"hp-border-color-black-40\">\n      <Row>\n        <Col className=\"hp-mb-16\" lg={12} span={20}>\n          <h4>Type</h4>\n          <p className=\"hp-p1-body\">\n            Image, Icon and letter are supported, and the latter two kinds of\n            avatar can have custom colors and background colors.\n          </p>\n        </Col>\n\n        <Col lg={12} span={4} className=\"hp-text-right\">\n          <Button\n            onClick={toggleChecked}\n            type=\"text\"\n            icon={<RiCodeSSlashLine className=\"hp-text-color-black-80\" />}\n          />\n        </Col>\n\n        <Col span={24}>\n          <Row gutter={[16, 16]} align=\"middle\">\n            <Col>\n              <Avatar icon={<User />} />\n            </Col>\n\n            <Col>\n              <Avatar>S</Avatar>\n            </Col>\n\n            <Col>\n              <Avatar size={40}>USER</Avatar>\n            </Col>\n\n            <Col>\n              <Avatar\n                src=\"https://zos.alipayobjects.com/rmsportal/ODTLcjxAfvqbxHnVXCYX.png\"\n                className=\"ant-avatar-transparent\"\n              />\n            </Col>\n\n            <Col>\n              <Avatar\n                src={\n                  <Image src=\"https://zos.alipayobjects.com/rmsportal/ODTLcjxAfvqbxHnVXCYX.png\" />\n                }\n                className=\"ant-avatar-transparent\"\n              />\n            </Col>\n\n            <Col>\n              <Avatar className=\"hp-text-color-danger-1 hp-bg-color-danger-4 hp-bg-color-dark-danger\">\n                D\n              </Avatar>\n            </Col>\n\n            <Col>\n              <Avatar\n                className=\"hp-bg-color-success-4 hp-bg-color-dark-success hp-text-color-success-1\"\n                icon={<User className=\"remix-icon\" />}\n              />\n            </Col>\n          </Row>\n        </Col>\n      </Row>\n\n      {checkedCode && (\n        <SyntaxHighlighter\n          language=\"javascript\"\n          className={`show-code hp-mt-24 ${codeClass && \"show-code-active\"}`}\n          style={monoBlue}\n        >\n          {types}\n        </SyntaxHighlighter>\n      )}\n    </Card>\n  );\n}\n","import React, { useState } from \"react\";\n\nimport SyntaxHighlighter from \"react-syntax-highlighter\";\nimport { monoBlue } from \"react-syntax-highlighter/dist/esm/styles/hljs\";\nimport { avatarbadge } from \"./code.js\";\n\nimport { Card, Row, Col, Avatar, Badge, Button } from \"antd\";\nimport { RiCodeSSlashLine } from \"react-icons/ri\";\nimport { User } from \"react-iconly\";\n\nexport default function AvatarBadge() {\n  const [checkedCode, setCheckedCode] = useState(false);\n  const [codeClass, setCodeClass] = useState(false);\n\n  function toggleChecked() {\n    setTimeout(() => setCodeClass(!codeClass), 100);\n    setCheckedCode(!checkedCode);\n  }\n\n  return (\n    <Card className=\"hp-border-color-black-40\">\n      <Row>\n        <Col className=\"hp-mb-16\" lg={12} span={20}>\n          <h4>With Badge</h4>\n          <p className=\"hp-p1-body\">\n            Usually used for reminders and notifications.\n          </p>\n        </Col>\n\n        <Col lg={12} span={4} className=\"hp-text-right\">\n          <Button\n            onClick={toggleChecked}\n            type=\"text\"\n            icon={<RiCodeSSlashLine className=\"hp-text-color-black-80\" />}\n          />\n        </Col>\n\n        <Col span={24}>\n          <span className=\"hp-mr-16\">\n            <Badge count={1}>\n              <Avatar\n                shape=\"square\"\n                size={48}\n                icon={<User className=\"remix-icon\" />}\n              />\n            </Badge>\n          </span>\n\n          <span>\n            <Badge dot>\n              <Avatar\n                shape=\"square\"\n                size={48}\n                icon={<User className=\"remix-icon\" />}\n              />\n            </Badge>\n          </span>\n        </Col>\n      </Row>\n\n      {checkedCode && (\n        <SyntaxHighlighter\n          language=\"javascript\"\n          className={`show-code hp-mt-24 ${codeClass && \"show-code-active\"}`}\n          style={monoBlue}\n        >\n          {avatarbadge}\n        </SyntaxHighlighter>\n      )}\n    </Card>\n  );\n}\n","import React, { useState } from \"react\";\n\nimport SyntaxHighlighter from \"react-syntax-highlighter\";\nimport { monoBlue } from \"react-syntax-highlighter/dist/esm/styles/hljs\";\nimport { responsiveAvatar } from \"./code.js\";\n\nimport { Card, Row, Col, Avatar, Button } from \"antd\";\nimport { RiCodeSSlashLine } from \"react-icons/ri\";\nimport { User } from \"react-iconly\";\n\nexport default function AvatarResponsive() {\n  const [checkedCode, setCheckedCode] = useState(false);\n  const [codeClass, setCodeClass] = useState(false);\n\n  function toggleChecked() {\n    setTimeout(() => setCodeClass(!codeClass), 100);\n    setCheckedCode(!checkedCode);\n  }\n\n  return (\n    <Card className=\"hp-border-color-black-40\">\n      <Row>\n        <Col className=\"hp-mb-16\" lg={12} span={20}>\n          <h4>Responsive Size</h4>\n          <p className=\"hp-p1-body\">\n            Avatar size can be automatically adjusted based on the screen size.\n          </p>\n        </Col>\n\n        <Col lg={12} span={4} className=\"hp-text-right\">\n          <Button\n            onClick={toggleChecked}\n            type=\"text\"\n            icon={<RiCodeSSlashLine className=\"hp-text-color-black-80\" />}\n          />\n        </Col>\n\n        <Col span={24}>\n          <Avatar\n            size={{ xs: 24, sm: 32, md: 40, lg: 64, xl: 80, xxl: 100 }}\n            icon={<User className=\"remix-icon\" />}\n          />\n        </Col>\n      </Row>\n\n      {checkedCode && (\n        <SyntaxHighlighter\n          language=\"javascript\"\n          className={`show-code hp-mt-24 ${codeClass && \"show-code-active\"}`}\n          style={monoBlue}\n        >\n          {responsiveAvatar}\n        </SyntaxHighlighter>\n      )}\n    </Card>\n  );\n}\n","import React, { useState } from \"react\";\n\nimport { useSelector } from \"react-redux\";\n\nimport SyntaxHighlighter from \"react-syntax-highlighter\";\nimport { monoBlue } from \"react-syntax-highlighter/dist/esm/styles/hljs\";\nimport { avatarGroup } from \"./code.js\";\n\nimport { Card, Row, Col, Avatar, Tooltip, Divider, Button } from \"antd\";\nimport { RiReactjsLine, RiCodeSSlashLine } from \"react-icons/ri\";\nimport { User } from \"react-iconly\";\n\nexport default function AvatarGroup() {\n  // Redux\n  const theme = useSelector(state => state.customise.theme)\n\n  const [checkedCode, setCheckedCode] = useState(false);\n  const [codeClass, setCodeClass] = useState(false);\n\n  function toggleChecked() {\n    setTimeout(() => setCodeClass(!codeClass), 100);\n    setCheckedCode(!checkedCode);\n  }\n\n  return (\n    <Card className=\"hp-border-color-black-40\">\n      <Row>\n        <Col className=\"hp-mb-16\" lg={12} span={20}>\n          <h4>Avatar Group</h4>\n          <p className=\"hp-p1-body\">Avatar group display. </p>\n        </Col>\n\n        <Col lg={12} span={4} className=\"hp-text-right\">\n          <Button\n            onClick={toggleChecked}\n            type=\"text\"\n            icon={<RiCodeSSlashLine className=\"hp-text-color-black-80\" />}\n          />\n        </Col>\n\n        <Col span={24}>\n          <Avatar.Group>\n            <Avatar src=\"https://zos.alipayobjects.com/rmsportal/ODTLcjxAfvqbxHnVXCYX.png\" className=\"ant-avatar-transparent\" />\n\n            <Avatar className=\"hp-text-color-danger-1 hp-bg-color-danger-4 hp-bg-color-dark-danger\">\n              K\n            </Avatar>\n\n            <Tooltip title=\"Ant User\" placement=\"top\">\n              <Avatar\n                className=\"hp-text-color-black-100 hp-bg-color-black-20 hp-bg-color-dark-80 hp-text-color-dark-0\"\n                icon={<User />}\n              />\n            </Tooltip>\n\n            <Avatar\n              className=\"hp-text-color-info-1 hp-bg-color-info-4 hp-bg-color-dark-info\"\n              icon={<RiReactjsLine />}\n            />\n          </Avatar.Group>\n\n          <Divider />\n\n          <Avatar.Group\n            maxCount={2}\n            maxStyle={{ color: \"#FF0022\", backgroundColor: theme == \"light\" ? \"#FFE7EA\" : \"#2E1618\" }}\n          >\n            <Avatar src=\"https://zos.alipayobjects.com/rmsportal/ODTLcjxAfvqbxHnVXCYX.png\" className=\"ant-avatar-transparent\" />\n\n            <Avatar className=\"hp-text-color-warning-1 hp-bg-color-warning-4 hp-bg-color-dark-warning\">\n              K\n            </Avatar>\n\n            <Tooltip title=\"Ant User\" placement=\"top\">\n              <Avatar\n                style={{ backgroundColor: \"#87d068\" }}\n                icon={<User />}\n              />\n            </Tooltip>\n\n            <Avatar\n              style={{ backgroundColor: \"#1890ff\" }}\n              icon={<RiReactjsLine />}\n            />\n          </Avatar.Group>\n\n          <Divider />\n\n          <Avatar.Group\n            maxCount={2}\n            size=\"large\"\n            maxStyle={{ color: \"#FF0022\", backgroundColor: theme == \"light\" ? \"#FFE7EA\" : \"#2E1618\" }}\n          >\n            <Avatar src=\"https://zos.alipayobjects.com/rmsportal/ODTLcjxAfvqbxHnVXCYX.png\" className=\"ant-avatar-transparent\" />\n\n            <Avatar className=\"hp-text-color-warning-1 hp-bg-color-warning-4 hp-bg-color-dark-warning\">\n              K\n            </Avatar>\n\n            <Tooltip title=\"Ant User\" placement=\"top\">\n              <Avatar\n                style={{ backgroundColor: \"#87d068\" }}\n                icon={<User />}\n              />\n            </Tooltip>\n\n            <Avatar\n              style={{ backgroundColor: \"#1890ff\" }}\n              icon={<RiReactjsLine />}\n            />\n          </Avatar.Group>\n        </Col>\n      </Row>\n\n      {\n        checkedCode && (\n          <SyntaxHighlighter\n            language=\"javascript\"\n            className={`show-code hp-mt-24 ${codeClass && \"show-code-active\"}`}\n            style={monoBlue}\n          >\n            {avatarGroup}\n          </SyntaxHighlighter>\n        )\n      }\n    </Card >\n  );\n}\n","import React from \"react\";\n\nimport { Row, Col } from \"antd\";\n\nimport PageContent from \"../../../../layout/components/content/page-content\";\nimport BasicAvatar from \"./basic\";\nimport AvatarTypes from \"./types\";\nimport AvatarBadge from \"./avatarBadge\";\nimport AvatarResponsive from \"./responsiveAvatar\";\nimport AvatarGroup from \"./avatarGroup\";\n\nexport default function Avatar() {\n  return (\n    <Row gutter={[32, 32]} className=\"hp-mb-32\">\n      <Col span={24}>\n        <PageContent\n          title=\"Avatar\"\n          desc=\"Avatars can be used to represent people or objects. It supports images, Icons, or letters.\"\n          breadcrumb={[\n            {\n              title: \"Components\",\n              link: \"/components/components-page\"\n            },\n            {\n              title: \"Data Display\",\n            },\n            {\n              title: \"Avatar\",\n            }\n          ]}\n        />\n      </Col>\n\n      <Col span={24}>\n        <BasicAvatar />\n      </Col>\n\n      <Col span={24}>\n        <AvatarGroup />\n      </Col>\n\n      <Col span={24}>\n        <AvatarTypes />\n      </Col>\n\n      <Col span={24}>\n        <AvatarBadge />\n      </Col>\n\n      <Col span={24}>\n        <AvatarResponsive />\n      </Col>\n    </Row>\n  );\n}\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nimport { Breadcrumb, Col, Row } from \"antd\";\n\nexport default function PageContent(props) {\n  const { title, breadcrumb, desc } = props;\n\n  return (\n    <Col span={24} className=\"hp-bg-black-bg hp-py-sm-32 hp-py-64 hp-px-sm-24 hp-px-md-48 hp-px-80 hp-overflow-hidden\" style={{ borderRadius: 32 }}>\n      <svg\n        width={358}\n        height={336}\n        fill=\"none\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n        className=\"hp-position-absolute-bottom-right hp-rtl-scale-x-n1\"\n      >\n        <path\n          d=\"M730.404 135.471 369.675-6.641l88.802 164.001-243.179-98.8 246.364 263.281-329.128-126.619 114.698 166.726-241.68-62.446\"\n          stroke=\"url(#a)\"\n          strokeWidth={40}\n          strokeLinejoin=\"bevel\"\n        />\n        <defs>\n          <linearGradient\n            id=\"a\"\n            x1={315.467}\n            y1={6.875}\n            x2={397.957}\n            y2={337.724}\n            gradientUnits=\"userSpaceOnUse\"\n          >\n            <stop stopColor=\"#fff\" />\n            <stop offset={1} stopColor=\"#fff\" stopOpacity={0} />\n          </linearGradient>\n        </defs>\n      </svg>\n\n      <Row>\n        <Col sm={12} span={24}>\n          <Row>\n            {\n              title && (\n                <Col span={24}>\n                  <h1 className=\"hp-mb-0 hp-text-color-black-0\">{title}</h1>\n                </Col>\n              )\n            }\n\n            {\n              breadcrumb && (\n                <Col span={24}>\n                  <Breadcrumb className=\"hp-d-flex hp-flex-wrap hp-mt-24\">\n                    <Breadcrumb.Item>\n                      <Link to=\"/\" className=\"hp-text-color-black-0 hp-hover-text-color-primary-2\">Home</Link>\n                    </Breadcrumb.Item>\n\n                    {\n                      breadcrumb.map((item, index) => (\n                        <Breadcrumb.Item key={index}>\n                          <Link to={item.link ? item.link : '#'} className={`hp-text-color-black-0${item.link ? ' hp-hover-text-color-primary-2' : ''}`}>{item.title}</Link>\n                        </Breadcrumb.Item>\n                      ))\n                    }\n                  </Breadcrumb>\n                </Col>\n              )\n            }\n\n            {\n              desc && (\n                <Col span={24}>\n                  <p className=\"h5 hp-mb-0 hp-mt-24 hp-text-color-black-0\">{desc}</p>\n                </Col>\n              )\n            }\n          </Row>\n        </Col>\n      </Row>\n    </Col>\n  );\n}\n"],"sourceRoot":""}