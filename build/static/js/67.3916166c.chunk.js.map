{"version":3,"sources":["view/components/data-display/popover/basic.jsx","view/components/data-display/popover/code.js","view/components/data-display/popover/trigers.jsx","view/components/data-display/popover/placement.jsx","view/components/data-display/popover/index.jsx","layout/components/content/page-content/index.jsx"],"names":["BasicPopover","useState","checkedCode","setCheckedCode","codeClass","setCodeClass","content","className","lg","span","onClick","setTimeout","type","icon","title","language","style","monoBlue","PopoverTrigers","trigger","PopoverPlacements","text","direction","useSelector","state","customise","marginRight","whiteSpace","marginLeft","placement","width","float","clear","Popover","gutter","desc","breadcrumb","link","PageContent","props","borderRadius","height","fill","xmlns","d","stroke","strokeWidth","strokeLinejoin","id","x1","y1","x2","y2","gradientUnits","stopColor","offset","stopOpacity","sm","Item","to","map","item","index"],"mappings":"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","file":"static/js/67.3916166c.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\n\r\nimport SyntaxHighlighter from \"react-syntax-highlighter\";\r\nimport { monoBlue } from \"react-syntax-highlighter/dist/esm/styles/hljs\";\r\nimport { basic } from \"./code.js\";\r\n\r\nimport { Card, Row, Col, Popover, Button } from \"antd\";\r\nimport { RiCodeSSlashLine } from \"react-icons/ri\";\r\n\r\nexport default function BasicPopover() {\r\n  const [checkedCode, setCheckedCode] = useState(false);\r\n  const [codeClass, setCodeClass] = useState(false);\r\n\r\n  function toggleChecked() {\r\n    setTimeout(() => setCodeClass(!codeClass), 100);\r\n    setCheckedCode(!checkedCode);\r\n  }\r\n\r\n  const content = (\r\n    <div>\r\n      <p className=\"hp-mb-0\">Content</p>\r\n    </div>\r\n  );\r\n\r\n  return (\r\n    <Card className=\"hp-border-color-black-40\">\r\n      <Row>\r\n        <Col className=\"hp-mb-16\" lg={12} span={20}>\r\n          <h4>Basic</h4>\r\n          <p className=\"hp-p1-body\">\r\n            The most basic example. The size of the floating layer depends on\r\n            the contents region.\r\n          </p>\r\n        </Col>\r\n\r\n        <Col lg={12} span={4} className=\"hp-text-right\">\r\n          <Button\r\n            onClick={toggleChecked}\r\n            type=\"text\"\r\n            icon={<RiCodeSSlashLine className=\"hp-text-color-black-80\" />}\r\n          />\r\n        </Col>\r\n\r\n        <Col span={24}>\r\n          <Popover content={content} title=\"Popover Title\">\r\n            <Button type=\"primary\">Hover me</Button>\r\n          </Popover>\r\n        </Col>\r\n      </Row>\r\n\r\n      {checkedCode && (\r\n        <SyntaxHighlighter\r\n          language=\"javascript\"\r\n          className={`show-code hp-mt-24 ${codeClass && \"show-code-active\"}`}\r\n          style={monoBlue}\r\n        >\r\n          {basic}\r\n        </SyntaxHighlighter>\r\n      )}\r\n    </Card>\r\n  );\r\n}\r\n","export const basic = `\r\nimport { Popover, Button } from \"antd\";\r\n\r\nconst content = (\r\n  <div>\r\n    <p className=\"hp-mb-0\">Content</p>\r\n  </div>\r\n);\r\n\r\nreturn (\r\n  <Popover content={content} title=\"Popover Title\">\r\n    <Button type=\"primary\">Hover me</Button>\r\n  </Popover>\r\n);\r\n`;\r\n\r\nexport const placement = `\r\nimport { Popover, Button } from \"antd\";\r\n\r\nconst text = <span>Popover Title</span>;\r\n\r\nconst content = (\r\n  <div>\r\n    <p>Content</p>\r\n  </div>\r\n);\r\n\r\nconst buttonWidth = 90;\r\n\r\nreturn (\r\n  <div className=\"hp-placement\">\r\n    <div style={{ marginLeft: buttonWidth, whiteSpace: \"nowrap\" }}>\r\n      <Popover\r\n        placement=\"topLeft\"\r\n        title={text}\r\n        content={content}\r\n        trigger=\"click\"\r\n      >\r\n        <Button type=\"primary\">TL</Button>\r\n      </Popover>\r\n\r\n      <Popover\r\n        placement=\"top\"\r\n        title={text}\r\n        content={content}\r\n        trigger=\"click\"\r\n      >\r\n        <Button type=\"primary\" className=\"hp-mx-8\">\r\n          Top\r\n        </Button>\r\n      </Popover>\r\n\r\n      <Popover\r\n        placement=\"topRight\"\r\n        title={text}\r\n        content={content}\r\n        trigger=\"click\"\r\n      >\r\n        <Button type=\"primary\">TR</Button>\r\n      </Popover>\r\n    </div>\r\n\r\n    <div style={{ width: buttonWidth, float: \"left\" }}>\r\n      <Popover\r\n        placement=\"leftTop\"\r\n        title={text}\r\n        content={content}\r\n        trigger=\"click\"\r\n      >\r\n        <Button type=\"primary\">LT</Button>\r\n      </Popover>\r\n\r\n      <Popover\r\n        placement=\"left\"\r\n        title={text}\r\n        content={content}\r\n        trigger=\"click\"\r\n      >\r\n        <Button type=\"primary\" className=\"hp-my-8\">\r\n          Left\r\n        </Button>\r\n      </Popover>\r\n\r\n      <Popover\r\n        placement=\"leftBottom\"\r\n        title={text}\r\n        content={content}\r\n        trigger=\"click\"\r\n      >\r\n        <Button type=\"primary\">LB</Button>\r\n      </Popover>\r\n    </div>\r\n\r\n    <div style={{ width: buttonWidth, marginLeft: buttonWidth * 4 }}>\r\n      <Popover\r\n        placement=\"rightTop\"\r\n        title={text}\r\n        content={content}\r\n        trigger=\"click\"\r\n      >\r\n        <Button type=\"primary\">RT</Button>\r\n      </Popover>\r\n\r\n      <Popover\r\n        placement=\"right\"\r\n        title={text}\r\n        content={content}\r\n        trigger=\"click\"\r\n      >\r\n        <Button type=\"primary\" className=\"hp-my-8\">\r\n          Right\r\n        </Button>\r\n      </Popover>\r\n\r\n      <Popover\r\n        placement=\"rightBottom\"\r\n        title={text}\r\n        content={content}\r\n        trigger=\"click\"\r\n      >\r\n        <Button type=\"primary\">RB</Button>\r\n      </Popover>\r\n    </div>\r\n\r\n    <div\r\n      style={{\r\n        marginLeft: buttonWidth,\r\n        clear: \"both\",\r\n        whiteSpace: \"nowrap\",\r\n      }}\r\n    >\r\n      <Popover\r\n        placement=\"bottomLeft\"\r\n        title={text}\r\n        content={content}\r\n        trigger=\"click\"\r\n      >\r\n        <Button type=\"primary\">BL</Button>\r\n      </Popover>\r\n\r\n      <Popover\r\n        placement=\"bottom\"\r\n        title={text}\r\n        content={content}\r\n        trigger=\"click\"\r\n      >\r\n        <Button type=\"primary\" className=\"hp-mx-8\">\r\n          Bottom\r\n        </Button>\r\n      </Popover>\r\n\r\n      <Popover\r\n        placement=\"bottomRight\"\r\n        title={text}\r\n        content={content}\r\n        trigger=\"click\"\r\n      >\r\n        <Button type=\"primary\">BR</Button>\r\n      </Popover>\r\n    </div>\r\n  </div>\r\n);\r\n`;\r\n\r\nexport const triger = `\r\nimport { Popover, Button } from \"antd\";\r\n\r\nconst content = (\r\n  <div>\r\n    <p className=\"hp-mb-0\">Content</p>\r\n  </div>\r\n);\r\n\r\nreturn (\r\n  <>\r\n    <Popover content={content} title=\"Popover Title\" trigger=\"hover\">\r\n      <Button className=\"hp-mr-16 hp-mb-16\"  type=\"primary\">Hover me</Button>\r\n    </Popover>\r\n\r\n    <Popover content={content} title=\"Popover Title\" trigger=\"focus\">\r\n      <Button type=\"primary\" className=\"hp-mr-16\">Focus me</Button>\r\n    </Popover>\r\n\r\n    <Popover content={content} title=\"Popover Title\" trigger=\"click\">\r\n      <Button type=\"primary\">Click me</Button>\r\n    </Popover>\r\n  </>\r\n);\r\n`;","import React, { useState } from \"react\";\r\n\r\nimport SyntaxHighlighter from \"react-syntax-highlighter\";\r\nimport { monoBlue } from \"react-syntax-highlighter/dist/esm/styles/hljs\";\r\nimport { triger } from \"./code.js\";\r\n\r\nimport { Card, Row, Col, Popover, Button } from \"antd\";\r\nimport { RiCodeSSlashLine } from \"react-icons/ri\";\r\n\r\nexport default function PopoverTrigers() {\r\n  const [checkedCode, setCheckedCode] = useState(false);\r\n  const [codeClass, setCodeClass] = useState(false);\r\n\r\n  function toggleChecked() {\r\n    setTimeout(() => setCodeClass(!codeClass), 100);\r\n    setCheckedCode(!checkedCode);\r\n  }\r\n\r\n  const content = (\r\n    <div>\r\n      <p className=\"hp-mb-0\">Content</p>\r\n    </div>\r\n  );\r\n\r\n  return (\r\n    <Card className=\"hp-border-color-black-40\">\r\n      <Row>\r\n        <Col className=\"hp-mb-16\" lg={12} span={20}>\r\n          <h4>Three ways to trigger</h4>\r\n          <p className=\"hp-p1-body\">Mouse to click, focus and move in.</p>\r\n        </Col>\r\n        <Col lg={12} span={4} className=\"hp-text-right\">\r\n          <Button\r\n            onClick={toggleChecked}\r\n            type=\"text\"\r\n            icon={<RiCodeSSlashLine className=\"hp-text-color-black-80\" />}\r\n          />\r\n        </Col>\r\n\r\n        <Col span={24}>\r\n          <Col>\r\n            <Popover content={content} title=\"Popover Title\" trigger=\"hover\">\r\n              <Button className=\"hp-mr-16 hp-mb-16\" type=\"primary\">\r\n                Hover me\r\n              </Button>\r\n            </Popover>\r\n\r\n            <Popover content={content} title=\"Popover Title\" trigger=\"focus\">\r\n              <Button type=\"primary\" className=\"hp-mr-16\">\r\n                Focus me\r\n              </Button>\r\n            </Popover>\r\n\r\n            <Popover content={content} title=\"Popover Title\" trigger=\"click\">\r\n              <Button type=\"primary\">Click me</Button>\r\n            </Popover>\r\n          </Col>\r\n        </Col>\r\n      </Row>\r\n\r\n      {checkedCode && (\r\n        <SyntaxHighlighter\r\n          language=\"javascript\"\r\n          className={`show-code hp-mt-24 ${codeClass && \"show-code-active\"}`}\r\n          style={monoBlue}\r\n        >\r\n          {triger}\r\n        </SyntaxHighlighter>\r\n      )}\r\n    </Card>\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\r\n\r\nimport { useSelector } from \"react-redux\";\r\n\r\nimport SyntaxHighlighter from \"react-syntax-highlighter\";\r\nimport { monoBlue } from \"react-syntax-highlighter/dist/esm/styles/hljs\";\r\nimport { placement } from \"./code.js\";\r\n\r\nimport { Card, Row, Col, Popover, Button } from \"antd\";\r\nimport { RiCodeSSlashLine } from \"react-icons/ri\";\r\n\r\nexport default function PopoverPlacements() {\r\n  const [checkedCode, setCheckedCode] = useState(false);\r\n  const [codeClass, setCodeClass] = useState(false);\r\n\r\n  function toggleChecked() {\r\n    setTimeout(() => setCodeClass(!codeClass), 100);\r\n    setCheckedCode(!checkedCode);\r\n  }\r\n\r\n  const text = <span>Popover Title</span>;\r\n  const content = (\r\n    <div>\r\n      <p>Content</p>\r\n    </div>\r\n  );\r\n\r\n  // Rtl\r\n  const direction = useSelector(state => state.customise.direction)\r\n\r\n  return (\r\n    <Card className=\"hp-border-color-black-40\">\r\n      <Row>\r\n        <Col className=\"hp-mb-16\" lg={12} span={20}>\r\n          <h4>Placement</h4>\r\n          <p className=\"hp-p1-body\">\r\n            There are 12 placement options available.\r\n          </p>\r\n        </Col>\r\n\r\n        <Col lg={12} span={4} className=\"hp-text-right\">\r\n          <Button\r\n            onClick={toggleChecked}\r\n            type=\"text\"\r\n            icon={<RiCodeSSlashLine className=\"hp-text-color-black-80\" />}\r\n          />\r\n        </Col>\r\n\r\n        <Col span={24}>\r\n          <Col>\r\n            <div className=\"hp-placement\">\r\n              <div style={direction == \"rtl\" ? { marginRight: 90, whiteSpace: \"nowrap\" } : { marginLeft: 90, whiteSpace: \"nowrap\" }}>\r\n                <Popover\r\n                  placement=\"topLeft\"\r\n                  title={text}\r\n                  content={content}\r\n                  trigger=\"click\"\r\n                >\r\n                  <Button type=\"primary\">TL</Button>\r\n                </Popover>\r\n\r\n                <Popover\r\n                  placement=\"top\"\r\n                  title={text}\r\n                  content={content}\r\n                  trigger=\"click\"\r\n                >\r\n                  <Button type=\"primary\" className=\"hp-mx-8\">\r\n                    Top\r\n                  </Button>\r\n                </Popover>\r\n\r\n                <Popover\r\n                  placement=\"topRight\"\r\n                  title={text}\r\n                  content={content}\r\n                  trigger=\"click\"\r\n                >\r\n                  <Button type=\"primary\">TR</Button>\r\n                </Popover>\r\n              </div>\r\n\r\n              <div style={direction == \"rtl\" ? { width: 90, float: \"right\" } : { width: 90, float: \"left\" }}>\r\n                <Popover\r\n                  placement=\"leftTop\"\r\n                  title={text}\r\n                  content={content}\r\n                  trigger=\"click\"\r\n                >\r\n                  <Button type=\"primary\">LT</Button>\r\n                </Popover>\r\n\r\n                <Popover\r\n                  placement=\"left\"\r\n                  title={text}\r\n                  content={content}\r\n                  trigger=\"click\"\r\n                >\r\n                  <Button type=\"primary\" className=\"hp-my-8\">\r\n                    Left\r\n                  </Button>\r\n                </Popover>\r\n\r\n                <Popover\r\n                  placement=\"leftBottom\"\r\n                  title={text}\r\n                  content={content}\r\n                  trigger=\"click\"\r\n                >\r\n                  <Button type=\"primary\">LB</Button>\r\n                </Popover>\r\n              </div>\r\n\r\n              <div style={direction == \"rtl\" ? { width: 90, marginRight: 358 } : { width: 90, marginLeft: 358 }}>\r\n                <Popover\r\n                  placement=\"rightTop\"\r\n                  title={text}\r\n                  content={content}\r\n                  trigger=\"click\"\r\n                >\r\n                  <Button type=\"primary\">RT</Button>\r\n                </Popover>\r\n\r\n                <Popover\r\n                  placement=\"right\"\r\n                  title={text}\r\n                  content={content}\r\n                  trigger=\"click\"\r\n                >\r\n                  <Button type=\"primary\" className=\"hp-my-8\">\r\n                    Right\r\n                  </Button>\r\n                </Popover>\r\n\r\n                <Popover\r\n                  placement=\"rightBottom\"\r\n                  title={text}\r\n                  content={content}\r\n                  trigger=\"click\"\r\n                >\r\n                  <Button type=\"primary\">RB</Button>\r\n                </Popover>\r\n              </div>\r\n\r\n              <div style={direction == \"rtl\" ? { marginRight: 90, clear: \"both\", whiteSpace: \"nowrap\" } : { marginLeft: 90, clear: \"both\", whiteSpace: \"nowrap\" }}>\r\n                <Popover\r\n                  placement=\"bottomLeft\"\r\n                  title={text}\r\n                  content={content}\r\n                  trigger=\"click\"\r\n                >\r\n                  <Button type=\"primary\">BL</Button>\r\n                </Popover>\r\n\r\n                <Popover\r\n                  placement=\"bottom\"\r\n                  title={text}\r\n                  content={content}\r\n                  trigger=\"click\"\r\n                >\r\n                  <Button type=\"primary\" className=\"hp-mx-8\">\r\n                    Bottom\r\n                  </Button>\r\n                </Popover>\r\n\r\n                <Popover\r\n                  placement=\"bottomRight\"\r\n                  title={text}\r\n                  content={content}\r\n                  trigger=\"click\"\r\n                >\r\n                  <Button type=\"primary\">BR</Button>\r\n                </Popover>\r\n              </div>\r\n            </div>\r\n          </Col>\r\n        </Col>\r\n      </Row>\r\n\r\n      {checkedCode && (\r\n        <SyntaxHighlighter\r\n          language=\"javascript\"\r\n          className={`show-code hp-mt-24 ${codeClass && \"show-code-active\"}`}\r\n          style={monoBlue}\r\n        >\r\n          {placement}\r\n        </SyntaxHighlighter>\r\n      )}\r\n    </Card>\r\n  );\r\n}\r\n","import React from \"react\";\r\n\r\nimport { Row, Col } from \"antd\";\r\n\r\nimport PageContent from \"../../../../layout/components/content/page-content\";\r\nimport BasicPopover from \"./basic\";\r\nimport PopoverTrigers from \"./trigers\";\r\nimport PopoverPlacements from \"./placement\";\r\n\r\nexport default function Popover() {\r\n  return (\r\n    <Row gutter={[32, 32]} className=\"hp-mb-32\">\r\n      <Col span={24}>\r\n        <PageContent\r\n          title=\"Popover\"\r\n          desc=\"The floating card popped by clicking or hovering.\"\r\n          breadcrumb={[\r\n            {\r\n              title: \"Components\",\r\n              link: \"/components/components-page\"\r\n            },\r\n            {\r\n              title: \"Data Display\",\r\n            },\r\n            {\r\n              title: \"Popover\",\r\n            }\r\n          ]}\r\n        />\r\n      </Col>\r\n\r\n      <Col span={24}>\r\n        <BasicPopover />\r\n      </Col>\r\n\r\n      <Col span={24}>\r\n        <PopoverPlacements />\r\n      </Col>\r\n\r\n      <Col span={24}>\r\n        <PopoverTrigers />\r\n      </Col>\r\n    </Row>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport { Breadcrumb, Col, Row } from \"antd\";\r\n\r\nexport default function PageContent(props) {\r\n  const { title, breadcrumb, desc } = props;\r\n\r\n  return (\r\n    <Col span={24} className=\"hp-bg-black-bg hp-py-sm-32 hp-py-64 hp-px-sm-24 hp-px-md-48 hp-px-80 hp-overflow-hidden\" style={{ borderRadius: 32 }}>\r\n      <svg\r\n        width={358}\r\n        height={336}\r\n        fill=\"none\"\r\n        xmlns=\"http://www.w3.org/2000/svg\"\r\n        className=\"hp-position-absolute-bottom-right hp-rtl-scale-x-n1\"\r\n      >\r\n        <path\r\n          d=\"M730.404 135.471 369.675-6.641l88.802 164.001-243.179-98.8 246.364 263.281-329.128-126.619 114.698 166.726-241.68-62.446\"\r\n          stroke=\"url(#a)\"\r\n          strokeWidth={40}\r\n          strokeLinejoin=\"bevel\"\r\n        />\r\n        <defs>\r\n          <linearGradient\r\n            id=\"a\"\r\n            x1={315.467}\r\n            y1={6.875}\r\n            x2={397.957}\r\n            y2={337.724}\r\n            gradientUnits=\"userSpaceOnUse\"\r\n          >\r\n            <stop stopColor=\"#fff\" />\r\n            <stop offset={1} stopColor=\"#fff\" stopOpacity={0} />\r\n          </linearGradient>\r\n        </defs>\r\n      </svg>\r\n\r\n      <Row>\r\n        <Col sm={12} span={24}>\r\n          <Row>\r\n            {\r\n              title && (\r\n                <Col span={24}>\r\n                  <h1 className=\"hp-mb-0 hp-text-color-black-0\">{title}</h1>\r\n                </Col>\r\n              )\r\n            }\r\n\r\n            {\r\n              breadcrumb && (\r\n                <Col span={24}>\r\n                  <Breadcrumb className=\"hp-d-flex hp-flex-wrap hp-mt-24\">\r\n                    <Breadcrumb.Item>\r\n                      <Link to=\"/\" className=\"hp-text-color-black-0 hp-hover-text-color-primary-2\">Home</Link>\r\n                    </Breadcrumb.Item>\r\n\r\n                    {\r\n                      breadcrumb.map((item, index) => (\r\n                        <Breadcrumb.Item key={index}>\r\n                          <Link to={item.link ? item.link : '#'} className={`hp-text-color-black-0${item.link ? ' hp-hover-text-color-primary-2' : ''}`}>{item.title}</Link>\r\n                        </Breadcrumb.Item>\r\n                      ))\r\n                    }\r\n                  </Breadcrumb>\r\n                </Col>\r\n              )\r\n            }\r\n\r\n            {\r\n              desc && (\r\n                <Col span={24}>\r\n                  <p className=\"h5 hp-mb-0 hp-mt-24 hp-text-color-black-0\">{desc}</p>\r\n                </Col>\r\n              )\r\n            }\r\n          </Row>\r\n        </Col>\r\n      </Row>\r\n    </Col>\r\n  );\r\n}\r\n"],"sourceRoot":""}