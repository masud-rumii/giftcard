{"version":3,"sources":["view/components/feedback/result/success.jsx","view/components/feedback/result/code.js","view/components/feedback/result/info.jsx","view/components/feedback/result/warning.jsx","view/components/feedback/result/error.jsx","view/components/feedback/result/index.jsx","layout/components/content/page-content/index.jsx"],"names":["SuccessResult","useState","checkedCode","setCheckedCode","codeClass","setCodeClass","className","span","lg","onClick","setTimeout","type","icon","status","title","extra","ghost","language","style","monoBlue","InfoResult","WarningResult","Paragraph","Typography","Text","ErrorResult","href","Result","gutter","desc","breadcrumb","link","PageContent","props","borderRadius","width","height","fill","xmlns","d","stroke","strokeWidth","strokeLinejoin","id","x1","y1","x2","y2","gradientUnits","stopColor","offset","stopOpacity","sm","Item","to","map","item","index"],"mappings":"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","file":"static/js/80.3acf9d9e.chunk.js","sourcesContent":["import React, { useState } from \"react\";\n\nimport SyntaxHighlighter from \"react-syntax-highlighter\";\nimport { monoBlue } from \"react-syntax-highlighter/dist/esm/styles/hljs\";\nimport { success } from \"./code.js\";\n\nimport { Card, Row, Col, Result, Button } from \"antd\";\nimport { RiCheckboxCircleFill, RiCodeSSlashLine } from \"react-icons/ri\";\n\nexport default function SuccessResult() {\n  const [checkedCode, setCheckedCode] = useState(false);\n  const [codeClass, setCodeClass] = useState(false);\n\n  function toggleChecked() {\n    setTimeout(() => setCodeClass(!codeClass), 100);\n    setCheckedCode(!checkedCode);\n  }\n\n  return (\n    <Card className=\"hp-border-color-black-40\">\n      <Row>\n        <Col className=\"hp-mb-16\" span={24}>\n          <Row>\n            <Col lg={12} span={20}>\n              <h4>Success</h4>\n              <p className=\"hp-p1-body\">Show successful results.</p>\n            </Col>\n\n            <Col lg={12} span={4} className=\"hp-text-right\">\n              <Button\n                onClick={toggleChecked}\n                type=\"text\"\n                icon={<RiCodeSSlashLine className=\"hp-text-color-black-80\" />}\n              />\n            </Col>\n          </Row>\n        </Col>\n\n        <Col span={24}>\n          <Result\n            className=\"hp-px-sm-8\"\n            status=\"success\"\n            title={<h3>Successfully Purchased Cloud Server ECS!</h3>}\n            icon={<RiCheckboxCircleFill className=\"remix-icon\" />}\n            extra={\n              <div className=\"hp-result-button hp-mt-32\">\n                <Button type=\"primary\">\n                  Go Console\n                </Button>\n\n                <Button className=\"hp-ml-8\" ghost>\n                  Buy Again\n                </Button>\n              </div>\n            }\n          />\n        </Col>\n      </Row>\n\n      {checkedCode && (\n        <SyntaxHighlighter\n          language=\"javascript\"\n          className={`show-code hp-mt-24 ${codeClass && \"show-code-active\"}`}\n          style={monoBlue}\n        >\n          {success}\n        </SyntaxHighlighter>\n      )}\n    </Card>\n  );\n}\n","export const success = `\nimport { Result, Button } from \"antd\";\nimport { RiCheckboxCircleFill } from \"react-icons/ri\";\n\nreturn (\n  <Result\n    status=\"success\"\n    title={<h3>Successfully Purchased Cloud Server ECS!</h3>}\n    icon={<RiCheckboxCircleFill className=\"remix-icon\" />}\n    extra={\n      <>\n        <Button type=\"primary\">\n          Go Console\n        </Button>\n\n        <Button className=\"hp-ml-8\" ghost>\n          Buy Again\n        </Button>\n      </>\n    }\n  />\n);\n`;\n\nexport const info = `\nimport { Result, Button } from \"antd\";\nimport { RiErrorWarningFill } from \"react-icons/ri\";\n\nreturn (\n  <Result\n    status=\"info\"\n    title={<h3>Your operation has been executed</h3>}\n    icon={<RiErrorWarningFill className=\"remix-icon\" />}\n    extra={\n      <Button type=\"primary\">\n        Go Console\n      </Button>\n    }\n  />\n);\n`;\n\nexport const warning = `\nimport { Result, Button } from \"antd\";\nimport { RiAlertFill } from \"react-icons/ri\";\n\nreturn (\n  <Result\n    status=\"warning\"\n    title={<h3>There are some problems with your operation.</h3>}\n    icon={<RiAlertFill className=\"remix-icon\" />}\n    extra={\n      <Button type=\"primary\">\n        Go Console\n      </Button>\n    }\n  />\n);\n`;\n\nexport const error = `\nimport { Result, Button, Typography } from \"antd\";\nimport { RiCloseCircleFill, RiCloseCircleLine } from \"react-icons/ri\";\n\nconst { Paragraph, Text } = Typography;\n\nreturn (\n  <div className=\"hp-result-col\">\n    <Result\n      status=\"error\"\n      title={<h3 className=\"hp-mb-32\">Submission Failed</h3>}\n      icon={<RiCloseCircleFill className=\"remix-icon\" />}\n      extra={null}\n    >\n      <div className=\"desc\">\n        <Paragraph>\n          <Text className=\"h5\">\n            The content you submitted has the following error:\n          </Text>\n        </Paragraph>\n\n        <Paragraph>\n          <RiCloseCircleLine className=\"remix-icon hp-text-color-danger-1 hp-mr-8\" />\n          Your account has been frozen. <a href=\"#\">Thaw immediately &gt;</a>\n        </Paragraph>\n\n        <Paragraph>\n          <RiCloseCircleLine className=\"remix-icon hp-text-color-danger-1 hp-mr-8\" />\n          Your account is not yet eligible to apply.\n          <a href=\"#\">Apply Unlock &gt;</a>\n        </Paragraph>\n      </div>\n    </Result>\n\n    <div className=\"hp-text-center hp-mt-24\">\n      <Button type=\"primary\">\n        Go Console\n      </Button>\n\n      <Button className=\"hp-ml-8\" ghost>\n        Buy Again\n      </Button>\n    </div>\n  </div>\n);\n`;","import React, { useState } from \"react\";\n\nimport SyntaxHighlighter from \"react-syntax-highlighter\";\nimport { monoBlue } from \"react-syntax-highlighter/dist/esm/styles/hljs\";\nimport { info } from \"./code.js\";\n\nimport { Card, Row, Col, Result, Button } from \"antd\";\nimport { RiErrorWarningFill, RiCodeSSlashLine } from \"react-icons/ri\";\n\nexport default function InfoResult() {\n  const [checkedCode, setCheckedCode] = useState(false);\n  const [codeClass, setCodeClass] = useState(false);\n\n  function toggleChecked() {\n    setTimeout(() => setCodeClass(!codeClass), 100);\n    setCheckedCode(!checkedCode);\n  }\n\n  return (\n    <Card className=\"hp-border-color-black-40\">\n      <Row>\n        <Col className=\"hp-mb-16\" span={24}>\n          <Row>\n            <Col lg={12} span={20}>\n              <h4>Info</h4>\n              <p className=\"hp-p1-body\">Show processing results.</p>\n            </Col>\n\n            <Col lg={12} span={4} className=\"hp-text-right\">\n              <Button\n                onClick={toggleChecked}\n                type=\"text\"\n                icon={<RiCodeSSlashLine className=\"hp-text-color-black-80\" />}\n              />\n            </Col>\n          </Row>\n        </Col>\n\n        <Col span={24}>\n          <Result\n            className=\"hp-px-sm-8\"\n            status=\"info\"\n            title={<h3>Your operation has been executed</h3>}\n            icon={<RiErrorWarningFill className=\"remix-icon\" />}\n            extra={\n              <div className=\"hp-mt-32\">\n                <Button type=\"primary\">\n                  Go Console\n                </Button>\n              </div>\n            }\n          />\n        </Col>\n      </Row>\n\n      {checkedCode && (\n        <SyntaxHighlighter\n          language=\"javascript\"\n          className={`show-code hp-mt-24 ${codeClass && \"show-code-active\"}`}\n          style={monoBlue}\n        >\n          {info}\n        </SyntaxHighlighter>\n      )}\n    </Card>\n  );\n}\n","import React, { useState } from \"react\";\n\nimport SyntaxHighlighter from \"react-syntax-highlighter\";\nimport { monoBlue } from \"react-syntax-highlighter/dist/esm/styles/hljs\";\nimport { warning } from \"./code.js\";\n\nimport { Card, Row, Col, Result, Button } from \"antd\";\nimport { RiAlertFill, RiCodeSSlashLine } from \"react-icons/ri\";\n\nexport default function WarningResult() {\n  const [checkedCode, setCheckedCode] = useState(false);\n  const [codeClass, setCodeClass] = useState(false);\n\n  function toggleChecked() {\n    setTimeout(() => setCodeClass(!codeClass), 100);\n    setCheckedCode(!checkedCode);\n  }\n\n  return (\n    <Card className=\"hp-border-color-black-40\">\n      <Row>\n        <Col className=\"hp-mb-16\" span={24}>\n          <Row>\n            <Col lg={12} span={20}>\n              <h4>Warning</h4>\n              <p className=\"hp-p1-body\">The result of the warning.</p>\n            </Col>\n\n            <Col lg={12} span={4} className=\"hp-text-right\">\n              <Button\n                onClick={toggleChecked}\n                type=\"text\"\n                icon={<RiCodeSSlashLine className=\"hp-text-color-black-80\" />}\n              />\n            </Col>\n          </Row>\n        </Col>\n\n        <Col span={24}>\n          <Result\n            className=\"hp-px-sm-8\"\n            status=\"warning\"\n            title={<h3>There are some problems with your operation.</h3>}\n            icon={<RiAlertFill className=\"remix-icon\" />}\n            extra={\n              <div className=\"hp-mt-32\">\n                <Button type=\"primary\">\n                  Go Console\n                </Button>\n              </div>\n            }\n          />\n        </Col>\n      </Row>\n\n      {checkedCode && (\n        <SyntaxHighlighter\n          language=\"javascript\"\n          className={`show-code hp-mt-24 ${codeClass && \"show-code-active\"}`}\n          style={monoBlue}\n        >\n          {warning}\n        </SyntaxHighlighter>\n      )}\n    </Card>\n  );\n}\n","import React, { useState } from \"react\";\n\nimport SyntaxHighlighter from \"react-syntax-highlighter\";\nimport { monoBlue } from \"react-syntax-highlighter/dist/esm/styles/hljs\";\nimport { error } from \"./code.js\";\n\nimport { Card, Row, Col, Result, Button, Typography } from \"antd\";\nimport {\n  RiCloseCircleFill,\n  RiCloseCircleLine,\n  RiCodeSSlashLine,\n} from \"react-icons/ri\";\n\nconst { Paragraph, Text } = Typography;\n\nexport default function ErrorResult() {\n  const [checkedCode, setCheckedCode] = useState(false);\n  const [codeClass, setCodeClass] = useState(false);\n\n  function toggleChecked() {\n    setTimeout(() => setCodeClass(!codeClass), 100);\n    setCheckedCode(!checkedCode);\n  }\n\n  return (\n    <Card className=\"hp-border-color-black-40\">\n      <Row>\n        <Col className=\"hp-mb-16\" span={24}>\n          <Row>\n            <Col lg={12} span={20}>\n              <h4>Error</h4>\n              <p className=\"hp-p1-body\">Complex error feedback.</p>\n            </Col>\n\n            <Col lg={12} span={4} className=\"hp-text-right\">\n              <Button\n                onClick={toggleChecked}\n                type=\"text\"\n                icon={<RiCodeSSlashLine className=\"hp-text-color-black-80\" />}\n              />\n            </Col>\n          </Row>\n        </Col>\n\n        <Col\n          span={24}\n          className=\"hp-result-col\"\n        >\n          <Result\n            className=\"hp-px-sm-8 hp-pb-32\"\n            status=\"error\"\n            title={<h3 className=\"hp-mb-32\">Submission Failed</h3>}\n            icon={<RiCloseCircleFill className=\"remix-icon\" />}\n            extra={null}\n          >\n            <div className=\"desc\">\n              <Paragraph>\n                <Text className=\"h5\">\n                  The content you submitted has the following error:\n                </Text>\n              </Paragraph>\n\n              <Paragraph>\n                <RiCloseCircleLine className=\"remix-icon hp-text-color-danger-1 hp-mr-8\" />\n                Your account has been frozen. <a href=\"#\">Thaw immediately &gt;</a>\n              </Paragraph>\n\n              <Paragraph>\n                <RiCloseCircleLine className=\"remix-icon hp-text-color-danger-1 hp-mr-8\" />\n                Your account is not yet eligible to apply.\n                <a href=\"#\">Apply Unlock &gt;</a>\n              </Paragraph>\n            </div>\n          </Result>\n\n          <div className=\"hp-result-button hp-text-center hp-mb-48\">\n            <Button type=\"primary\">\n              Go Console\n            </Button>\n\n            <Button className=\"hp-ml-8\" ghost>\n              Buy Again\n            </Button>\n          </div>\n        </Col>\n      </Row>\n\n      {checkedCode && (\n        <SyntaxHighlighter\n          language=\"javascript\"\n          className={`show-code hp-mt-24 ${codeClass && \"show-code-active\"}`}\n          style={monoBlue}\n        >\n          {error}\n        </SyntaxHighlighter>\n      )}\n    </Card>\n  );\n}\n","import React from \"react\";\n\nimport { Row, Col } from \"antd\";\n\nimport PageContent from \"../../../../layout/components/content/page-content\";\nimport SuccessResult from \"./success\";\nimport InfoResult from \"./info\";\nimport WarningResult from \"./warning\";\nimport ErrorResult from \"./error\";\n\nexport default function Result() {\n  return (\n    <Row gutter={[32, 32]} className=\"hp-mb-32\">\n      <Col span={24}>\n        <PageContent\n          title=\"Result\"\n          desc=\"A panel which slides in from the edge of the screen.\"\n          breadcrumb={[\n            {\n              title: \"Components\",\n              link: \"/components/components-page\"\n            },\n            {\n              title: \"Feedback\",\n            },\n            {\n              title: \"Result\",\n            }\n          ]}\n        />\n      </Col>\n\n      <Col span={24}>\n        <SuccessResult />\n      </Col>\n\n      <Col span={24}>\n        <InfoResult />\n      </Col>\n\n      <Col span={24}>\n        <WarningResult />\n      </Col>\n\n      <Col span={24}>\n        <ErrorResult />\n      </Col>\n    </Row>\n  );\n}","import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nimport { Breadcrumb, Col, Row } from \"antd\";\n\nexport default function PageContent(props) {\n  const { title, breadcrumb, desc } = props;\n\n  return (\n    <Col span={24} className=\"hp-bg-black-bg hp-py-sm-32 hp-py-64 hp-px-sm-24 hp-px-md-48 hp-px-80 hp-overflow-hidden\" style={{ borderRadius: 32 }}>\n      <svg\n        width={358}\n        height={336}\n        fill=\"none\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n        className=\"hp-position-absolute-bottom-right hp-rtl-scale-x-n1\"\n      >\n        <path\n          d=\"M730.404 135.471 369.675-6.641l88.802 164.001-243.179-98.8 246.364 263.281-329.128-126.619 114.698 166.726-241.68-62.446\"\n          stroke=\"url(#a)\"\n          strokeWidth={40}\n          strokeLinejoin=\"bevel\"\n        />\n        <defs>\n          <linearGradient\n            id=\"a\"\n            x1={315.467}\n            y1={6.875}\n            x2={397.957}\n            y2={337.724}\n            gradientUnits=\"userSpaceOnUse\"\n          >\n            <stop stopColor=\"#fff\" />\n            <stop offset={1} stopColor=\"#fff\" stopOpacity={0} />\n          </linearGradient>\n        </defs>\n      </svg>\n\n      <Row>\n        <Col sm={12} span={24}>\n          <Row>\n            {\n              title && (\n                <Col span={24}>\n                  <h1 className=\"hp-mb-0 hp-text-color-black-0\">{title}</h1>\n                </Col>\n              )\n            }\n\n            {\n              breadcrumb && (\n                <Col span={24}>\n                  <Breadcrumb className=\"hp-d-flex hp-flex-wrap hp-mt-24\">\n                    <Breadcrumb.Item>\n                      <Link to=\"/\" className=\"hp-text-color-black-0 hp-hover-text-color-primary-2\">Home</Link>\n                    </Breadcrumb.Item>\n\n                    {\n                      breadcrumb.map((item, index) => (\n                        <Breadcrumb.Item key={index}>\n                          <Link to={item.link ? item.link : '#'} className={`hp-text-color-black-0${item.link ? ' hp-hover-text-color-primary-2' : ''}`}>{item.title}</Link>\n                        </Breadcrumb.Item>\n                      ))\n                    }\n                  </Breadcrumb>\n                </Col>\n              )\n            }\n\n            {\n              desc && (\n                <Col span={24}>\n                  <p className=\"h5 hp-mb-0 hp-mt-24 hp-text-color-black-0\">{desc}</p>\n                </Col>\n              )\n            }\n          </Row>\n        </Col>\n      </Row>\n    </Col>\n  );\n}\n"],"sourceRoot":""}