{"version":3,"sources":["view/components/data-entry/checkbox/basic.jsx","view/components/data-entry/checkbox/code.js","view/components/data-entry/checkbox/disabled.jsx","view/components/data-entry/checkbox/checkboxGroup.jsx","view/components/data-entry/checkbox/checkboxGrid.jsx","view/components/data-entry/checkbox/checkboxControlled.jsx","view/components/data-entry/checkbox/checkboxCheckAll.jsx","view/components/data-entry/checkbox/index.jsx","layout/components/content/page-content/index.jsx"],"names":["BasicCheckbox","useState","checkedCode","setCheckedCode","codeClass","setCodeClass","className","lg","span","onClick","setTimeout","type","icon","onChange","e","console","log","target","checked","language","style","monoBlue","DisabledCheckbox","defaultChecked","disabled","CheckboxGroup","checkedValues","Group","options","defaultValue","label","value","CheckboxGrid","width","CheckboxControlled","setChecked","setDisabled","size","margin","CheckboxCheckAll","Checkbox","plainOptions","checkedList","setCheckedList","indeterminate","setIndeterminate","checkAll","setCheckAll","list","length","gutter","title","desc","breadcrumb","link","PageContent","props","borderRadius","height","fill","xmlns","d","stroke","strokeWidth","strokeLinejoin","id","x1","y1","x2","y2","gradientUnits","stopColor","offset","stopOpacity","sm","Item","to","map","item","index"],"mappings":"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","file":"static/js/70.d5d89979.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\n\r\nimport SyntaxHighlighter from \"react-syntax-highlighter\";\r\nimport { monoBlue } from \"react-syntax-highlighter/dist/esm/styles/hljs\";\r\nimport { basic } from \"./code.js\";\r\n\r\nimport { Card, Row, Col, Checkbox, Button } from \"antd\";\r\nimport { RiCodeSSlashLine } from \"react-icons/ri\";\r\n\r\nexport default function BasicCheckbox() {\r\n  const [checkedCode, setCheckedCode] = useState(false);\r\n  const [codeClass, setCodeClass] = useState(false);\r\n\r\n  function toggleChecked() {\r\n    setTimeout(() => setCodeClass(!codeClass), 100);\r\n    setCheckedCode(!checkedCode);\r\n  }\r\n\r\n  function onChange(e) {\r\n    console.log(`checked = ${e.target.checked}`);\r\n  }\r\n\r\n  return (\r\n    <Card className=\"hp-border-color-black-40\">\r\n      <Row>\r\n        <Col className=\"hp-mb-16\" lg={12} span={20}>\r\n          <h4>Basic</h4>\r\n          <p className=\"hp-p1-body\">Basic usage of checkbox.</p>\r\n        </Col>\r\n\r\n        <Col lg={12} span={4} className=\"hp-text-right\">\r\n          <Button\r\n            onClick={toggleChecked}\r\n            type=\"text\"\r\n            icon={<RiCodeSSlashLine className=\"hp-text-color-black-80\" />}\r\n          />\r\n        </Col>\r\n\r\n        <Col span={12}>\r\n          <Checkbox onChange={onChange}>Checkbox</Checkbox>\r\n        </Col>\r\n      </Row>\r\n\r\n      {checkedCode && (\r\n        <SyntaxHighlighter\r\n          language=\"javascript\"\r\n          className={`show-code hp-mt-24 ${codeClass && \"show-code-active\"}`}\r\n          style={monoBlue}\r\n        >\r\n          {basic}\r\n        </SyntaxHighlighter>\r\n      )}\r\n    </Card>\r\n  );\r\n}\r\n","export const basic = `\r\nimport { Checkbox } from \"antd\";\r\n\r\nfunction onChange(e) {\r\n  console.log(\"checked\", e.target.checked);\r\n}\r\n\r\nreturn (\r\n  <Checkbox onChange={onChange}>Checkbox</Checkbox>\r\n);\r\n`;\r\n\r\nexport const controlled = `\r\nimport React, { useState } from \"react\";\r\n\r\nimport { Button, Checkbox } from \"antd\";\r\n\r\nconst [checked, setChecked] = useState(true);\r\nconst [disabled, setDisabled] = useState(false);\r\n\r\nconst toggleChecked = () => {\r\n  setChecked(!checked);\r\n};\r\n\r\nconst toggleDisable = () => {\r\n  setDisabled(!disabled);\r\n};\r\n\r\nconst onChange = e => {\r\n  setChecked(e.target.checked);\r\n};\r\n\r\nconst label = checked ? \"Checked\" : \"Unchecked\" + \"-\" + disabled ? \"Disabled\" : \"Enabled\";\r\n\r\nreturn (\r\n  <>\r\n    <Checkbox\r\n      checked={checked}\r\n      disabled={disabled}\r\n      onChange={onChange}\r\n    >\r\n      {label}\r\n    </Checkbox>\r\n\r\n    <Button type=\"primary\" size=\"small\" onClick={toggleChecked}>\r\n      {checked ? \"Check\" : \"Uncheck\"}\r\n    </Button>\r\n\r\n    <Button\r\n      style={{ margin: \"0 10px\" }}\r\n      type=\"primary\"\r\n      size=\"small\"\r\n      onClick={toggleDisable}\r\n    >\r\n      {disabled ? 'Disable' : 'Enable'}\r\n    </Button>\r\n  </>\r\n);\r\n`;\r\n\r\nexport const grid = `\r\nimport { Row, Col, Checkbox } from \"antd\";\r\n\r\nfunction onChange(checkedValues) {\r\n  console.log(\"checked = \", checkedValues);\r\n}\r\n\r\nreturn (\r\n  <Checkbox.Group style={{ width: \"100%\" }} onChange={onChange}>\r\n    <Row>\r\n      <Col span={8}>\r\n        <Checkbox value=\"A\">A</Checkbox>\r\n      </Col>\r\n      <Col span={8}>\r\n        <Checkbox value=\"B\">B</Checkbox>\r\n      </Col>\r\n      <Col span={8}>\r\n        <Checkbox value=\"C\">C</Checkbox>\r\n      </Col>\r\n      <Col span={8}>\r\n        <Checkbox value=\"D\">D</Checkbox>\r\n      </Col>\r\n      <Col span={8}>\r\n        <Checkbox value=\"E\">E</Checkbox>\r\n      </Col>\r\n    </Row>\r\n  </Checkbox.Group>\r\n);\r\n`;\r\n\r\nexport const group = `\r\nimport { Checkbox } from \"antd\";\r\n\r\nfunction onChange(checkedValues) {\r\n  console.log(\"checked = \", checkedValues);\r\n}\r\n\r\nconst plainOptions = [\"Apple\", \"Pear\", \"Orange\"];\r\n\r\nconst options = [\r\n  { label: \"Apple\", value: \"Apple\" },\r\n  { label: \"Pear\", value: \"Pear\" },\r\n  { label: \"Orange\", value: \"Orange\" },\r\n];\r\n\r\nconst optionsWithDisabled = [\r\n  { label: \"Apple\", value: \"Apple\" },\r\n  { label: \"Pear\", value: \"Pear\" },\r\n  { label: \"Orange\", value: \"Orange\", disabled: false },\r\n];\r\n\r\nreturn (\r\n  <>\r\n    <Checkbox.Group\r\n      options={plainOptions}\r\n      defaultValue={[\"Apple\"]}\r\n      onChange={onChange}\r\n    />\r\n\r\n    <Checkbox.Group\r\n      options={options}\r\n      defaultValue={[\"Pear\"]}\r\n      onChange={onChange}\r\n    />\r\n\r\n    <Checkbox.Group\r\n      options={optionsWithDisabled}\r\n      disabled\r\n      defaultValue={[\"Apple\"]}\r\n      onChange={onChange}\r\n    />\r\n  </>\r\n);\r\n`;\r\n\r\nexport const disabled = `\r\nimport { Checkbox } from \"antd\";\r\n\r\nfunction onChange(e) {\r\n  console.log(\"checked = $ {e.target.checked}\");\r\n}\r\n\r\nreturn (\r\n  <>\r\n    <Checkbox defaultChecked={false} disabled />\r\n    <Checkbox defaultChecked disabled />\r\n  </>\r\n);\r\n`;\r\n\r\nexport const checkall = `\r\nimport React, { useState } from \"react\";\r\n\r\nimport { Checkbox, Divider } from \"antd\";\r\n\r\nconst CheckboxGroup = Checkbox.Group;\r\n\r\nconst plainOptions = [\"Apple\", \"Pear\", \"Orange\"];\r\nconst defaultCheckedList = [\"Apple\", \"Orange\"];\r\n\r\nconst [checkedList, setCheckedList] = useState(defaultCheckedList);\r\nconst [indeterminate, setIndeterminate] = useState(true);\r\nconst [checkAll, setCheckAll] = useState(false);\r\n\r\nconst onChange = (list) => {\r\n  setCheckedList(list);\r\n  setIndeterminate(!!list.length && list.length < plainOptions.length);\r\n  setCheckAll(list.length === plainOptions.length);\r\n};\r\n\r\nconst onCheckAllChange = (e) => {\r\n  setCheckedList(e.target.checked ? plainOptions : []);\r\n  setIndeterminate(false);\r\n  setCheckAll(e.target.checked);\r\n};\r\n\r\nreturn (\r\n  <>\r\n    <Checkbox\r\n      indeterminate={indeterminate}\r\n      onChange={onCheckAllChange}\r\n      checked={checkAll}\r\n    >\r\n      Check all\r\n    </Checkbox>\r\n\r\n    <Divider />\r\n\r\n    <CheckboxGroup\r\n      options={plainOptions}\r\n      value={checkedList}\r\n      onChange={onChange}\r\n    />\r\n  </>\r\n);\r\n`;","import React, { useState } from \"react\";\r\n\r\nimport SyntaxHighlighter from \"react-syntax-highlighter\";\r\nimport { monoBlue } from \"react-syntax-highlighter/dist/esm/styles/hljs\";\r\nimport { disabled } from \"./code.js\";\r\n\r\nimport { Card, Row, Col, Checkbox, Button } from \"antd\";\r\nimport { RiCodeSSlashLine } from \"react-icons/ri\";\r\n\r\nexport default function DisabledCheckbox() {\r\n  const [checkedCode, setCheckedCode] = useState(false);\r\n  const [codeClass, setCodeClass] = useState(false);\r\n\r\n  function toggleChecked() {\r\n    setTimeout(() => setCodeClass(!codeClass), 100);\r\n    setCheckedCode(!checkedCode);\r\n  }\r\n\r\n  return (\r\n    <Card className=\"hp-border-color-black-40\">\r\n      <Row>\r\n        <Col className=\"hp-mb-16\" lg={12} span={20}>\r\n          <h4>Disabled</h4>\r\n          <p className=\"hp-p1-body\">Disabled chekbox.</p>\r\n        </Col>\r\n\r\n        <Col lg={12} span={4} className=\"hp-text-right\">\r\n          <Button\r\n            onClick={toggleChecked}\r\n            type=\"text\"\r\n            icon={<RiCodeSSlashLine className=\"hp-text-color-black-80\" />}\r\n          />\r\n        </Col>\r\n\r\n        <Col span={12}>\r\n          <Checkbox defaultChecked={false} disabled />\r\n          <br />\r\n          <Checkbox defaultChecked disabled />\r\n        </Col>\r\n      </Row>\r\n\r\n      {checkedCode && (\r\n        <SyntaxHighlighter\r\n          language=\"javascript\"\r\n          className={`show-code hp-mt-24 ${codeClass && \"show-code-active\"}`}\r\n          style={monoBlue}\r\n        >\r\n          {disabled}\r\n        </SyntaxHighlighter>\r\n      )}\r\n    </Card>\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\r\n\r\nimport SyntaxHighlighter from \"react-syntax-highlighter\";\r\nimport { monoBlue } from \"react-syntax-highlighter/dist/esm/styles/hljs\";\r\nimport { group } from \"./code.js\";\r\n\r\nimport { Card, Row, Col, Checkbox, Button } from \"antd\";\r\nimport { RiCodeSSlashLine } from \"react-icons/ri\";\r\n\r\nexport default function CheckboxGroup() {\r\n  const [checkedCode, setCheckedCode] = useState(false);\r\n  const [codeClass, setCodeClass] = useState(false);\r\n\r\n  function toggleChecked() {\r\n    setTimeout(() => setCodeClass(!codeClass), 100);\r\n    setCheckedCode(!checkedCode);\r\n  }\r\n\r\n  function onChange(checkedValues) {\r\n    console.log(\"checked = \", checkedValues);\r\n  }\r\n\r\n  const plainOptions = [\"Apple\", \"Pear\", \"Orange\"];\r\n\r\n  const options = [\r\n    { label: \"Apple\", value: \"Apple\" },\r\n    { label: \"Pear\", value: \"Pear\" },\r\n    { label: \"Orange\", value: \"Orange\" },\r\n  ];\r\n\r\n  const optionsWithDisabled = [\r\n    { label: \"Apple\", value: \"Apple\" },\r\n    { label: \"Pear\", value: \"Pear\" },\r\n    { label: \"Orange\", value: \"Orange\", disabled: false },\r\n  ];\r\n\r\n  return (\r\n    <Card className=\"hp-border-color-black-40\">\r\n      <Row>\r\n        <Col className=\"hp-mb-16\" lg={12} span={20}>\r\n          <h4>Checkbox Group</h4>\r\n          <p className=\"hp-p1-body\">\r\n            Generate a group of checkboxes from an array.\r\n          </p>\r\n        </Col>\r\n\r\n        <Col lg={12} span={4} className=\"hp-text-right\">\r\n          <Button\r\n            onClick={toggleChecked}\r\n            type=\"text\"\r\n            icon={<RiCodeSSlashLine className=\"hp-text-color-black-80\" />}\r\n          />\r\n        </Col>\r\n\r\n        <Col span={12}>\r\n          <Checkbox.Group\r\n            options={plainOptions}\r\n            defaultValue={[\"Apple\"]}\r\n            onChange={onChange}\r\n          />\r\n          <br />\r\n          <br />\r\n          <Checkbox.Group\r\n            options={options}\r\n            defaultValue={[\"Pear\"]}\r\n            onChange={onChange}\r\n          />\r\n          <br />\r\n          <br />\r\n          <Checkbox.Group\r\n            options={optionsWithDisabled}\r\n            disabled\r\n            defaultValue={[\"Apple\"]}\r\n            onChange={onChange}\r\n          />\r\n        </Col>\r\n      </Row>\r\n\r\n      {checkedCode && (\r\n        <SyntaxHighlighter\r\n          language=\"javascript\"\r\n          className={`show-code hp-mt-24 ${codeClass && \"show-code-active\"}`}\r\n          style={monoBlue}\r\n        >\r\n          {group}\r\n        </SyntaxHighlighter>\r\n      )}\r\n    </Card>\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\r\n\r\nimport SyntaxHighlighter from \"react-syntax-highlighter\";\r\nimport { monoBlue } from \"react-syntax-highlighter/dist/esm/styles/hljs\";\r\nimport { grid } from \"./code.js\";\r\n\r\nimport { Card, Row, Col, Checkbox, Button } from \"antd\";\r\nimport { RiCodeSSlashLine } from \"react-icons/ri\";\r\n\r\nexport default function CheckboxGrid() {\r\n  const [checkedCode, setCheckedCode] = useState(false);\r\n  const [codeClass, setCodeClass] = useState(false);\r\n\r\n  function toggleChecked() {\r\n    setTimeout(() => setCodeClass(!codeClass), 100);\r\n    setCheckedCode(!checkedCode);\r\n  }\r\n\r\n  function onChange(checkedValues) {\r\n    console.log(\"checked = \", checkedValues);\r\n  }\r\n\r\n  return (\r\n    <Card className=\"hp-border-color-black-40\">\r\n      <Row>\r\n        <Col className=\"hp-mb-16\" lg={12} span={20}>\r\n          <h4>Use with Grid</h4>\r\n          <p className=\"hp-p1-body\">\r\n            We can use Checkbox and Grid in Checkbox.Group, to implement complex\r\n            layout.\r\n          </p>\r\n        </Col>\r\n\r\n        <Col lg={12} span={4} className=\"hp-text-right\">\r\n          <Button\r\n            onClick={toggleChecked}\r\n            type=\"text\"\r\n            icon={<RiCodeSSlashLine className=\"hp-text-color-black-80\" />}\r\n          />\r\n        </Col>\r\n\r\n        <Checkbox.Group style={{ width: \"100%\" }} onChange={onChange}>\r\n          <Row>\r\n            <Col span={8}>\r\n              <Checkbox value=\"A\">A</Checkbox>\r\n            </Col>\r\n            <Col span={8}>\r\n              <Checkbox value=\"B\">B</Checkbox>\r\n            </Col>\r\n            <Col span={8}>\r\n              <Checkbox value=\"C\">C</Checkbox>\r\n            </Col>\r\n            <Col span={8}>\r\n              <Checkbox value=\"D\">D</Checkbox>\r\n            </Col>\r\n            <Col span={8}>\r\n              <Checkbox value=\"E\">E</Checkbox>\r\n            </Col>\r\n          </Row>\r\n        </Checkbox.Group>\r\n      </Row>\r\n\r\n      {checkedCode && (\r\n        <SyntaxHighlighter\r\n          language=\"javascript\"\r\n          className={`show-code hp-mt-24 ${codeClass && \"show-code-active\"}`}\r\n          style={monoBlue}\r\n        >\r\n          {grid}\r\n        </SyntaxHighlighter>\r\n      )}\r\n    </Card>\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\r\n\r\nimport SyntaxHighlighter from \"react-syntax-highlighter\";\r\nimport { monoBlue } from \"react-syntax-highlighter/dist/esm/styles/hljs\";\r\nimport { controlled } from \"./code.js\";\r\n\r\nimport { Card, Row, Col, Button, Checkbox } from \"antd\";\r\nimport { RiCodeSSlashLine } from \"react-icons/ri\";\r\n\r\nexport default function CheckboxControlled() {\r\n  const [checkedCode, setCheckedCode] = useState(false);\r\n  const [codeClass, setCodeClass] = useState(false);\r\n\r\n  function toggleCheckedCode() {\r\n    setTimeout(() => setCodeClass(!codeClass), 100);\r\n    setCheckedCode(!checkedCode);\r\n  }\r\n\r\n  const [checked, setChecked] = useState(true);\r\n  const [disabled, setDisabled] = useState(false);\r\n\r\n  const toggleChecked = () => {\r\n    setChecked(!checked);\r\n  };\r\n\r\n  const toggleDisable = () => {\r\n    setDisabled(!disabled);\r\n  };\r\n\r\n  const onChange = (e) => {\r\n    setChecked(e.target.checked);\r\n  };\r\n\r\n  const label = `${checked ? \"Checked\" : \"Unchecked\"}-${disabled ? \"Disabled\" : \"Enabled\"}`;\r\n\r\n  return (\r\n    <Card className=\"hp-border-color-black-40\">\r\n      <Row>\r\n        <Col className=\"hp-mb-16\" lg={12} span={20}>\r\n          <h4>Controlled Checkbox</h4>\r\n          <p className=\"hp-p1-body\">Communicated with other components.</p>\r\n        </Col>\r\n\r\n        <Col lg={12} span={4} className=\"hp-text-right\">\r\n          <Button\r\n            onClick={toggleCheckedCode}\r\n            type=\"text\"\r\n            icon={<RiCodeSSlashLine className=\"hp-text-color-black-80\" />}\r\n          />\r\n        </Col>\r\n\r\n        <Col span={24} className=\"hp-mb-24\">\r\n          <Checkbox checked={checked} disabled={disabled} onChange={onChange}>\r\n            {label}\r\n          </Checkbox>\r\n        </Col>\r\n\r\n        <Col span={24}>\r\n          <Button type=\"primary\" size=\"small\" onClick={toggleChecked}>\r\n            {checked ? \"Check\" : \"Uncheck\"}\r\n          </Button>\r\n\r\n          <Button\r\n            style={{ margin: \"0 10px\" }}\r\n            type=\"primary\"\r\n            size=\"small\"\r\n            onClick={toggleDisable}\r\n          >\r\n            {disabled ? \"Disable\" : \"Enable\"}\r\n          </Button>\r\n        </Col>\r\n      </Row>\r\n\r\n      {checkedCode && (\r\n        <SyntaxHighlighter\r\n          language=\"javascript\"\r\n          className={`show-code hp-mt-24 ${codeClass && \"show-code-active\"}`}\r\n          style={monoBlue}\r\n        >\r\n          {controlled}\r\n        </SyntaxHighlighter>\r\n      )}\r\n    </Card>\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\r\n\r\nimport SyntaxHighlighter from \"react-syntax-highlighter\";\r\nimport { monoBlue } from \"react-syntax-highlighter/dist/esm/styles/hljs\";\r\nimport { checkall } from \"./code.js\";\r\n\r\nimport { Card, Row, Col, Checkbox, Divider, Button } from \"antd\";\r\nimport { RiCodeSSlashLine } from \"react-icons/ri\";\r\n\r\nexport default function CheckboxCheckAll() {\r\n  const [checkedCode, setCheckedCode] = useState(false);\r\n  const [codeClass, setCodeClass] = useState(false);\r\n\r\n  function toggleChecked() {\r\n    setTimeout(() => setCodeClass(!codeClass), 100);\r\n    setCheckedCode(!checkedCode);\r\n  }\r\n\r\n  const CheckboxGroup = Checkbox.Group;\r\n\r\n  const plainOptions = [\"Apple\", \"Pear\", \"Orange\"];\r\n  const defaultCheckedList = [\"Apple\", \"Orange\"];\r\n\r\n  const [checkedList, setCheckedList] = useState(defaultCheckedList);\r\n  const [indeterminate, setIndeterminate] = useState(true);\r\n  const [checkAll, setCheckAll] = useState(false);\r\n\r\n  const onChange = (list) => {\r\n    setCheckedList(list);\r\n    setIndeterminate(!!list.length && list.length < plainOptions.length);\r\n    setCheckAll(list.length === plainOptions.length);\r\n  };\r\n\r\n  const onCheckAllChange = (e) => {\r\n    setCheckedList(e.target.checked ? plainOptions : []);\r\n    setIndeterminate(false);\r\n    setCheckAll(e.target.checked);\r\n  };\r\n\r\n  return (\r\n    <Card className=\"hp-border-color-black-40\">\r\n      <Row>\r\n        <Col className=\"hp-mb-16\" lg={12} span={20}>\r\n          <h4>Check all</h4>\r\n          <p className=\"hp-p1-body\">\r\n            The indeterminate property can help you to achieve a 'check all'\r\n            effect.\r\n          </p>\r\n        </Col>\r\n\r\n        <Col lg={12} span={4} className=\"hp-text-right\">\r\n          <Button\r\n            onClick={toggleChecked}\r\n            type=\"text\"\r\n            icon={<RiCodeSSlashLine className=\"hp-text-color-black-80\" />}\r\n          />\r\n        </Col>\r\n\r\n        <Col span={24} className=\"hp-mb-24\">\r\n          <Checkbox\r\n            indeterminate={indeterminate}\r\n            onChange={onCheckAllChange}\r\n            checked={checkAll}\r\n          >\r\n            Check all\r\n          </Checkbox>\r\n\r\n          <Divider />\r\n          <CheckboxGroup\r\n            options={plainOptions}\r\n            value={checkedList}\r\n            onChange={onChange}\r\n          />\r\n        </Col>\r\n      </Row>\r\n\r\n      {checkedCode && (\r\n        <SyntaxHighlighter\r\n          language=\"javascript\"\r\n          className={`show-code hp-mt-24 ${codeClass && \"show-code-active\"}`}\r\n          style={monoBlue}\r\n        >\r\n          {checkall}\r\n        </SyntaxHighlighter>\r\n      )}\r\n    </Card>\r\n  );\r\n}\r\n","import React from \"react\";\r\n\r\nimport { Row, Col } from \"antd\";\r\n\r\nimport PageContent from \"../../../../layout/components/content/page-content\";\r\nimport BasicCheckbox from \"./basic\";\r\nimport DisabledCheckbox from \"./disabled\";\r\nimport CheckboxGroup from \"./checkboxGroup\";\r\nimport CheckboxGrid from \"./checkboxGrid\";\r\nimport CheckboxControlled from \"./checkboxControlled\";\r\nimport CheckboxCheckAll from \"./checkboxCheckAll\";\r\n\r\nexport default function Checkbox() {\r\n  return (\r\n    <Row gutter={[32, 32]} className=\"hp-mb-32\">\r\n      <Col span={24}>\r\n        <PageContent\r\n          title=\"Checkbox\"\r\n          desc=\"Checkbox component.\"\r\n          breadcrumb={[\r\n            {\r\n              title: \"Components\",\r\n              link: \"/components/components-page\"\r\n            },\r\n            {\r\n              title: \"Data Entry\",\r\n            },\r\n            {\r\n              title: \"Checkbox\",\r\n            }\r\n          ]}\r\n        />\r\n      </Col>\r\n\r\n      <Col span={24}>\r\n        <BasicCheckbox />\r\n      </Col>\r\n\r\n      <Col span={24}>\r\n        <CheckboxGroup />\r\n      </Col>\r\n\r\n      <Col span={24}>\r\n        <CheckboxControlled />\r\n      </Col>\r\n\r\n      <Col span={24}>\r\n        <DisabledCheckbox />\r\n      </Col>\r\n\r\n      <Col span={24}>\r\n        <CheckboxGrid />\r\n      </Col>\r\n\r\n      <Col span={24}>\r\n        <CheckboxCheckAll />\r\n      </Col>\r\n    </Row>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport { Breadcrumb, Col, Row } from \"antd\";\r\n\r\nexport default function PageContent(props) {\r\n  const { title, breadcrumb, desc } = props;\r\n\r\n  return (\r\n    <Col span={24} className=\"hp-bg-black-bg hp-py-sm-32 hp-py-64 hp-px-sm-24 hp-px-md-48 hp-px-80 hp-overflow-hidden\" style={{ borderRadius: 32 }}>\r\n      <svg\r\n        width={358}\r\n        height={336}\r\n        fill=\"none\"\r\n        xmlns=\"http://www.w3.org/2000/svg\"\r\n        className=\"hp-position-absolute-bottom-right hp-rtl-scale-x-n1\"\r\n      >\r\n        <path\r\n          d=\"M730.404 135.471 369.675-6.641l88.802 164.001-243.179-98.8 246.364 263.281-329.128-126.619 114.698 166.726-241.68-62.446\"\r\n          stroke=\"url(#a)\"\r\n          strokeWidth={40}\r\n          strokeLinejoin=\"bevel\"\r\n        />\r\n        <defs>\r\n          <linearGradient\r\n            id=\"a\"\r\n            x1={315.467}\r\n            y1={6.875}\r\n            x2={397.957}\r\n            y2={337.724}\r\n            gradientUnits=\"userSpaceOnUse\"\r\n          >\r\n            <stop stopColor=\"#fff\" />\r\n            <stop offset={1} stopColor=\"#fff\" stopOpacity={0} />\r\n          </linearGradient>\r\n        </defs>\r\n      </svg>\r\n\r\n      <Row>\r\n        <Col sm={12} span={24}>\r\n          <Row>\r\n            {\r\n              title && (\r\n                <Col span={24}>\r\n                  <h1 className=\"hp-mb-0 hp-text-color-black-0\">{title}</h1>\r\n                </Col>\r\n              )\r\n            }\r\n\r\n            {\r\n              breadcrumb && (\r\n                <Col span={24}>\r\n                  <Breadcrumb className=\"hp-d-flex hp-flex-wrap hp-mt-24\">\r\n                    <Breadcrumb.Item>\r\n                      <Link to=\"/\" className=\"hp-text-color-black-0 hp-hover-text-color-primary-2\">Home</Link>\r\n                    </Breadcrumb.Item>\r\n\r\n                    {\r\n                      breadcrumb.map((item, index) => (\r\n                        <Breadcrumb.Item key={index}>\r\n                          <Link to={item.link ? item.link : '#'} className={`hp-text-color-black-0${item.link ? ' hp-hover-text-color-primary-2' : ''}`}>{item.title}</Link>\r\n                        </Breadcrumb.Item>\r\n                      ))\r\n                    }\r\n                  </Breadcrumb>\r\n                </Col>\r\n              )\r\n            }\r\n\r\n            {\r\n              desc && (\r\n                <Col span={24}>\r\n                  <p className=\"h5 hp-mb-0 hp-mt-24 hp-text-color-black-0\">{desc}</p>\r\n                </Col>\r\n              )\r\n            }\r\n          </Row>\r\n        </Col>\r\n      </Row>\r\n    </Col>\r\n  );\r\n}\r\n"],"sourceRoot":""}