{"version":3,"sources":["view/components/data-entry/datepicker/basic.jsx","view/components/data-entry/datepicker/code.js","view/components/data-entry/datepicker/rangePicker.jsx","view/components/data-entry/datepicker/switchable.jsx","view/components/data-entry/datepicker/dateFormat.jsx","view/components/data-entry/datepicker/datePickerSizes.jsx","view/components/data-entry/datepicker/disabled.jsx","view/components/data-entry/datepicker/customizedDateRender.jsx","view/components/data-entry/datepicker/extraFooter.jsx","view/components/data-entry/datepicker/index.jsx","layout/components/content/page-content/index.jsx"],"names":["BasicDatepicker","onChange","value","console","log","useState","checkedCode","setCheckedCode","codeClass","setCodeClass","className","lg","span","onClick","setTimeout","type","icon","suffixIcon","picker","language","style","monoBlue","RangePicker","DatePicker","RangePickerItem","Option","Select","SwitchablePicker","PickerWithType","setType","size","DateFormat","dateFormat","monthFormat","dateFormatList","defaultValue","moment","format","DatePickerSizes","setSize","Group","e","target","Button","DatePickerDisabled","disabled","DatePickerCustomizedDateRender","dateRender","current","date","border","borderRadius","DatePickerExtraFooter","renderExtraFooter","showTime","Datepicker","gutter","title","desc","breadcrumb","link","PageContent","props","width","height","fill","xmlns","d","stroke","strokeWidth","strokeLinejoin","id","x1","y1","x2","y2","gradientUnits","stopColor","offset","stopOpacity","sm","Item","to","map","item","index"],"mappings":"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","file":"static/js/71.8827cc55.chunk.js","sourcesContent":["import React, { useState } from \"react\";\n\nimport SyntaxHighlighter from \"react-syntax-highlighter\";\nimport { monoBlue } from \"react-syntax-highlighter/dist/esm/styles/hljs\";\nimport { basic } from \"./code.js\";\n\nimport { Card, Row, Col, DatePicker, Button } from \"antd\";\nimport { RiCalendarLine, RiCodeSSlashLine } from \"react-icons/ri\";\n\nexport default function BasicDatepicker() {\n  function onChange(value) {\n    console.log(\"changed\", value);\n  }\n\n  const [checkedCode, setCheckedCode] = useState(false);\n  const [codeClass, setCodeClass] = useState(false);\n\n  function toggleChecked() {\n    setTimeout(() => setCodeClass(!codeClass), 100);\n    setCheckedCode(!checkedCode);\n  }\n\n  return (\n    <Card className=\"hp-border-color-black-40\">\n      <Row>\n        <Col className=\"hp-mb-16\" lg={12} span={20}>\n          <h4>Basic</h4>\n          <p className=\"hp-p1-body\">\n            Basic use case. Users can select or input a date in panel.\n          </p>\n        </Col>\n\n        <Col lg={12} span={4} className=\"hp-text-right\">\n          <Button\n            onClick={toggleChecked}\n            type=\"text\"\n            icon={<RiCodeSSlashLine className=\"hp-text-color-black-80\" />}\n          />\n        </Col>\n\n        <Col span={24}>\n          <DatePicker\n            className=\"hp-mr-16 hp-mb-xl-16\"\n            onChange={onChange}\n            suffixIcon={\n              <RiCalendarLine className=\"remix-icon\" />\n            }\n          />\n          <DatePicker\n            className=\"hp-mr-16 hp-mb-xl-16\"\n            onChange={onChange}\n            picker=\"week\"\n            suffixIcon={\n              <RiCalendarLine className=\"remix-icon\" />\n            }\n          />\n          <DatePicker\n            className=\"hp-mr-16 hp-mb-xl-16\"\n            onChange={onChange}\n            picker=\"month\"\n            suffixIcon={\n              <RiCalendarLine className=\"remix-icon\" />\n            }\n          />\n          <DatePicker\n            className=\"hp-mr-16 hp-mb-xl-16\"\n            onChange={onChange}\n            picker=\"quarter\"\n            suffixIcon={\n              <RiCalendarLine className=\"remix-icon\" />\n            }\n          />\n          <DatePicker\n            className=\"hp-mr-16 hp-mb-xl-16\"\n            onChange={onChange}\n            picker=\"year\"\n            suffixIcon={\n              <RiCalendarLine className=\"remix-icon\" />\n            }\n          />\n        </Col>\n      </Row>\n\n      {checkedCode && (\n        <SyntaxHighlighter\n          language=\"javascript\"\n          className={`show-code hp-mt-24 ${codeClass && \"show-code-active\"}`}\n          style={monoBlue}\n        >\n          {basic}\n        </SyntaxHighlighter>\n      )}\n    </Card>\n  );\n}\n","export const basic = `\nimport { DatePicker } from \"antd\";\nimport { RiCalendarLine } from \"react-icons/ri\";\n\nfunction onChange(value) {\n  console.log(\"changed\", value);\n}\n  \nreturn (\n  <>\n    <DatePicker\n      onChange={onChange}\n      suffixIcon= {<RiCalendarLine className=\"remix-icon hp-text-color-black-100\" />}\n    />\n\n    <DatePicker\n      onChange={onChange}\n      picker=\"week\"\n      suffixIcon= {<RiCalendarLine className=\"remix-icon hp-text-color-black-100\" />}\n    />\n\n    <DatePicker\n      onChange={onChange}\n      picker=\"month\"\n      suffixIcon= {<RiCalendarLine className=\"remix-icon hp-text-color-black-100\" />}\n    />\n\n    <DatePicker\n      onChange={onChange}\n      picker=\"quarter\"\n      suffixIcon= {<RiCalendarLine className=\"remix-icon hp-text-color-black-100\" />}\n    />\n\n    <DatePicker\n      onChange={onChange}\n      picker=\"year\"\n      suffixIcon= {<RiCalendarLine className=\"remix-icon hp-text-color-black-100\" />}\n    />\n  </>\n);\n`;\n\nexport const datarender = `\nimport { DatePicker, Radio, Space, Button } from \"antd\";\n\nconst { RangePicker } = DatePicker;\n\nreturn (\n  <>\n    <DatePicker\n      dateRender={(current) => {\n        const style = {};\n        if (current.date() === 1) {\n          style.border = \"1px solid #1890ff\";\n          style.borderRadius = \"50%\";\n        }\n        return (\n          <div className=\"ant-picker-cell-inner\" style={style}>\n            {current.date()}\n          </div>\n        );\n      }}\n    />\n\n    <RangePicker\n      dateRender={(current) => {\n        const style = {};\n        if (current.date() === 1) {\n          style.border = \"1px solid #1890ff\";\n          style.borderRadius = \"50%\";\n        }\n        return (\n          <div className=\"ant-picker-cell-inner\" style={style}>\n            {current.date()}\n          </div>\n        );\n      }}\n    />\n  </>\n);\n`;\n\nexport const dateformat = `\nimport { DatePicker, TimePicker, Select } from \"antd\";\nimport moment from \"moment\";\n\nconst { RangePicker } = DatePicker;\n\nconst dateFormat = \"YYYY/MM/DD\";\nconst monthFormat = \"YYYY/MM\";\n\nconst dateFormatList = [\"DD/MM/YYYY\", \"DD/MM/YY\"];\n\nconst customFormat = (value) => \"custom format: \" + value.format(dateFormat);\n\nreturn (\n  <>\n    <DatePicker\n      defaultValue={moment(\"2015/01/01\", dateFormat)}\n      format={dateFormat}\n    />\n\n    <DatePicker\n      defaultValue={moment(\"01/01/2015\", dateFormatList[0])}\n      format={dateFormatList}\n    />\n\n    <DatePicker\n      defaultValue={moment(\"2015/01\", monthFormat)}\n      format={monthFormat}\n      picker=\"month\"\n    />\n\n    <RangePicker\n      defaultValue={[\n        moment(\"2015/01/01\", dateFormat),\n        moment(\"2015/01/01\", dateFormat),\n      ]}\n      format={dateFormat}\n    />\n    \n    <DatePicker\n      defaultValue={moment(\"2015/01/01\", dateFormat)}\n      format={customFormat}\n    />\n  </>\n);\n`;\n\nexport const sizes = `\nimport React, { useState } from \"react\";\n\nimport { DatePicker, Radio } from \"antd\";\n\nconst { RangePicker } = DatePicker;\n\nconst [size, setSize] = useState(\"default\");\n\nconst handleSizeChange = (e) => {\n  setSize(e.target.value);\n};\n\nreturn (\n  <>\n    <Radio.Group value={size} onChange={handleSizeChange} className=\"hp-mb-16\">\n      <Radio.Button value=\"large\">Large</Radio.Button>\n      <Radio.Button value=\"default\">Default</Radio.Button>\n      <Radio.Button value=\"small\">Small</Radio.Button>\n    </Radio.Group>\n\n    <DatePicker className=\"hp-mb-16 hp-mr-16\" size={size} />\n\n    <DatePicker className=\"hp-mb-16 hp-mr-16\" size={size} picker=\"month\" />\n\n    <RangePicker className=\"hp-mb-16 hp-mr-16\" size={size} />\n\n    <DatePicker className=\"hp-mb-16 hp-mr-16\" size={size} picker=\"week\" />\n  </>\n);\n`;\n\nexport const disabled = `\nimport { DatePicker, Radio } from \"antd\";\nimport moment from \"moment\";\n\nconst { RangePicker } = DatePicker;\n\nconst dateFormat = \"YYYY-MM-DD\";\n\nreturn (\n  <>\n    <DatePicker\n      defaultValue={moment(\"2015-06-06\", dateFormat)}\n      disabled\n    />\n\n    <DatePicker\n      picker=\"month\"\n      defaultValue={moment(\"2015-06\", \"YYYY-MM\")}\n      disabled\n    />\n\n    <RangePicker\n      defaultValue={[\n        moment(\"2015-06-06\", dateFormat),\n        moment(\"2015-06-06\", dateFormat),\n      ]}\n      disabled\n    />\n\n    <RangePicker\n      defaultValue={[\n        moment(\"2019-09-03\", dateFormat),\n        moment(\"2019-11-22\", dateFormat),\n      ]}\n      disabled={[false, true]}\n    />\n  </>\n);\n`;\n\nexport const extrafooter = `\nimport { DatePicker, Radio } from \"antd\";\n\nconst { RangePicker } = DatePicker;\n\nreturn (\n  <>\n    <DatePicker\n      renderExtraFooter={() => \"extra footer\"}\n    />\n\n    <DatePicker\n      renderExtraFooter={() => \"extra footer\"}\n      showTime\n    />\n\n    <RangePicker\n      renderExtraFooter={() => \"extra footer\"}\n    />\n\n    <RangePicker\n      renderExtraFooter={() => \"extra footer\"}\n      showTime\n    />\n\n    <DatePicker\n      renderExtraFooter={() => \"extra footer\"}\n      picker=\"month\"\n    />\n  </>\n);\n`;\n\nexport const rangepicker = `\nimport { DatePicker } from \"antd\";\nimport { RiCalendarLine } from \"react-icons/ri\";\n\nconst { RangePicker } = DatePicker;\n\nfunction onChange(value) {\n  console.log(\"changed\", value);\n}\n\nreturn (\n  <>\n    <RangePicker\n      onChange={onChange}\n      suffixIcon= {<RiCalendarLine className=\"remix-icon hp-text-color-black-100\" />}\n    />\n\n    <RangePicker\n      onChange={onChange}\n      picker=\"week\"\n      suffixIcon={<RiCalendarLine className=\"remix-icon hp-text-color-black-100\" />}\n    />\n\n    <RangePicker\n      onChange={onChange}\n      picker=\"month\"\n      suffixIcon={<RiCalendarLine className=\"remix-icon hp-text-color-black-100\" />}\n    />\n\n    <RangePicker\n      onChange={onChange}\n      picker=\"quarter\"\n      suffixIcon={<RiCalendarLine className=\"remix-icon hp-text-color-black-100\" />}\n    />\n\n    <RangePicker\n      onChange={onChange}\n      picker=\"year\"\n      suffixIcon={<RiCalendarLine className=\"remix-icon hp-text-color-black-100\" />}\n    />\n  </>\n);\n`;\n\nexport const switchable = `\nimport React, {useState} from \"react\";\n\nimport { DatePicker, TimePicker, Space, Select } from \"antd\";\n\nconst { Option } = Select;\n\nfunction PickerWithType({ type, onChange }) {\n  if (type === \"time\") return <TimePicker onChange={onChange} />;\n  if (type === \"date\") return <DatePicker onChange={onChange} />;\n  return <DatePicker picker={type} onChange={onChange} />;\n}\n\nconst [type, setType] = useState(\"time\");\n\nreturn (\n  <Space size={16}>\n    <Select value={type} onChange={setType}>\n      <Option value=\"time\">Time</Option>\n      <Option value=\"date\">Date</Option>\n      <Option value=\"week\">Week</Option>\n      <Option value=\"month\">Month</Option>\n      <Option value=\"quarter\">Quarter</Option>\n      <Option value=\"year\">Year</Option>\n    </Select>\n    \n    <PickerWithType\n      type={type}\n      onChange={(value) => console.log(value)}\n    />\n    \n  </Space>\n);\n`;\n","import React, { useState } from \"react\";\n\nimport SyntaxHighlighter from \"react-syntax-highlighter\";\nimport { monoBlue } from \"react-syntax-highlighter/dist/esm/styles/hljs\";\nimport { rangepicker } from \"./code.js\";\n\nimport { Card, Row, Col, DatePicker, Button } from \"antd\";\nimport { RiCalendarLine, RiCodeSSlashLine } from \"react-icons/ri\";\n\nconst { RangePicker } = DatePicker;\n\nexport default function RangePickerItem() {\n  const [checkedCode, setCheckedCode] = useState(false);\n  const [codeClass, setCodeClass] = useState(false);\n\n  function toggleChecked() {\n    setTimeout(() => setCodeClass(!codeClass), 100);\n    setCheckedCode(!checkedCode);\n  }\n\n  function onChange(value) {\n    console.log(\"changed\", value);\n  }\n\n  return (\n    <Card className=\"hp-border-color-black-40\">\n      <Row>\n        <Col className=\"hp-mb-16\" lg={12} span={20}>\n          <h4>Range Picker</h4>\n          <p className=\"hp-p1-body\">Set range picker type by picker prop.</p>\n        </Col>\n\n        <Col lg={12} span={4} className=\"hp-text-right\">\n          <Button\n            onClick={toggleChecked}\n            type=\"text\"\n            icon={<RiCodeSSlashLine className=\"hp-text-color-black-80\" />}\n          />\n        </Col>\n\n        <Col span={24}>\n          <RangePicker\n            className=\"hp-mb-16 hp-mr-16\"\n            onChange={onChange}\n            suffixIcon={\n              <RiCalendarLine className=\"remix-icon\" />\n            }\n          />\n          <RangePicker\n            className=\"hp-mb-16 hp-mr-16\"\n            onChange={onChange}\n            picker=\"week\"\n            suffixIcon={\n              <RiCalendarLine className=\"remix-icon\" />\n            }\n          />\n          <RangePicker\n            className=\"hp-mb-16 hp-mr-16\"\n            onChange={onChange}\n            picker=\"month\"\n            suffixIcon={\n              <RiCalendarLine className=\"remix-icon\" />\n            }\n          />\n          <RangePicker\n            className=\"hp-mb-16 hp-mr-16\"\n            onChange={onChange}\n            picker=\"quarter\"\n            suffixIcon={\n              <RiCalendarLine className=\"remix-icon\" />\n            }\n          />\n          <RangePicker\n            className=\"hp-mb-16 hp-mr-16\"\n            onChange={onChange}\n            picker=\"year\"\n            suffixIcon={\n              <RiCalendarLine className=\"remix-icon\" />\n            }\n          />\n        </Col>\n      </Row>\n\n      {checkedCode && (\n        <SyntaxHighlighter\n          language=\"javascript\"\n          className={`show-code hp-mt-24 ${codeClass && \"show-code-active\"}`}\n          style={monoBlue}\n        >\n          {rangepicker}\n        </SyntaxHighlighter>\n      )}\n    </Card>\n  );\n}\n","import React, { useState } from \"react\";\n\nimport SyntaxHighlighter from \"react-syntax-highlighter\";\nimport { monoBlue } from \"react-syntax-highlighter/dist/esm/styles/hljs\";\nimport { switchable } from \"./code.js\";\n\nimport {\n  Card,\n  Row,\n  Col,\n  DatePicker,\n  TimePicker,\n  Space,\n  Select,\n  Button,\n} from \"antd\";\nimport { RiCodeSSlashLine } from \"react-icons/ri\";\n\nconst { Option } = Select;\n\nexport default function SwitchablePicker() {\n  const [checkedCode, setCheckedCode] = useState(false);\n  const [codeClass, setCodeClass] = useState(false);\n\n  function toggleChecked() {\n    setTimeout(() => setCodeClass(!codeClass), 100);\n    setCheckedCode(!checkedCode);\n  }\n\n  function PickerWithType({ type, onChange }) {\n    if (type === \"time\") return <TimePicker onChange={onChange} />;\n    if (type === \"date\") return <DatePicker onChange={onChange} />;\n    return <DatePicker picker={type} onChange={onChange} />;\n  }\n\n  const [type, setType] = useState(\"time\");\n\n  return (\n    <Card className=\"hp-border-color-black-40\">\n      <Row>\n        <Col className=\"hp-mb-16\" lg={12} span={20}>\n          <h4>Switchable Picker</h4>\n          <p className=\"hp-p1-body\">\n            Switch in different types of pickers by Select.\n          </p>\n        </Col>\n\n        <Col lg={12} span={4} className=\"hp-text-right\">\n          <Button\n            onClick={toggleChecked}\n            type=\"text\"\n            icon={<RiCodeSSlashLine className=\"hp-text-color-black-80\" />}\n          />\n        </Col>\n\n        <Col span={12}>\n          <Space size={16}>\n            <Select value={type} onChange={setType}>\n              <Option value=\"time\">Time</Option>\n              <Option value=\"date\">Date</Option>\n              <Option value=\"week\">Week</Option>\n              <Option value=\"month\">Month</Option>\n              <Option value=\"quarter\">Quarter</Option>\n              <Option value=\"year\">Year</Option>\n            </Select>\n            <PickerWithType\n              type={type}\n              onChange={(value) => console.log(value)}\n            />\n          </Space>\n        </Col>\n      </Row>\n\n      {checkedCode && (\n        <SyntaxHighlighter\n          language=\"javascript\"\n          className={`show-code hp-mt-24 ${codeClass && \"show-code-active\"}`}\n          style={monoBlue}\n        >\n          {switchable}\n        </SyntaxHighlighter>\n      )}\n    </Card>\n  );\n}","import React, { useState } from \"react\";\n\nimport SyntaxHighlighter from \"react-syntax-highlighter\";\nimport { monoBlue } from \"react-syntax-highlighter/dist/esm/styles/hljs\";\nimport { dateformat } from \"./code.js\";\n\nimport { Card, Row, Col, DatePicker, Button } from \"antd\";\nimport { RiCodeSSlashLine } from \"react-icons/ri\";\nimport moment from \"moment\";\n\nconst { RangePicker } = DatePicker;\n\nexport default function DateFormat() {\n  const [checkedCode, setCheckedCode] = useState(false);\n  const [codeClass, setCodeClass] = useState(false);\n\n  function toggleChecked() {\n    setTimeout(() => setCodeClass(!codeClass), 100);\n    setCheckedCode(!checkedCode);\n  }\n\n  const dateFormat = \"YYYY/MM/DD\";\n  const monthFormat = \"YYYY/MM\";\n  const dateFormatList = [\"DD/MM/YYYY\", \"DD/MM/YY\"];\n\n  const customFormat = (value) => `custom format: ${value.format(dateFormat)}`;\n\n  return (\n    <Card className=\"hp-border-color-black-40\">\n      <Row>\n        <Col className=\"hp-mb-16\" lg={12} span={20}>\n          <h4>Date Format</h4>\n          <p className=\"hp-p1-body\">We can set the date format by format.</p>\n        </Col>\n\n        <Col lg={12} span={4} className=\"hp-text-right\">\n          <Button\n            onClick={toggleChecked}\n            type=\"text\"\n            icon={<RiCodeSSlashLine className=\"hp-text-color-black-80\" />}\n          />\n        </Col>\n\n        <Col span={24}>\n          <DatePicker\n            className=\"hp-mb-16 hp-mr-16\"\n            defaultValue={moment(\"2015/01/01\", dateFormat)}\n            format={dateFormat}\n          />\n          <DatePicker\n            className=\"hp-mb-16 hp-mr-16\"\n            defaultValue={moment(\"01/01/2015\", dateFormatList[0])}\n            format={dateFormatList}\n          />\n          <DatePicker\n            className=\"hp-mb-16 hp-mr-16\"\n            defaultValue={moment(\"2015/01\", monthFormat)}\n            format={monthFormat}\n            picker=\"month\"\n          />\n          <RangePicker\n            className=\"hp-mb-16 hp-mr-16\"\n            defaultValue={[\n              moment(\"2015/01/01\", dateFormat),\n              moment(\"2015/01/01\", dateFormat),\n            ]}\n            format={dateFormat}\n          />\n          <DatePicker\n            className=\"hp-mb-16 hp-mr-16\"\n            defaultValue={moment(\"2015/01/01\", dateFormat)}\n            format={customFormat}\n          />\n        </Col>\n      </Row>\n      \n      {checkedCode && (\n        <SyntaxHighlighter\n          language=\"javascript\"\n          className={`show-code hp-mt-24 ${codeClass && \"show-code-active\"}`}\n          style={monoBlue}\n        >\n          {dateformat}\n        </SyntaxHighlighter>\n      )}\n    </Card>\n  );\n}\n","import React, { useState } from \"react\";\n\nimport SyntaxHighlighter from \"react-syntax-highlighter\";\nimport { monoBlue } from \"react-syntax-highlighter/dist/esm/styles/hljs\";\nimport { sizes } from \"./code.js\";\n\nimport { Card, Row, Col, DatePicker, Radio, Button } from \"antd\";\nimport { RiCodeSSlashLine } from \"react-icons/ri\";\n\nconst { RangePicker } = DatePicker;\n\nexport default function DatePickerSizes() {\n  const [checkedCode, setCheckedCode] = useState(false);\n  const [codeClass, setCodeClass] = useState(false);\n\n  function toggleChecked() {\n    setTimeout(() => setCodeClass(!codeClass), 100);\n    setCheckedCode(!checkedCode);\n  }\n\n  const [size, setSize] = useState(\"default\");\n\n  const handleSizeChange = (e) => {\n    setSize(e.target.value);\n  };\n\n  return (\n    <Card className=\"hp-border-color-black-40\">\n      <Row>\n        <Col className=\"hp-mb-16\" lg={12} span={20}>\n          <h4>Three Sizes</h4>\n          <p className=\"hp-p1-body\">\n            The input box comes in three sizes. default will be used if size is\n            omitted.\n          </p>\n        </Col>\n\n        <Col lg={12} span={4} className=\"hp-text-right\">\n          <Button\n            onClick={toggleChecked}\n            type=\"text\"\n            icon={<RiCodeSSlashLine className=\"hp-text-color-black-80\" />}\n          />\n        </Col>\n\n        <Col span={24}>\n          <Radio.Group\n            value={size}\n            onChange={handleSizeChange}\n            className=\"hp-mb-16\"\n          >\n            <Radio.Button value=\"large\">Large</Radio.Button>\n            <Radio.Button value=\"default\">Default</Radio.Button>\n            <Radio.Button value=\"small\">Small</Radio.Button>\n          </Radio.Group>\n\n          <br />\n\n          <DatePicker className=\"hp-mb-16 hp-mr-16\" size={size} />\n\n          <DatePicker\n            className=\"hp-mb-16 hp-mr-16\"\n            size={size}\n            picker=\"month\"\n          />\n\n          <RangePicker className=\"hp-mb-16 hp-mr-16\" size={size} />\n\n          <DatePicker className=\"hp-mb-16 hp-mr-16\" size={size} picker=\"week\" />\n        </Col>\n      </Row>\n\n      {checkedCode && (\n        <SyntaxHighlighter\n          language=\"javascript\"\n          className={`show-code hp-mt-24 ${codeClass && \"show-code-active\"}`}\n          style={monoBlue}\n        >\n          {sizes}\n        </SyntaxHighlighter>\n      )}\n    </Card>\n  );\n}\n","import React, { useState } from \"react\";\n\nimport SyntaxHighlighter from \"react-syntax-highlighter\";\nimport { monoBlue } from \"react-syntax-highlighter/dist/esm/styles/hljs\";\nimport { disabled } from \"./code.js\";\n\nimport { Card, Row, Col, DatePicker, Button } from \"antd\";\nimport { RiCodeSSlashLine } from \"react-icons/ri\";\nimport moment from \"moment\";\n\nconst { RangePicker } = DatePicker;\n\nexport default function DatePickerDisabled() {\n  const [checkedCode, setCheckedCode] = useState(false);\n  const [codeClass, setCodeClass] = useState(false);\n\n  function toggleChecked() {\n    setTimeout(() => setCodeClass(!codeClass), 100);\n    setCheckedCode(!checkedCode);\n  }\n\n  const dateFormat = \"YYYY-MM-DD\";\n\n  return (\n    <Card className=\"hp-border-color-black-40\">\n      <Row>\n        <Col className=\"hp-mb-16\" lg={12} span={20}>\n          <h4>Disabled</h4>\n          <p className=\"hp-p1-body\">\n            A disabled state of the DatePicker. You can also set as array to\n            disable one of input.\n          </p>\n        </Col>\n\n        <Col lg={12} span={4} className=\"hp-text-right\">\n          <Button\n            onClick={toggleChecked}\n            type=\"text\"\n            icon={<RiCodeSSlashLine className=\"hp-text-color-black-80\" />}\n          />\n        </Col>\n\n        <Col span={24}>\n          <DatePicker\n            className=\"hp-mb-16 hp-mr-16\"\n            defaultValue={moment(\"2015-06-06\", dateFormat)}\n            disabled\n          />\n          <DatePicker\n            className=\"hp-mb-16 hp-mr-16\"\n            picker=\"month\"\n            defaultValue={moment(\"2015-06\", \"YYYY-MM\")}\n            disabled\n          />\n          <RangePicker\n            className=\"hp-mb-16 hp-mr-16\"\n            defaultValue={[\n              moment(\"2015-06-06\", dateFormat),\n              moment(\"2015-06-06\", dateFormat),\n            ]}\n            disabled\n          />\n          <RangePicker\n            className=\"hp-mb-16 hp-mr-16\"\n            defaultValue={[\n              moment(\"2019-09-03\", dateFormat),\n              moment(\"2019-11-22\", dateFormat),\n            ]}\n            disabled={[false, true]}\n          />\n        </Col>\n      </Row>\n      \n      {checkedCode && (\n        <SyntaxHighlighter\n          language=\"javascript\"\n          className={`show-code hp-mt-24 ${codeClass && \"show-code-active\"}`}\n          style={monoBlue}\n        >\n          {disabled}\n        </SyntaxHighlighter>\n      )}\n    </Card>\n  );\n}\n","import React, { useState } from \"react\";\n\nimport SyntaxHighlighter from \"react-syntax-highlighter\";\nimport { monoBlue } from \"react-syntax-highlighter/dist/esm/styles/hljs\";\nimport { datarender } from \"./code.js\";\n\nimport { Card, Row, Col, DatePicker, Button } from \"antd\";\nimport { RiCodeSSlashLine } from \"react-icons/ri\";\n\nconst { RangePicker } = DatePicker;\n\nexport default function DatePickerCustomizedDateRender() {\n  const [checkedCode, setCheckedCode] = useState(false);\n  const [codeClass, setCodeClass] = useState(false);\n\n  function toggleChecked() {\n    setTimeout(() => setCodeClass(!codeClass), 100);\n    setCheckedCode(!checkedCode);\n  }\n\n  return (\n    <Card className=\"hp-border-color-black-40\">\n      <Row>\n        <Col className=\"hp-mb-16\" lg={12} span={20}>\n          <h4>Customized Date Rendering</h4>\n          <p className=\"hp-p1-body\">\n            We can customize the rendering of date cells in the calendar by\n            providing a dateRender function to DatePicker.\n          </p>\n        </Col>\n\n        <Col lg={12} span={4} className=\"hp-text-right\">\n          <Button\n            onClick={toggleChecked}\n            type=\"text\"\n            icon={<RiCodeSSlashLine className=\"hp-text-color-black-80\" />}\n          />\n        </Col>\n\n        <Col span={24}>\n          <DatePicker\n            className=\"hp-mb-16 hp-mr-16\"\n            dateRender={(current) => {\n              const style = {};\n              if (current.date() === 1) {\n                style.border = \"1px solid #1890ff\";\n                style.borderRadius = \"50%\";\n              }\n              return (\n                <div className=\"ant-picker-cell-inner\" style={style}>\n                  {current.date()}\n                </div>\n              );\n            }}\n          />\n\n          <RangePicker\n            className=\"hp-mb-16 hp-mr-16\"\n            dateRender={(current) => {\n              const style = {};\n              if (current.date() === 1) {\n                style.border = \"1px solid #1890ff\";\n                style.borderRadius = \"50%\";\n              }\n              return (\n                <div className=\"ant-picker-cell-inner\" style={style}>\n                  {current.date()}\n                </div>\n              );\n            }}\n          />\n        </Col>\n      </Row>\n\n      {checkedCode && (\n        <SyntaxHighlighter\n          language=\"javascript\"\n          className={`show-code hp-mt-24 ${codeClass && \"show-code-active\"}`}\n          style={monoBlue}\n        >\n          {datarender}\n        </SyntaxHighlighter>\n      )}\n    </Card>\n  );\n}\n","import React, { useState } from \"react\";\n\nimport SyntaxHighlighter from \"react-syntax-highlighter\";\nimport { monoBlue } from \"react-syntax-highlighter/dist/esm/styles/hljs\";\nimport { extrafooter } from \"./code.js\";\n\nimport { Card, Row, Col, DatePicker, Button } from \"antd\";\nimport { RiCodeSSlashLine } from \"react-icons/ri\";\n\nconst { RangePicker } = DatePicker;\n\nexport default function DatePickerExtraFooter() {\n  const [checkedCode, setCheckedCode] = useState(false);\n  const [codeClass, setCodeClass] = useState(false);\n\n  function toggleChecked() {\n    setTimeout(() => setCodeClass(!codeClass), 100);\n    setCheckedCode(!checkedCode);\n  }\n\n  return (\n    <Card className=\"hp-border-color-black-40\">\n      <Row>\n        <Col className=\"hp-mb-16\" lg={12} span={20}>\n          <h4>Extra Footer</h4>\n          <p className=\"hp-p1-body\">\n            Render extra footer in panel for customized requirements.\n          </p>\n        </Col>\n\n        <Col lg={12} span={4} className=\"hp-text-right\">\n          <Button\n            onClick={toggleChecked}\n            type=\"text\"\n            icon={<RiCodeSSlashLine className=\"hp-text-color-black-80\" />}\n          />\n        </Col>\n\n        <Col span={24}>\n          <DatePicker\n            renderExtraFooter={() => \"extra footer\"}\n            className=\"hp-mb-16 hp-mr-16\"\n          />\n          <DatePicker\n            className=\"hp-mb-16 hp-mr-16\"\n            renderExtraFooter={() => \"extra footer\"}\n            showTime\n          />\n          <RangePicker\n            className=\"hp-mb-16 hp-mr-16\"\n            renderExtraFooter={() => \"extra footer\"}\n          />\n          <RangePicker\n            className=\"hp-mb-16 hp-mr-16\"\n            renderExtraFooter={() => \"extra footer\"}\n            showTime\n          />\n          <DatePicker\n            className=\"hp-mb-16 hp-mr-16\"\n            renderExtraFooter={() => \"extra footer\"}\n            picker=\"month\"\n          />\n        </Col>\n      </Row>\n\n      {checkedCode && (\n        <SyntaxHighlighter\n          language=\"javascript\"\n          className={`show-code hp-mt-24 ${codeClass && \"show-code-active\"}`}\n          style={monoBlue}\n        >\n          {extrafooter}\n        </SyntaxHighlighter>\n      )}\n    </Card>\n  );\n}\n","import React from \"react\";\n\nimport { Row, Col } from \"antd\";\n\nimport PageContent from \"../../../../layout/components/content/page-content\";\nimport BasicDatepicker from \"./basic\";\nimport RangePickerItem from \"./rangePicker\";\nimport SwitchablePicker from \"./switchable\";\nimport DateFormat from \"./dateFormat\";\nimport DatePickerSizes from \"./datePickerSizes\";\nimport DatePickerDisabled from \"./disabled\";\nimport DatePickerCustomizedDateRender from \"./customizedDateRender\";\nimport DatePickerExtraFooter from \"./extraFooter\";\n\nexport default function Datepicker() {\n  return (\n    <Row gutter={[32, 32]} className=\"hp-mb-32\">\n      <Col span={24}>\n        <PageContent\n          title=\"Date Picker\"\n          desc=\"To select or input a date.\"\n          breadcrumb={[\n            {\n              title: \"Components\",\n              link: \"/components/components-page\"\n            },\n            {\n              title: \"Data Entry\",\n            },\n            {\n              title: \"Date Picker\",\n            }\n          ]}\n        />\n      </Col>\n\n      <Col span={24}>\n        <BasicDatepicker />\n      </Col>\n\n      <Col span={24}>\n        <SwitchablePicker />\n      </Col>\n\n      <Col span={24}>\n        <DatePickerSizes />\n      </Col>\n\n      <Col span={24}>\n        <DatePickerCustomizedDateRender />\n      </Col>\n\n      <Col span={24}>\n        <RangePickerItem />\n      </Col>\n\n      <Col span={24}>\n        <DateFormat />\n      </Col>\n\n      <Col span={24}>\n        <DatePickerDisabled />\n      </Col>\n\n      <Col span={24}>\n        <DatePickerExtraFooter />\n      </Col>\n    </Row>\n  );\n}","import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nimport { Breadcrumb, Col, Row } from \"antd\";\n\nexport default function PageContent(props) {\n  const { title, breadcrumb, desc } = props;\n\n  return (\n    <Col span={24} className=\"hp-bg-black-bg hp-py-sm-32 hp-py-64 hp-px-sm-24 hp-px-md-48 hp-px-80 hp-overflow-hidden\" style={{ borderRadius: 32 }}>\n      <svg\n        width={358}\n        height={336}\n        fill=\"none\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n        className=\"hp-position-absolute-bottom-right hp-rtl-scale-x-n1\"\n      >\n        <path\n          d=\"M730.404 135.471 369.675-6.641l88.802 164.001-243.179-98.8 246.364 263.281-329.128-126.619 114.698 166.726-241.68-62.446\"\n          stroke=\"url(#a)\"\n          strokeWidth={40}\n          strokeLinejoin=\"bevel\"\n        />\n        <defs>\n          <linearGradient\n            id=\"a\"\n            x1={315.467}\n            y1={6.875}\n            x2={397.957}\n            y2={337.724}\n            gradientUnits=\"userSpaceOnUse\"\n          >\n            <stop stopColor=\"#fff\" />\n            <stop offset={1} stopColor=\"#fff\" stopOpacity={0} />\n          </linearGradient>\n        </defs>\n      </svg>\n\n      <Row>\n        <Col sm={12} span={24}>\n          <Row>\n            {\n              title && (\n                <Col span={24}>\n                  <h1 className=\"hp-mb-0 hp-text-color-black-0\">{title}</h1>\n                </Col>\n              )\n            }\n\n            {\n              breadcrumb && (\n                <Col span={24}>\n                  <Breadcrumb className=\"hp-d-flex hp-flex-wrap hp-mt-24\">\n                    <Breadcrumb.Item>\n                      <Link to=\"/\" className=\"hp-text-color-black-0 hp-hover-text-color-primary-2\">Home</Link>\n                    </Breadcrumb.Item>\n\n                    {\n                      breadcrumb.map((item, index) => (\n                        <Breadcrumb.Item key={index}>\n                          <Link to={item.link ? item.link : '#'} className={`hp-text-color-black-0${item.link ? ' hp-hover-text-color-primary-2' : ''}`}>{item.title}</Link>\n                        </Breadcrumb.Item>\n                      ))\n                    }\n                  </Breadcrumb>\n                </Col>\n              )\n            }\n\n            {\n              desc && (\n                <Col span={24}>\n                  <p className=\"h5 hp-mb-0 hp-mt-24 hp-text-color-black-0\">{desc}</p>\n                </Col>\n              )\n            }\n          </Row>\n        </Col>\n      </Row>\n    </Col>\n  );\n}\n"],"sourceRoot":""}