{"version":3,"sources":["view/components/feedback/drawer/basic.jsx","view/components/feedback/drawer/code.js","view/components/feedback/drawer/custom.jsx","view/components/feedback/drawer/submit.jsx","view/components/feedback/drawer/multi.jsx","view/components/feedback/drawer/index.jsx","layout/components/content/page-content/index.jsx"],"names":["BasicDrawer","useState","visible","setVisible","checkedCode","setCheckedCode","codeClass","setCodeClass","className","span","lg","onClick","setTimeout","type","icon","title","placement","width","closable","onClose","language","style","monoBlue","CustomDrawer","setPlacement","Group","defaultValue","onChange","e","target","value","Option","Select","SubmitDrawer","size","bodyStyle","paddingBottom","closeIcon","footer","textAlign","marginRight","layout","hideRequiredMark","gutter","md","Item","name","label","rules","required","message","placeholder","addonBefore","addonAfter","RangePicker","getPopupContainer","trigger","parentElement","TextArea","rows","MultiDrawer","childrenDrawer","setChildrenDrawer","Drawer","desc","breadcrumb","link","PageContent","props","borderRadius","height","fill","xmlns","d","stroke","strokeWidth","strokeLinejoin","id","x1","y1","x2","y2","gradientUnits","stopColor","offset","stopOpacity","sm","to","map","item","index"],"mappings":"iRASe,SAASA,IACtB,MAA8BC,oBAAS,GAAvC,mBAAOC,EAAP,KAAgBC,EAAhB,KACA,EAAsCF,oBAAS,GAA/C,mBAAOG,EAAP,KAAoBC,EAApB,KACA,EAAkCJ,oBAAS,GAA3C,mBAAOK,EAAP,KAAkBC,EAAlB,KAeA,OACE,eAAC,IAAD,CAAMC,UAAU,2BAAhB,UACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAKA,UAAU,WAAWC,KAAM,GAAhC,SACE,eAAC,IAAD,WACE,eAAC,IAAD,CAAKC,GAAI,GAAID,KAAM,GAAnB,UACE,uCACA,mBAAGD,UAAU,aAAb,8BAGF,cAAC,IAAD,CAAKE,GAAI,GAAID,KAAM,EAAGD,UAAU,gBAAhC,SACE,cAAC,IAAD,CACEG,QAzBd,WACEC,YAAW,kBAAML,GAAcD,EAApB,GAAgC,KAC3CD,GAAgBD,EACjB,EAuBaS,KAAK,OACLC,KAAM,cAAC,IAAD,CAAkBN,UAAU,oCAM1C,eAAC,IAAD,CAAKC,KAAM,GAAX,UACE,cAAC,IAAD,CAAQI,KAAK,UAAUF,QA7BZ,WACjBR,GAAW,EACZ,EA2BO,kBAIA,eAAC,IAAD,CACEY,MAAO,oBAAIP,UAAU,UAAd,0BACPQ,UAAU,QACVC,MAAO,IACPC,UAAU,EACVC,QAlCM,WACdhB,GAAW,EACZ,EAiCSD,QAASA,EACTM,UAAU,mBAPZ,UASE,mBAAGA,UAAU,aAAb,8BACA,mBAAGA,UAAU,aAAb,8BACA,mBAAGA,UAAU,aAAb,uCAKLJ,GACC,cAAC,IAAD,CACEgB,SAAS,aACTZ,UAAS,6BAAwBF,GAAa,oBAC9Ce,MAAOC,IAHT,SCrEU,6vBD+EjB,C,sBEtEc,SAASC,IACtB,MAA8BtB,oBAAS,GAAvC,mBAAOC,EAAP,KAAgBC,EAAhB,KACA,EAAkCF,mBAAS,QAA3C,mBAAOe,EAAP,KAAkBQ,EAAlB,KACA,EAAsCvB,oBAAS,GAA/C,mBAAOG,EAAP,KAAoBC,EAApB,KACA,EAAkCJ,oBAAS,GAA3C,mBAAOK,EAAP,KAAkBC,EAAlB,KAmBA,OACE,eAAC,IAAD,CAAMC,UAAU,2BAAhB,UACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAKA,UAAU,WAAWC,KAAM,GAAhC,SACE,eAAC,IAAD,WACE,eAAC,IAAD,CAAKC,GAAI,GAAID,KAAM,GAAnB,UACE,kDACA,mBAAGD,UAAU,aAAb,mEAKF,cAAC,IAAD,CAAKE,GAAI,GAAID,KAAM,EAAGD,UAAU,gBAAhC,SACE,cAAC,IAAD,CACEG,QA/Bd,WACEC,YAAW,kBAAML,GAAcD,EAApB,GAAgC,KAC3CD,GAAgBD,EACjB,EA6BaS,KAAK,OACLC,KAAM,cAAC,IAAD,CAAkBN,UAAU,oCAM1C,eAAC,IAAD,CAAKC,KAAM,GAAX,UACE,eAAC,IAAD,WACE,eAAC,IAAMgB,MAAP,CAAaC,aAAcV,EAAWW,SA5B/B,SAACC,GAChBJ,EAAaI,EAAEC,OAAOC,MACvB,EA0BS,UACE,cAAC,IAAD,CAAOtB,UAAU,yBAAyBsB,MAAM,MAAhD,iBAIA,cAAC,IAAD,CAAOtB,UAAU,yBAAyBsB,MAAM,QAAhD,mBAIA,cAAC,IAAD,CAAOtB,UAAU,yBAAyBsB,MAAM,SAAhD,oBAIA,cAAC,IAAD,CAAOtB,UAAU,yBAAyBsB,MAAM,OAAhD,qBAKF,cAAC,IAAD,CAAQtB,UAAU,aAAaK,KAAK,UAAUF,QAtDrC,WACjBR,GAAW,EACZ,EAoDS,qBAKF,eAAC,IAAD,CACEY,MAAO,oBAAIP,UAAU,UAAd,0BACPQ,UAAWA,EACXE,UAAU,EACVC,QA3DM,WACdhB,GAAW,EACZ,EA0DSD,QAASA,EAETM,UAAU,mBAPZ,UASE,mBAAGA,UAAU,aAAb,8BACA,mBAAGA,UAAU,aAAb,8BACA,mBAAGA,UAAU,aAAb,gCALKQ,SAUVZ,GACC,cAAC,IAAD,CACEgB,SAAS,aACTZ,UAAS,6BAAwBF,GAAa,oBAC9Ce,MAAOC,IAHT,SD3DW,k7CCqElB,C,wCCvFOS,EAAWC,IAAXD,OAEO,SAASE,IACtB,MAA8BhC,oBAAS,GAAvC,mBAAOC,EAAP,KAAgBC,EAAhB,KACA,EAAsCF,oBAAS,GAA/C,mBAAOG,EAAP,KAAoBC,EAApB,KACA,EAAkCJ,oBAAS,GAA3C,mBAAOK,EAAP,KAAkBC,EAAlB,KAOA,IAIMY,EAAU,WACdhB,GAAW,EACZ,EAED,OACE,eAAC,IAAD,CAAMK,UAAU,2BAAhB,UACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAKA,UAAU,WAAWC,KAAM,GAAhC,SACE,eAAC,IAAD,WACE,eAAC,IAAD,CAAKC,GAAI,GAAID,KAAM,GAAnB,UACE,uDACA,mBAAGD,UAAU,aAAb,2DAKF,cAAC,IAAD,CAAKE,GAAI,GAAID,KAAM,EAAGD,UAAU,gBAAhC,SACE,cAAC,IAAD,CACEG,QA3Bd,WACEC,YAAW,kBAAML,GAAcD,EAApB,GAAgC,KAC3CD,GAAgBD,EACjB,EAyBaS,KAAK,OACLC,KAAM,cAAC,IAAD,CAAkBN,UAAU,oCAM1C,eAAC,IAAD,CAAKC,KAAM,GAAX,UACE,eAAC,IAAD,CAAQI,KAAK,UAAUF,QA/BZ,WACjBR,GAAW,EACZ,EA6BO,UACE,cAAC,IAAD,CAAWK,UAAU,aAAa0B,KAAM,KAD1C,iBAKA,cAAC,IAAD,CACE1B,UAAU,mBACVO,MAAO,oBAAIP,UAAU,UAAd,kCACPS,OAAO,EACPE,QAASA,EACTjB,QAASA,EACTiC,UAAW,CAAEC,cAAe,IAC5BC,UACE,cAAC,IAAD,CACE7B,UAAU,0DACV0B,KAAM,KAGVI,OACE,sBACEjB,MAAO,CACLkB,UAAW,SAFf,UAKE,cAAC,IAAD,CACE5B,QAASQ,EACTN,KAAK,OACLQ,MAAO,CAAEmB,YAAa,GAHxB,oBAQA,cAAC,IAAD,CAAQ7B,QAASQ,EAASN,KAAK,UAA/B,uBA3BN,SAiCE,eAAC,IAAD,CAAM4B,OAAO,WAAWC,kBAAgB,EAAxC,UACE,eAAC,IAAD,CAAKC,OAAQ,GAAb,UACE,cAAC,IAAD,CAAKC,GAAI,GAAInC,KAAM,GAAnB,SACE,cAAC,IAAKoC,KAAN,CACEC,KAAK,OACLC,MAAM,OACNC,MAAO,CACL,CAAEC,UAAU,EAAMC,QAAS,2BAJ/B,SAOE,cAAC,IAAD,CAAOC,YAAY,+BAIvB,cAAC,IAAD,CAAKP,GAAI,GAAInC,KAAM,GAAnB,SACE,cAAC,IAAKoC,KAAN,CACEC,KAAK,MACLC,MAAM,MACNC,MAAO,CAAC,CAAEC,UAAU,EAAMC,QAAS,qBAHrC,SAKE,cAAC,IAAD,CACEE,YAAY,UACZC,WAAW,OACXF,YAAY,4BAMpB,eAAC,IAAD,CAAKR,OAAQ,GAAb,UACE,cAAC,IAAD,CAAKC,GAAI,GAAInC,KAAM,GAAnB,SACE,cAAC,IAAKoC,KAAN,CACEC,KAAK,QACLC,MAAM,QACNC,MAAO,CACL,CAAEC,UAAU,EAAMC,QAAS,2BAJ/B,SAOE,eAAC,IAAD,CAAQC,YAAY,yBAApB,UACE,cAACpB,EAAD,CAAQD,MAAM,OAAd,yBACA,cAACC,EAAD,CAAQD,MAAM,MAAd,gCAKN,cAAC,IAAD,CAAKc,GAAI,GAAInC,KAAM,GAAnB,SACE,cAAC,IAAKoC,KAAN,CACEC,KAAK,OACLC,MAAM,OACNC,MAAO,CACL,CAAEC,UAAU,EAAMC,QAAS,2BAJ/B,SAOE,eAAC,IAAD,CAAQC,YAAY,yBAApB,UACE,cAACpB,EAAD,CAAQD,MAAM,UAAd,qBACA,cAACC,EAAD,CAAQD,MAAM,SAAd,8BAMR,eAAC,IAAD,CAAKa,OAAQ,GAAb,UACE,cAAC,IAAD,CAAKC,GAAI,GAAInC,KAAM,GAAnB,SACE,cAAC,IAAKoC,KAAN,CACEC,KAAK,WACLC,MAAM,WACNC,MAAO,CACL,CAAEC,UAAU,EAAMC,QAAS,+BAJ/B,SAOE,eAAC,IAAD,CAAQC,YAAY,6BAApB,UACE,cAACpB,EAAD,CAAQD,MAAM,OAAd,qBACA,cAACC,EAAD,CAAQD,MAAM,MAAd,4BAKN,cAAC,IAAD,CAAKc,GAAI,GAAInC,KAAM,GAAnB,SACE,cAAC,IAAKoC,KAAN,CACEC,KAAK,WACLC,MAAM,WACNC,MAAO,CACL,CAAEC,UAAU,EAAMC,QAAS,+BAJ/B,SAOE,cAAC,IAAWI,YAAZ,CACE9C,UAAU,WACV+C,kBAAmB,SAACC,GAAD,OAAaA,EAAQC,aAArB,WAM3B,cAAC,IAAD,CAAKd,OAAQ,GAAb,SACE,cAAC,IAAD,CAAKlC,KAAM,GAAX,SACE,cAAC,IAAKoC,KAAN,CACEC,KAAK,cACLC,MAAM,cACNC,MAAO,CACL,CACEC,UAAU,EACVC,QAAS,iCANf,SAUE,cAAC,IAAMQ,SAAP,CACEC,KAAM,EACNR,YAAY,kDAU3B/C,GACC,cAAC,IAAD,CACEgB,SAAS,aACTZ,UAAS,6BAAwBF,GAAa,oBAC9Ce,MAAOC,IAHT,SFvHW,qtJEiIlB,CC3Nc,SAASsC,IACtB,MAA8B3D,oBAAS,GAAvC,mBAAOC,EAAP,KAAgBC,EAAhB,KACA,EAA4CF,oBAAS,GAArD,mBAAO4D,EAAP,KAAuBC,EAAvB,KACA,EAAsC7D,oBAAS,GAA/C,mBAAOG,EAAP,KAAoBC,EAApB,KACA,EAAkCJ,oBAAS,GAA3C,mBAAOK,EAAP,KAAkBC,EAAlB,KAuBA,OACE,eAAC,IAAD,CAAMC,UAAU,2BAAhB,UACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAKA,UAAU,WAAWC,KAAM,GAAhC,SACE,eAAC,IAAD,WACE,eAAC,IAAD,CAAKC,GAAI,GAAID,KAAM,GAAnB,UACE,oDACA,mBAAGD,UAAU,aAAb,6FAMF,cAAC,IAAD,CAAKE,GAAI,GAAID,KAAM,EAAGD,UAAU,gBAAhC,SACE,cAAC,IAAD,CACEG,QApCd,WACEC,YAAW,kBAAML,GAAcD,EAApB,GAAgC,KAC3CD,GAAgBD,EACjB,EAkCaS,KAAK,OACLC,KAAM,cAAC,IAAD,CAAkBN,UAAU,oCAM1C,eAAC,IAAD,CAAKC,KAAM,GAAX,UACE,cAAC,IAAD,CAAQI,KAAK,UAAUF,QAxCZ,WACjBR,GAAW,EACZ,EAsCO,yBAIA,eAAC,IAAD,CACEY,MAAO,oBAAIP,UAAU,UAAd,gCACPS,MAAO,IACPC,UAAU,EACVC,QA5CM,WACdhB,GAAW,EACZ,EA2CSD,QAASA,EACTM,UAAU,mBANZ,UAQE,cAAC,IAAD,CAAQK,KAAK,UAAUF,QA5CN,WACzBmD,GAAkB,EACnB,EA0CS,8BAIA,cAAC,IAAD,CACE/C,MAAO,oBAAIP,UAAU,UAAd,8BACPS,MAAO,IACPC,UAAU,EACVC,QAhDkB,WAC5B2C,GAAkB,EACnB,EA+CW5D,QAAS2D,EALX,SAOE,mBAAGrD,UAAU,aAAb,iDAMPJ,GACC,cAAC,IAAD,CACEgB,SAAS,aACTZ,UAAS,6BAAwBF,GAAa,oBAC9Ce,MAAOC,IAHT,SHkMU,wqCGxLjB,CC1Fc,SAASyC,IACtB,OACE,eAAC,IAAD,CAAKpB,OAAQ,CAAC,GAAI,IAAKnC,UAAU,WAAjC,UACE,cAAC,IAAD,CAAKC,KAAM,GAAX,SACE,cAAC,IAAD,CACEM,MAAM,SACNiD,KAAK,uDACLC,WAAY,CACV,CACElD,MAAO,aACPmD,KAAM,+BAER,CACEnD,MAAO,YAET,CACEA,MAAO,eAMf,cAAC,IAAD,CAAKN,KAAM,GAAX,SACE,cAAC,EAAD,MAGF,cAAC,IAAD,CAAKA,KAAM,GAAX,SACE,cAACwB,EAAD,MAGF,cAAC,IAAD,CAAKxB,KAAM,GAAX,SACE,cAACc,EAAD,MAGF,cAAC,IAAD,CAAKd,KAAM,GAAX,SACE,cAACmD,EAAD,QAIP,C,mCCjDD,mFAKe,SAASO,EAAYC,GAClC,IAAQrD,EAA4BqD,EAA5BrD,MAAOkD,EAAqBG,EAArBH,WAAYD,EAASI,EAATJ,KAE3B,OACE,eAAC,IAAD,CAAKvD,KAAM,GAAID,UAAU,0FAA0Fa,MAAO,CAAEgD,aAAc,IAA1I,UACE,sBACEpD,MAAO,IACPqD,OAAQ,IACRC,KAAK,OACLC,MAAM,6BACNhE,UAAU,sDALZ,UAOE,sBACEiE,EAAE,2HACFC,OAAO,UACPC,YAAa,GACbC,eAAe,UAEjB,+BACE,iCACEC,GAAG,IACHC,GAAI,QACJC,GAAI,MACJC,GAAI,QACJC,GAAI,QACJC,cAAc,iBANhB,UAQE,sBAAMC,UAAU,SAChB,sBAAMC,OAAQ,EAAGD,UAAU,OAAOE,YAAa,YAKrD,cAAC,IAAD,UACE,cAAC,IAAD,CAAKC,GAAI,GAAI7E,KAAM,GAAnB,SACE,eAAC,IAAD,WAEIM,GACE,cAAC,IAAD,CAAKN,KAAM,GAAX,SACE,oBAAID,UAAU,gCAAd,SAA+CO,MAMnDkD,GACE,cAAC,IAAD,CAAKxD,KAAM,GAAX,SACE,eAAC,IAAD,CAAYD,UAAU,kCAAtB,UACE,cAAC,IAAWqC,KAAZ,UACE,cAAC,IAAD,CAAM0C,GAAG,IAAI/E,UAAU,sDAAvB,oBAIAyD,EAAWuB,KAAI,SAACC,EAAMC,GAAP,OACb,cAAC,IAAW7C,KAAZ,UACE,cAAC,IAAD,CAAM0C,GAAIE,EAAKvB,KAAOuB,EAAKvB,KAAO,IAAK1D,UAAS,+BAA0BiF,EAAKvB,KAAO,iCAAmC,IAAzH,SAAgIuB,EAAK1E,SADjH2E,EADT,SAYvB1B,GACE,cAAC,IAAD,CAAKvD,KAAM,GAAX,SACE,mBAAGD,UAAU,4CAAb,SAA0DwD,eAS3E,C","file":"static/js/76.30709f6b.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\n\r\nimport SyntaxHighlighter from \"react-syntax-highlighter\";\r\nimport { monoBlue } from \"react-syntax-highlighter/dist/esm/styles/hljs\";\r\nimport { basic } from \"./code.js\";\r\n\r\nimport { Card, Row, Col, Drawer, Button } from \"antd\";\r\nimport { RiCodeSSlashLine } from \"react-icons/ri\";\r\n\r\nexport default function BasicDrawer() {\r\n  const [visible, setVisible] = useState(false);\r\n  const [checkedCode, setCheckedCode] = useState(false);\r\n  const [codeClass, setCodeClass] = useState(false);\r\n\r\n  function toggleChecked() {\r\n    setTimeout(() => setCodeClass(!codeClass), 100);\r\n    setCheckedCode(!checkedCode);\r\n  }\r\n\r\n  const showDrawer = () => {\r\n    setVisible(true);\r\n  };\r\n\r\n  const onClose = () => {\r\n    setVisible(false);\r\n  };\r\n\r\n  return (\r\n    <Card className=\"hp-border-color-black-40\">\r\n      <Row>\r\n        <Col className=\"hp-mb-16\" span={24}>\r\n          <Row>\r\n            <Col lg={12} span={20}>\r\n              <h4>Basic</h4>\r\n              <p className=\"hp-p1-body\">Basic drawer.</p>\r\n            </Col>\r\n\r\n            <Col lg={12} span={4} className=\"hp-text-right\">\r\n              <Button\r\n                onClick={toggleChecked}\r\n                type=\"text\"\r\n                icon={<RiCodeSSlashLine className=\"hp-text-color-black-80\" />}\r\n              />\r\n            </Col>\r\n          </Row>\r\n        </Col>\r\n\r\n        <Col span={24}>\r\n          <Button type=\"primary\" onClick={showDrawer}>\r\n            Open\r\n          </Button>\r\n\r\n          <Drawer\r\n            title={<h5 className=\"hp-mb-0\">Basic Drawer</h5>}\r\n            placement=\"right\"\r\n            width={346}\r\n            closable={false}\r\n            onClose={onClose}\r\n            visible={visible}\r\n            className=\"hp-drawer-mobile\"\r\n          >\r\n            <p className=\"hp-p1-body\">Some contents...</p>\r\n            <p className=\"hp-p1-body\">Some contents...</p>\r\n            <p className=\"hp-p1-body\">Some contents...</p>\r\n          </Drawer>\r\n        </Col>\r\n      </Row>\r\n\r\n      {checkedCode && (\r\n        <SyntaxHighlighter\r\n          language=\"javascript\"\r\n          className={`show-code hp-mt-24 ${codeClass && \"show-code-active\"}`}\r\n          style={monoBlue}\r\n        >\r\n          {basic}\r\n        </SyntaxHighlighter>\r\n      )}\r\n    </Card>\r\n  );\r\n}\r\n","export const basic = `\r\nimport React, { useState } from \"react\";\r\nimport { Drawer, Button } from \"antd\";\r\n\r\nconst [visible, setVisible] = useState(false);\r\n\r\nconst showDrawer = () => {\r\n  setVisible(true);\r\n};\r\n\r\nconst onClose = () => {\r\n  setVisible(false);\r\n};\r\n\r\nreturn (\r\n  <>\r\n    <Button type=\"primary\" onClick={showDrawer}>\r\n      Open\r\n    </Button>\r\n\r\n    <Drawer\r\n      title={<h5 className=\"hp-mb-0\">Basic Drawer</h5>}\r\n      placement=\"right\"\r\n      width={346}\r\n      closable={false}\r\n      onClose={onClose}\r\n      visible={visible}\r\n      className=\"hp-drawer-mobile\"\r\n    >\r\n      <p className=\"hp-p1-body\">Some contents...</p>\r\n      <p className=\"hp-p1-body\">Some contents...</p>\r\n      <p className=\"hp-p1-body\">Some contents...</p>\r\n    </Drawer>\r\n  </>\r\n);\r\n`;\r\n\r\nexport const custom = `\r\nimport React, { useState } from \"react\";\r\nimport { Drawer, Button, Radio, Space } from \"antd\";\r\n\r\nconst [visible, setVisible] = useState(false);\r\nconst [placement, setPlacement] = useState(\"left\");\r\n\r\nconst showDrawer = () => {\r\n  setVisible(true);\r\n};\r\n\r\nconst onClose = () => {\r\n  setVisible(false);\r\n};\r\n\r\nconst onChange = (e) => {\r\n  setPlacement(e.target.value);\r\n};\r\n\r\nreturn (\r\n  <>\r\n    <Space>\r\n      <Radio.Group defaultValue={placement} onChange={onChange}>\r\n        <Radio className=\"hp-mr-sm-16 hp-mb-lg-8\" value=\"top\">\r\n          top\r\n        </Radio>\r\n\r\n        <Radio className=\"hp-mr-sm-16 hp-mb-lg-8\" value=\"right\">\r\n          right\r\n        </Radio>\r\n\r\n        <Radio className=\"hp-mr-sm-16 hp-mb-lg-8\" value=\"bottom\">\r\n          bottom\r\n        </Radio>\r\n\r\n        <Radio className=\"hp-mr-sm-16 hp-mb-lg-8\" value=\"left\">\r\n          left\r\n        </Radio>\r\n      </Radio.Group>\r\n\r\n      <Button className=\"hp-mb-lg-8\" type=\"primary\" onClick={showDrawer}>\r\n        Open\r\n      </Button>\r\n    </Space>\r\n\r\n    <Drawer\r\n      title={<h5 className=\"hp-mb-0\">Basic Drawer</h5>}\r\n      placement={placement}\r\n      closable={false}\r\n      onClose={onClose}\r\n      visible={visible}\r\n      key={placement}\r\n      className=\"hp-drawer-mobile\"\r\n    >\r\n      <p className=\"hp-p1-body\">Some contents...</p>\r\n      <p className=\"hp-p1-body\">Some contents...</p>\r\n      <p className=\"hp-p1-body\">Some contents...</p>\r\n    </Drawer>\r\n  </>\r\n);\r\n`;\r\n\r\nexport const submit = `\r\nimport React, { useState } from \"react\";\r\n\r\nimport {\r\n  Row,\r\n  Col,\r\n  Drawer,\r\n  Form,\r\n  Button,\r\n  Input,\r\n  Select,\r\n  DatePicker,\r\n} from \"antd\";\r\nimport { RiCloseFill, RiAddLine } from \"react-icons/ri\";\r\n\r\nconst { Option } = Select;\r\n\r\nconst [visible, setVisible] = useState(false);\r\n\r\nconst showDrawer = () => {\r\n  setVisible(true);\r\n};\r\n\r\nconst onClose = () => {\r\n  setVisible(false);\r\n};\r\n\r\nreturn (\r\n  <>\r\n    <Button type=\"primary\" onClick={showDrawer}>\r\n      <RiAddLine className=\"remix-icon\" size={16} />\r\n      New account\r\n    </Button>\r\n\r\n    <Drawer\r\n      className=\"hp-drawer-submit\"\r\n      title={<h5 className=\"hp-mb-0\">Create a new account</h5>}\r\n      width={false}\r\n      onClose={onClose}\r\n      visible={visible}\r\n      bodyStyle={{ paddingBottom: 80 }}\r\n      closeIcon={\r\n        <RiCloseFill\r\n          className=\"remix-icon hp-text-color-black-80 hp-text-color-dark-30\"\r\n          size={24}\r\n        />\r\n      }\r\n      footer={\r\n        <div\r\n          style={{\r\n            textAlign: \"right\",\r\n          }}\r\n        >\r\n          <Button\r\n            onClick={onClose}\r\n            type=\"text\"\r\n            style={{ marginRight: 8 }}\r\n          >\r\n            Cancel\r\n          </Button>\r\n\r\n          <Button onClick={onClose} type=\"primary\">\r\n            Submit\r\n          </Button>\r\n        </div>\r\n      }\r\n    >\r\n      <Form layout=\"vertical\" hideRequiredMark>\r\n        <Row gutter={16}>\r\n          <Col md={12} span={24}>\r\n            <Form.Item\r\n              name=\"name\"\r\n              label=\"Name\"\r\n              rules={[\r\n                { required: true, message: \"Please enter user name\" },\r\n              ]}\r\n            >\r\n              <Input placeholder=\"Please enter user name\" />\r\n            </Form.Item>\r\n          </Col>\r\n\r\n          <Col md={12} span={24}>\r\n            <Form.Item\r\n              name=\"url\"\r\n              label=\"Url\"\r\n              rules={[{ required: true, message: \"Please enter url\" }]}\r\n            >\r\n              <Input\r\n                addonBefore=\"http://\"\r\n                addonAfter=\".com\"\r\n                placeholder=\"Please enter url\"\r\n              />\r\n            </Form.Item>\r\n          </Col>\r\n        </Row>\r\n\r\n        <Row gutter={16}>\r\n          <Col md={12} span={24}>\r\n            <Form.Item\r\n              name=\"owner\"\r\n              label=\"Owner\"\r\n              rules={[\r\n                { required: true, message: \"Please select an owner\" },\r\n              ]}\r\n            >\r\n              <Select placeholder=\"Please select an owner\">\r\n                <Option value=\"xiao\">Xiaoxiao Fu</Option>\r\n                <Option value=\"mao\">Maomao Zhou</Option>\r\n              </Select>\r\n            </Form.Item>\r\n          </Col>\r\n\r\n          <Col md={12} span={24}>\r\n            <Form.Item\r\n              name=\"type\"\r\n              label=\"Type\"\r\n              rules={[\r\n                { required: true, message: \"Please choose the type\" },\r\n              ]}\r\n            >\r\n              <Select placeholder=\"Please choose the type\">\r\n                <Option value=\"private\">Private</Option>\r\n                <Option value=\"public\">Public</Option>\r\n              </Select>\r\n            </Form.Item>\r\n          </Col>\r\n        </Row>\r\n\r\n        <Row gutter={16}>\r\n          <Col md={12} span={24}>\r\n            <Form.Item\r\n              name=\"approver\"\r\n              label=\"Approver\"\r\n              rules={[\r\n                { required: true, message: \"Please choose the approver\" },\r\n              ]}\r\n            >\r\n              <Select placeholder=\"Please choose the approver\">\r\n                <Option value=\"jack\">Jack Ma</Option>\r\n                <Option value=\"tom\">Tom Liu</Option>\r\n              </Select>\r\n            </Form.Item>\r\n          </Col>\r\n\r\n          <Col md={12} span={24}>\r\n            <Form.Item\r\n              name=\"dateTime\"\r\n              label=\"DateTime\"\r\n              rules={[\r\n                { required: true, message: \"Please choose the dateTime\" },\r\n              ]}\r\n            >\r\n              <DatePicker.RangePicker\r\n                className=\"hp-w-100\"\r\n                getPopupContainer={(trigger) => trigger.parentElement}\r\n              />\r\n            </Form.Item>\r\n          </Col>\r\n        </Row>\r\n\r\n        <Row gutter={16}>\r\n          <Col span={24}>\r\n            <Form.Item\r\n              name=\"description\"\r\n              label=\"Description\"\r\n              rules={[\r\n                {\r\n                  required: true,\r\n                  message: \"please enter url description\",\r\n                },\r\n              ]}\r\n            >\r\n              <Input.TextArea\r\n                rows={4}\r\n                placeholder=\"please enter url description\"\r\n              />\r\n            </Form.Item>\r\n          </Col>\r\n        </Row>\r\n      </Form>\r\n    </Drawer>\r\n  </>\r\n);\r\n`;\r\n\r\nexport const multi = `\r\nimport React, { useState } from \"react\";\r\nimport { Drawer, Button } from \"antd\";\r\n\r\nconst [visible, setVisible] = useState(false);\r\nconst [childrenDrawer, setChildrenDrawer] = useState(false);\r\n\r\nconst showDrawer = () => {\r\n  setVisible(true);\r\n};\r\n\r\nconst onClose = () => {\r\n  setVisible(false);\r\n};\r\n\r\nconst showChildrenDrawer = () => {\r\n  setChildrenDrawer(true);\r\n};\r\n\r\nconst onChildrenDrawerClose = () => {\r\n  setChildrenDrawer(false);\r\n};\r\n\r\nreturn (\r\n  <>\r\n    <Button type=\"primary\" onClick={showDrawer}>\r\n      Open drawer\r\n    </Button>\r\n\r\n    <Drawer\r\n      title={<h5 className=\"hp-mb-0\">Multi-level drawer</h5>}\r\n      width={520}\r\n      closable={false}\r\n      onClose={onClose}\r\n      visible={visible}\r\n      className=\"hp-drawer-mobile\"\r\n    >\r\n      <Button type=\"primary\" onClick={showChildrenDrawer}>\r\n        Two-level drawer\r\n      </Button>\r\n\r\n      <Drawer\r\n        title={<h5 className=\"hp-mb-0\">Two-level Drawer</h5>}\r\n        width={320}\r\n        closable={false}\r\n        onClose={onChildrenDrawerClose}\r\n        visible={childrenDrawer}\r\n      >\r\n        <p className=\"hp-p1-body\">This is two-level drawer</p>\r\n      </Drawer>\r\n    </Drawer>\r\n  </>\r\n);\r\n`;\r\n","import React, { useState } from \"react\";\r\n\r\nimport SyntaxHighlighter from \"react-syntax-highlighter\";\r\nimport { monoBlue } from \"react-syntax-highlighter/dist/esm/styles/hljs\";\r\nimport { custom } from \"./code.js\";\r\n\r\nimport { Card, Row, Col, Drawer, Button, Radio, Space } from \"antd\";\r\nimport { RiCodeSSlashLine } from \"react-icons/ri\";\r\n\r\nexport default function CustomDrawer() {\r\n  const [visible, setVisible] = useState(false);\r\n  const [placement, setPlacement] = useState(\"left\");\r\n  const [checkedCode, setCheckedCode] = useState(false);\r\n  const [codeClass, setCodeClass] = useState(false);\r\n\r\n  function toggleChecked() {\r\n    setTimeout(() => setCodeClass(!codeClass), 100);\r\n    setCheckedCode(!checkedCode);\r\n  }\r\n\r\n  const showDrawer = () => {\r\n    setVisible(true);\r\n  };\r\n\r\n  const onClose = () => {\r\n    setVisible(false);\r\n  };\r\n\r\n  const onChange = (e) => {\r\n    setPlacement(e.target.value);\r\n  };\r\n\r\n  return (\r\n    <Card className=\"hp-border-color-black-40\">\r\n      <Row>\r\n        <Col className=\"hp-mb-16\" span={24}>\r\n          <Row>\r\n            <Col lg={12} span={20}>\r\n              <h4>Custom Placement</h4>\r\n              <p className=\"hp-p1-body\">\r\n                The Drawer can appear from any edge of the screen.\r\n              </p>\r\n            </Col>\r\n\r\n            <Col lg={12} span={4} className=\"hp-text-right\">\r\n              <Button\r\n                onClick={toggleChecked}\r\n                type=\"text\"\r\n                icon={<RiCodeSSlashLine className=\"hp-text-color-black-80\" />}\r\n              />\r\n            </Col>\r\n          </Row>\r\n        </Col>\r\n\r\n        <Col span={24}>\r\n          <Space>\r\n            <Radio.Group defaultValue={placement} onChange={onChange}>\r\n              <Radio className=\"hp-mr-sm-16 hp-mb-lg-8\" value=\"top\">\r\n                top\r\n              </Radio>\r\n\r\n              <Radio className=\"hp-mr-sm-16 hp-mb-lg-8\" value=\"right\">\r\n                right\r\n              </Radio>\r\n\r\n              <Radio className=\"hp-mr-sm-16 hp-mb-lg-8\" value=\"bottom\">\r\n                bottom\r\n              </Radio>\r\n\r\n              <Radio className=\"hp-mr-sm-16 hp-mb-lg-8\" value=\"left\">\r\n                left\r\n              </Radio>\r\n            </Radio.Group>\r\n\r\n            <Button className=\"hp-mb-lg-8\" type=\"primary\" onClick={showDrawer}>\r\n              Open\r\n            </Button>\r\n          </Space>\r\n\r\n          <Drawer\r\n            title={<h5 className=\"hp-mb-0\">Basic Drawer</h5>}\r\n            placement={placement}\r\n            closable={false}\r\n            onClose={onClose}\r\n            visible={visible}\r\n            key={placement}\r\n            className=\"hp-drawer-mobile\"\r\n          >\r\n            <p className=\"hp-p1-body\">Some contents...</p>\r\n            <p className=\"hp-p1-body\">Some contents...</p>\r\n            <p className=\"hp-p1-body\">Some contents...</p>\r\n          </Drawer>\r\n        </Col>\r\n      </Row>\r\n\r\n      {checkedCode && (\r\n        <SyntaxHighlighter\r\n          language=\"javascript\"\r\n          className={`show-code hp-mt-24 ${codeClass && \"show-code-active\"}`}\r\n          style={monoBlue}\r\n        >\r\n          {custom}\r\n        </SyntaxHighlighter>\r\n      )}\r\n    </Card>\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\r\n\r\nimport SyntaxHighlighter from \"react-syntax-highlighter\";\r\nimport { monoBlue } from \"react-syntax-highlighter/dist/esm/styles/hljs\";\r\nimport { submit } from \"./code.js\";\r\n\r\nimport {\r\n  Card,\r\n  Row,\r\n  Col,\r\n  Drawer,\r\n  Form,\r\n  Button,\r\n  Input,\r\n  Select,\r\n  DatePicker,\r\n} from \"antd\";\r\nimport { RiCloseFill, RiAddLine, RiCodeSSlashLine } from \"react-icons/ri\";\r\n\r\nconst { Option } = Select;\r\n\r\nexport default function SubmitDrawer() {\r\n  const [visible, setVisible] = useState(false);\r\n  const [checkedCode, setCheckedCode] = useState(false);\r\n  const [codeClass, setCodeClass] = useState(false);\r\n\r\n  function toggleChecked() {\r\n    setTimeout(() => setCodeClass(!codeClass), 100);\r\n    setCheckedCode(!checkedCode);\r\n  }\r\n\r\n  const showDrawer = () => {\r\n    setVisible(true);\r\n  };\r\n\r\n  const onClose = () => {\r\n    setVisible(false);\r\n  };\r\n\r\n  return (\r\n    <Card className=\"hp-border-color-black-40\">\r\n      <Row>\r\n        <Col className=\"hp-mb-16\" span={24}>\r\n          <Row>\r\n            <Col lg={12} span={20}>\r\n              <h4>Submit form in drawer</h4>\r\n              <p className=\"hp-p1-body\">\r\n                Use a form in Drawer with a submit button.\r\n              </p>\r\n            </Col>\r\n\r\n            <Col lg={12} span={4} className=\"hp-text-right\">\r\n              <Button\r\n                onClick={toggleChecked}\r\n                type=\"text\"\r\n                icon={<RiCodeSSlashLine className=\"hp-text-color-black-80\" />}\r\n              />\r\n            </Col>\r\n          </Row>\r\n        </Col>\r\n\r\n        <Col span={24}>\r\n          <Button type=\"primary\" onClick={showDrawer}>\r\n            <RiAddLine className=\"remix-icon\" size={16} />\r\n            New account\r\n          </Button>\r\n\r\n          <Drawer\r\n            className=\"hp-drawer-submit\"\r\n            title={<h5 className=\"hp-mb-0\">Create a new account</h5>}\r\n            width={false}\r\n            onClose={onClose}\r\n            visible={visible}\r\n            bodyStyle={{ paddingBottom: 80 }}\r\n            closeIcon={\r\n              <RiCloseFill\r\n                className=\"remix-icon hp-text-color-black-80 hp-text-color-dark-30\"\r\n                size={24}\r\n              />\r\n            }\r\n            footer={\r\n              <div\r\n                style={{\r\n                  textAlign: \"right\",\r\n                }}\r\n              >\r\n                <Button\r\n                  onClick={onClose}\r\n                  type=\"text\"\r\n                  style={{ marginRight: 8 }}\r\n                >\r\n                  Cancel\r\n                </Button>\r\n\r\n                <Button onClick={onClose} type=\"primary\">\r\n                  Submit\r\n                </Button>\r\n              </div>\r\n            }\r\n          >\r\n            <Form layout=\"vertical\" hideRequiredMark>\r\n              <Row gutter={16}>\r\n                <Col md={12} span={24}>\r\n                  <Form.Item\r\n                    name=\"name\"\r\n                    label=\"Name\"\r\n                    rules={[\r\n                      { required: true, message: \"Please enter user name\" },\r\n                    ]}\r\n                  >\r\n                    <Input placeholder=\"Please enter user name\" />\r\n                  </Form.Item>\r\n                </Col>\r\n\r\n                <Col md={12} span={24}>\r\n                  <Form.Item\r\n                    name=\"url\"\r\n                    label=\"Url\"\r\n                    rules={[{ required: true, message: \"Please enter url\" }]}\r\n                  >\r\n                    <Input\r\n                      addonBefore=\"http://\"\r\n                      addonAfter=\".com\"\r\n                      placeholder=\"Please enter url\"\r\n                    />\r\n                  </Form.Item>\r\n                </Col>\r\n              </Row>\r\n\r\n              <Row gutter={16}>\r\n                <Col md={12} span={24}>\r\n                  <Form.Item\r\n                    name=\"owner\"\r\n                    label=\"Owner\"\r\n                    rules={[\r\n                      { required: true, message: \"Please select an owner\" },\r\n                    ]}\r\n                  >\r\n                    <Select placeholder=\"Please select an owner\">\r\n                      <Option value=\"xiao\">Xiaoxiao Fu</Option>\r\n                      <Option value=\"mao\">Maomao Zhou</Option>\r\n                    </Select>\r\n                  </Form.Item>\r\n                </Col>\r\n\r\n                <Col md={12} span={24}>\r\n                  <Form.Item\r\n                    name=\"type\"\r\n                    label=\"Type\"\r\n                    rules={[\r\n                      { required: true, message: \"Please choose the type\" },\r\n                    ]}\r\n                  >\r\n                    <Select placeholder=\"Please choose the type\">\r\n                      <Option value=\"private\">Private</Option>\r\n                      <Option value=\"public\">Public</Option>\r\n                    </Select>\r\n                  </Form.Item>\r\n                </Col>\r\n              </Row>\r\n\r\n              <Row gutter={16}>\r\n                <Col md={12} span={24}>\r\n                  <Form.Item\r\n                    name=\"approver\"\r\n                    label=\"Approver\"\r\n                    rules={[\r\n                      { required: true, message: \"Please choose the approver\" },\r\n                    ]}\r\n                  >\r\n                    <Select placeholder=\"Please choose the approver\">\r\n                      <Option value=\"jack\">Jack Ma</Option>\r\n                      <Option value=\"tom\">Tom Liu</Option>\r\n                    </Select>\r\n                  </Form.Item>\r\n                </Col>\r\n\r\n                <Col md={12} span={24}>\r\n                  <Form.Item\r\n                    name=\"dateTime\"\r\n                    label=\"DateTime\"\r\n                    rules={[\r\n                      { required: true, message: \"Please choose the dateTime\" },\r\n                    ]}\r\n                  >\r\n                    <DatePicker.RangePicker\r\n                      className=\"hp-w-100\"\r\n                      getPopupContainer={(trigger) => trigger.parentElement}\r\n                    />\r\n                  </Form.Item>\r\n                </Col>\r\n              </Row>\r\n\r\n              <Row gutter={16}>\r\n                <Col span={24}>\r\n                  <Form.Item\r\n                    name=\"description\"\r\n                    label=\"Description\"\r\n                    rules={[\r\n                      {\r\n                        required: true,\r\n                        message: \"please enter url description\",\r\n                      },\r\n                    ]}\r\n                  >\r\n                    <Input.TextArea\r\n                      rows={4}\r\n                      placeholder=\"please enter url description\"\r\n                    />\r\n                  </Form.Item>\r\n                </Col>\r\n              </Row>\r\n            </Form>\r\n          </Drawer>\r\n        </Col>\r\n      </Row>\r\n\r\n      {checkedCode && (\r\n        <SyntaxHighlighter\r\n          language=\"javascript\"\r\n          className={`show-code hp-mt-24 ${codeClass && \"show-code-active\"}`}\r\n          style={monoBlue}\r\n        >\r\n          {submit}\r\n        </SyntaxHighlighter>\r\n      )}\r\n    </Card>\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\r\n\r\nimport SyntaxHighlighter from \"react-syntax-highlighter\";\r\nimport { monoBlue } from \"react-syntax-highlighter/dist/esm/styles/hljs\";\r\nimport { multi } from \"./code.js\";\r\n\r\nimport { Card, Row, Col, Drawer, Button } from \"antd\";\r\nimport { RiCodeSSlashLine } from \"react-icons/ri\";\r\n\r\nexport default function MultiDrawer() {\r\n  const [visible, setVisible] = useState(false);\r\n  const [childrenDrawer, setChildrenDrawer] = useState(false);\r\n  const [checkedCode, setCheckedCode] = useState(false);\r\n  const [codeClass, setCodeClass] = useState(false);\r\n\r\n  function toggleChecked() {\r\n    setTimeout(() => setCodeClass(!codeClass), 100);\r\n    setCheckedCode(!checkedCode);\r\n  }\r\n\r\n  const showDrawer = () => {\r\n    setVisible(true);\r\n  };\r\n\r\n  const onClose = () => {\r\n    setVisible(false);\r\n  };\r\n\r\n  const showChildrenDrawer = () => {\r\n    setChildrenDrawer(true);\r\n  };\r\n\r\n  const onChildrenDrawerClose = () => {\r\n    setChildrenDrawer(false);\r\n  };\r\n\r\n  return (\r\n    <Card className=\"hp-border-color-black-40\">\r\n      <Row>\r\n        <Col className=\"hp-mb-16\" span={24}>\r\n          <Row>\r\n            <Col lg={12} span={20}>\r\n              <h4>Multi-level drawer</h4>\r\n              <p className=\"hp-p1-body\">\r\n                Open a new drawer on top of an existing drawer to handle multi\r\n                branch tasks.\r\n              </p>\r\n            </Col>\r\n\r\n            <Col lg={12} span={4} className=\"hp-text-right\">\r\n              <Button\r\n                onClick={toggleChecked}\r\n                type=\"text\"\r\n                icon={<RiCodeSSlashLine className=\"hp-text-color-black-80\" />}\r\n              />\r\n            </Col>\r\n          </Row>\r\n        </Col>\r\n\r\n        <Col span={24}>\r\n          <Button type=\"primary\" onClick={showDrawer}>\r\n            Open drawer\r\n          </Button>\r\n\r\n          <Drawer\r\n            title={<h5 className=\"hp-mb-0\">Multi-level drawer</h5>}\r\n            width={520}\r\n            closable={false}\r\n            onClose={onClose}\r\n            visible={visible}\r\n            className=\"hp-drawer-mobile\"\r\n          >\r\n            <Button type=\"primary\" onClick={showChildrenDrawer}>\r\n              Two-level drawer\r\n            </Button>\r\n\r\n            <Drawer\r\n              title={<h5 className=\"hp-mb-0\">Two-level Drawer</h5>}\r\n              width={320}\r\n              closable={false}\r\n              onClose={onChildrenDrawerClose}\r\n              visible={childrenDrawer}\r\n            >\r\n              <p className=\"hp-p1-body\">This is two-level drawer</p>\r\n            </Drawer>\r\n          </Drawer>\r\n        </Col>\r\n      </Row>\r\n\r\n      {checkedCode && (\r\n        <SyntaxHighlighter\r\n          language=\"javascript\"\r\n          className={`show-code hp-mt-24 ${codeClass && \"show-code-active\"}`}\r\n          style={monoBlue}\r\n        >\r\n          {multi}\r\n        </SyntaxHighlighter>\r\n      )}\r\n    </Card>\r\n  );\r\n}\r\n","import React from \"react\";\r\n\r\nimport { Row, Col } from \"antd\";\r\n\r\nimport PageContent from \"../../../../layout/components/content/page-content\";\r\nimport NormalDrawer from \"./basic\";\r\nimport CustomDrawer from \"./custom\";\r\nimport SubmitDrawer from \"./submit\";\r\nimport MultiDrawer from \"./multi\";\r\n\r\nexport default function Drawer() {\r\n  return (\r\n    <Row gutter={[32, 32]} className=\"hp-mb-32\">\r\n      <Col span={24}>\r\n        <PageContent\r\n          title=\"Drawer\"\r\n          desc=\"A panel which slides in from the edge of the screen.\"\r\n          breadcrumb={[\r\n            {\r\n              title: \"Components\",\r\n              link: \"/components/components-page\"\r\n            },\r\n            {\r\n              title: \"Feedback\",\r\n            },\r\n            {\r\n              title: \"Drawer\",\r\n            }\r\n          ]}\r\n        />\r\n      </Col>\r\n\r\n      <Col span={24}>\r\n        <NormalDrawer />\r\n      </Col>\r\n\r\n      <Col span={24}>\r\n        <SubmitDrawer />\r\n      </Col>\r\n\r\n      <Col span={24}>\r\n        <CustomDrawer />\r\n      </Col>\r\n\r\n      <Col span={24}>\r\n        <MultiDrawer />\r\n      </Col>\r\n    </Row>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport { Breadcrumb, Col, Row } from \"antd\";\r\n\r\nexport default function PageContent(props) {\r\n  const { title, breadcrumb, desc } = props;\r\n\r\n  return (\r\n    <Col span={24} className=\"hp-bg-black-bg hp-py-sm-32 hp-py-64 hp-px-sm-24 hp-px-md-48 hp-px-80 hp-overflow-hidden\" style={{ borderRadius: 32 }}>\r\n      <svg\r\n        width={358}\r\n        height={336}\r\n        fill=\"none\"\r\n        xmlns=\"http://www.w3.org/2000/svg\"\r\n        className=\"hp-position-absolute-bottom-right hp-rtl-scale-x-n1\"\r\n      >\r\n        <path\r\n          d=\"M730.404 135.471 369.675-6.641l88.802 164.001-243.179-98.8 246.364 263.281-329.128-126.619 114.698 166.726-241.68-62.446\"\r\n          stroke=\"url(#a)\"\r\n          strokeWidth={40}\r\n          strokeLinejoin=\"bevel\"\r\n        />\r\n        <defs>\r\n          <linearGradient\r\n            id=\"a\"\r\n            x1={315.467}\r\n            y1={6.875}\r\n            x2={397.957}\r\n            y2={337.724}\r\n            gradientUnits=\"userSpaceOnUse\"\r\n          >\r\n            <stop stopColor=\"#fff\" />\r\n            <stop offset={1} stopColor=\"#fff\" stopOpacity={0} />\r\n          </linearGradient>\r\n        </defs>\r\n      </svg>\r\n\r\n      <Row>\r\n        <Col sm={12} span={24}>\r\n          <Row>\r\n            {\r\n              title && (\r\n                <Col span={24}>\r\n                  <h1 className=\"hp-mb-0 hp-text-color-black-0\">{title}</h1>\r\n                </Col>\r\n              )\r\n            }\r\n\r\n            {\r\n              breadcrumb && (\r\n                <Col span={24}>\r\n                  <Breadcrumb className=\"hp-d-flex hp-flex-wrap hp-mt-24\">\r\n                    <Breadcrumb.Item>\r\n                      <Link to=\"/\" className=\"hp-text-color-black-0 hp-hover-text-color-primary-2\">Home</Link>\r\n                    </Breadcrumb.Item>\r\n\r\n                    {\r\n                      breadcrumb.map((item, index) => (\r\n                        <Breadcrumb.Item key={index}>\r\n                          <Link to={item.link ? item.link : '#'} className={`hp-text-color-black-0${item.link ? ' hp-hover-text-color-primary-2' : ''}`}>{item.title}</Link>\r\n                        </Breadcrumb.Item>\r\n                      ))\r\n                    }\r\n                  </Breadcrumb>\r\n                </Col>\r\n              )\r\n            }\r\n\r\n            {\r\n              desc && (\r\n                <Col span={24}>\r\n                  <p className=\"h5 hp-mb-0 hp-mt-24 hp-text-color-black-0\">{desc}</p>\r\n                </Col>\r\n              )\r\n            }\r\n          </Row>\r\n        </Col>\r\n      </Row>\r\n    </Col>\r\n  );\r\n}\r\n"],"sourceRoot":""}