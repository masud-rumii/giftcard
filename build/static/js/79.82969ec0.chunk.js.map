{"version":3,"sources":["view/components/feedback/notification/basic.jsx","view/components/feedback/notification/code.js","view/components/feedback/notification/duration.jsx","view/components/feedback/notification/icon.jsx","view/components/feedback/notification/customClose.jsx","view/components/feedback/notification/index.jsx","layout/components/content/page-content/index.jsx"],"names":["BasicNotification","useState","checkedCode","setCheckedCode","codeClass","setCodeClass","className","span","lg","onClick","setTimeout","type","icon","notification","open","message","description","closeIcon","size","language","style","monoBlue","DurationNotification","args","duration","IconNotification","ghost","color","CustomCloseNotification","close","key","Date","now","btn","onClose","Notification","gutter","title","desc","breadcrumb","link","PageContent","props","borderRadius","width","height","fill","xmlns","d","stroke","strokeWidth","strokeLinejoin","id","x1","y1","x2","y2","gradientUnits","stopColor","offset","stopOpacity","sm","Item","to","map","item","index"],"mappings":"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","file":"static/js/79.82969ec0.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\n\r\nimport SyntaxHighlighter from \"react-syntax-highlighter\";\r\nimport { monoBlue } from \"react-syntax-highlighter/dist/esm/styles/hljs\";\r\nimport { basic } from \"./code.js\";\r\n\r\nimport { Card, Row, Col, Button, notification } from \"antd\";\r\nimport { RiCloseFill, RiCodeSSlashLine } from \"react-icons/ri\";\r\n\r\nexport default function BasicNotification() {\r\n  const [checkedCode, setCheckedCode] = useState(false);\r\n  const [codeClass, setCodeClass] = useState(false);\r\n\r\n  function toggleChecked() {\r\n    setTimeout(() => setCodeClass(!codeClass), 100);\r\n    setCheckedCode(!checkedCode);\r\n  }\r\n\r\n  const openNotification = () => {\r\n    notification.open({\r\n      message: \"Primary\",\r\n      description: \"Primary message.\",\r\n      closeIcon: (\r\n        <RiCloseFill className=\"remix-icon hp-text-color-black-80 hp-text-color-dark-30\" size={24} />\r\n      ),\r\n    });\r\n  };\r\n\r\n  return (\r\n    <Card className=\"hp-border-color-black-40\">\r\n      <Row>\r\n        <Col className=\"hp-mb-16\" span={24}>\r\n          <Row>\r\n            <Col lg={12} span={20}>\r\n              <h4>Basic</h4>\r\n              <p className=\"hp-p1-body\">\r\n                The simplest usage that close the notification box after 4.5s.\r\n              </p>\r\n            </Col>\r\n\r\n            <Col lg={12} span={4} className=\"hp-text-right\">\r\n              <Button\r\n                onClick={toggleChecked}\r\n                type=\"text\"\r\n                icon={<RiCodeSSlashLine className=\"hp-text-color-black-80\" />}\r\n              />\r\n            </Col>\r\n          </Row>\r\n        </Col>\r\n\r\n        <Col span={24}>\r\n          <Button type=\"primary\" onClick={openNotification}>\r\n            Open the notification box\r\n          </Button>\r\n        </Col>\r\n      </Row>\r\n\r\n      {checkedCode && (\r\n        <SyntaxHighlighter\r\n          language=\"javascript\"\r\n          className={`show-code hp-mt-24 ${codeClass && \"show-code-active\"}`}\r\n          style={monoBlue}\r\n        >\r\n          {basic}\r\n        </SyntaxHighlighter>\r\n      )}\r\n    </Card>\r\n  );\r\n}\r\n","export const basic = `\r\nimport { Button, notification } from \"antd\";\r\nimport { RiCloseFill } from \"react-icons/ri\";\r\n\r\nconst openNotification = () => {\r\n  notification.open({\r\n    message: \"Primary\",\r\n    description: \"Primary message.\",\r\n    closeIcon: (\r\n      <RiCloseFill className=\"remix-icon hp-text-color-black-80\" size={24} />\r\n    ),\r\n  });\r\n};\r\n\r\nreturn (\r\n  <Button type=\"primary\" onClick={openNotification}>\r\n    Open the notification box\r\n  </Button>\r\n);\r\n`;\r\n\r\nexport const icon = `\r\nimport { Button, notification } from \"antd\";\r\nimport {\r\n  RiCloseFill,\r\n  RiCheckboxCircleFill,\r\n  RiErrorWarningFill,\r\n} from \"react-icons/ri\";\r\n\r\nconst openSuccessNotification = () => {\r\n  notification.open({\r\n    message: \"Success\",\r\n    description: \"Success message.\",\r\n    icon: <RiCheckboxCircleFill style={{ color: \"#00F7BF\" }} />,\r\n    closeIcon: (\r\n      <RiCloseFill className=\"remix-icon hp-text-color-black-80\" size={24} />\r\n    ),\r\n  });\r\n};\r\n\r\nconst openInfoNotification = () => {\r\n  notification.open({\r\n    message: \"Info\",\r\n    description: \"Info message.\",\r\n    icon: <RiErrorWarningFill style={{ color: \"#1BE7FF\" }} />,\r\n    closeIcon: (\r\n      <RiCloseFill className=\"remix-icon hp-text-color-black-80\" size={24} />\r\n    ),\r\n  });\r\n};\r\n\r\nconst openWarningNotification = () => {\r\n  notification.open({\r\n    message: \"Warning\",\r\n    description: \"Warning message.\",\r\n    icon: <RiErrorWarningFill style={{ color: \"#FFC700\" }} />,\r\n    closeIcon: (\r\n      <RiCloseFill className=\"remix-icon hp-text-color-black-80\" size={24} />\r\n    ),\r\n  });\r\n};\r\n\r\nconst openErrorNotification = () => {\r\n  notification.open({\r\n    message: \"Error\",\r\n    description: \"Error message.\",\r\n    icon: <RiErrorWarningFill style={{ color: \"#FF0022\" }} />,\r\n    closeIcon: (\r\n      <RiCloseFill className=\"remix-icon hp-text-color-black-80\" size={24} />\r\n    ),\r\n  });\r\n};\r\n\r\nreturn (\r\n  <Button\r\n    type=\"success\"\r\n    ghost\r\n    onClick={openSuccessNotification}\r\n  >\r\n    Success\r\n  </Button>\r\n\r\n  <Button\r\n    type=\"info\"\r\n    ghost\r\n    onClick={openInfoNotification}\r\n  >\r\n    Info\r\n  </Button>\r\n\r\n  <Button\r\n    type=\"warning\"\r\n    ghost\r\n    onClick={openWarningNotification}\r\n  >\r\n    Warning\r\n  </Button>\r\n\r\n  <Button\r\n    type=\"error\"\r\n    ghost\r\n    onClick={openErrorNotification}\r\n  >\r\n    Error\r\n  </Button>\r\n);\r\n`;\r\n\r\nexport const duration = `\r\nimport { Button, notification } from \"antd\";\r\nimport { RiCloseFill } from \"react-icons/ri\";\r\n\r\nconst openNotification = () => {\r\n  const args = {\r\n    message: \"Primary\",\r\n    description: \"Primary message.\",\r\n    duration: 0,\r\n    closeIcon: (\r\n      <RiCloseFill className=\"remix-icon hp-text-color-black-80\" size={24} />\r\n    ),\r\n  };\r\n  notification.open(args);\r\n};\r\n\r\nreturn (\r\n  <Button type=\"primary\" onClick={openNotification}>\r\n    Open the notification box\r\n  </Button>\r\n);\r\n`;\r\n\r\nexport const customClose = `\r\nimport { Button, notification } from \"antd\";\r\nimport { RiCloseFill } from \"react-icons/ri\";\r\n\r\nconst close = () => {};\r\n\r\nconst openNotification = () => {\r\n  const key = 'open' + Date.now(); \r\n  const btn = (\r\n    <Button\r\n      type=\"primary\"\r\n      size=\"small\"\r\n      onClick={() => notification.close(key)}\r\n    >\r\n      Confirm\r\n    </Button>\r\n  );\r\n  notification.open({\r\n    message: \"Notification Title\",\r\n    description:\r\n      'A function will be be called after the notification is closed (automatically after the \"duration\" time of manually).',\r\n    btn,\r\n    key,\r\n    closeIcon: (\r\n      <RiCloseFill className=\"remix-icon hp-text-color-black-80\" size={24} />\r\n    ),\r\n    onClose: close,\r\n  });\r\n};\r\n\r\nreturn (\r\n  <Button type=\"primary\" ghost onClick={openNotification}>\r\n    Open the notification box\r\n  </Button>\r\n);\r\n`;\r\n","import React, { useState } from \"react\";\r\n\r\nimport SyntaxHighlighter from \"react-syntax-highlighter\";\r\nimport { monoBlue } from \"react-syntax-highlighter/dist/esm/styles/hljs\";\r\nimport { duration } from \"./code.js\";\r\n\r\nimport { Card, Row, Col, Button, notification } from \"antd\";\r\nimport { RiCloseFill, RiCodeSSlashLine } from \"react-icons/ri\";\r\n\r\nexport default function DurationNotification() {\r\n  const [checkedCode, setCheckedCode] = useState(false);\r\n  const [codeClass, setCodeClass] = useState(false);\r\n\r\n  function toggleChecked() {\r\n    setTimeout(() => setCodeClass(!codeClass), 100);\r\n    setCheckedCode(!checkedCode);\r\n  }\r\n\r\n  const openNotification = () => {\r\n    const args = {\r\n      message: \"Primary\",\r\n      description: \"Primary message.\",\r\n      duration: 0,\r\n      closeIcon: (\r\n        <RiCloseFill className=\"remix-icon hp-text-color-black-80 hp-text-color-dark-30\" size={24} />\r\n      ),\r\n    };\r\n    notification.open(args);\r\n  };\r\n\r\n  return (\r\n    <Card className=\"hp-border-color-black-40\">\r\n      <Row>\r\n        <Col className=\"hp-mb-16\" span={24}>\r\n          <Row>\r\n            <Col lg={12} span={20}>\r\n              <h4>Duration after which the notification box is closed</h4>\r\n              <p className=\"hp-p1-body\">\r\n                Duration can be used to specify how long the notification stays\r\n                open. After the duration time elapses, the notification closes\r\n                automatically. If not specified, default value is 4.5 seconds.\r\n                If you set the value to 0, the notification box will never close\r\n                automatically.\r\n              </p>\r\n            </Col>\r\n\r\n            <Col lg={12} span={4} className=\"hp-text-right\">\r\n              <Button\r\n                onClick={toggleChecked}\r\n                type=\"text\"\r\n                icon={<RiCodeSSlashLine className=\"hp-text-color-black-80\" />}\r\n              />\r\n            </Col>\r\n          </Row>\r\n        </Col>\r\n\r\n        <Col span={24}>\r\n          <Button type=\"primary\" onClick={openNotification}>\r\n            Open the notification box\r\n          </Button>\r\n        </Col>\r\n      </Row>\r\n\r\n      {checkedCode && (\r\n        <SyntaxHighlighter\r\n          language=\"javascript\"\r\n          className={`show-code hp-mt-24 ${codeClass && \"show-code-active\"}`}\r\n          style={monoBlue}\r\n        >\r\n          {duration}\r\n        </SyntaxHighlighter>\r\n      )}\r\n    </Card>\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\r\n\r\nimport SyntaxHighlighter from \"react-syntax-highlighter\";\r\nimport { monoBlue } from \"react-syntax-highlighter/dist/esm/styles/hljs\";\r\nimport { icon } from \"./code.js\";\r\n\r\nimport { Card, Row, Col, Button, notification } from \"antd\";\r\nimport {\r\n  RiCloseFill,\r\n  RiCheckboxCircleFill,\r\n  RiErrorWarningFill,\r\n  RiCodeSSlashLine,\r\n} from \"react-icons/ri\";\r\n\r\nexport default function IconNotification() {\r\n  const [checkedCode, setCheckedCode] = useState(false);\r\n  const [codeClass, setCodeClass] = useState(false);\r\n\r\n  function toggleChecked() {\r\n    setTimeout(() => setCodeClass(!codeClass), 100);\r\n    setCheckedCode(!checkedCode);\r\n  }\r\n\r\n  const openSuccessNotification = () => {\r\n    notification.open({\r\n      message: \"Success\",\r\n      description: \"Success message.\",\r\n      icon: <RiCheckboxCircleFill style={{ color: \"#00F7BF\" }} />,\r\n      closeIcon: (\r\n        <RiCloseFill className=\"remix-icon hp-text-color-black-80 hp-text-color-dark-30\" size={24} />\r\n      ),\r\n    });\r\n  };\r\n\r\n  const openInfoNotification = () => {\r\n    notification.open({\r\n      message: \"Info\",\r\n      description: \"Info message.\",\r\n      icon: <RiErrorWarningFill style={{ color: \"#1BE7FF\" }} />,\r\n      closeIcon: (\r\n        <RiCloseFill className=\"remix-icon hp-text-color-black-80 hp-text-color-dark-30\" size={24} />\r\n      ),\r\n    });\r\n  };\r\n\r\n  const openWarningNotification = () => {\r\n    notification.open({\r\n      message: \"Warning\",\r\n      description: \"Warning message.\",\r\n      icon: <RiErrorWarningFill style={{ color: \"#FFC700\" }} />,\r\n      closeIcon: (\r\n        <RiCloseFill className=\"remix-icon hp-text-color-black-80 hp-text-color-dark-30\" size={24} />\r\n      ),\r\n    });\r\n  };\r\n\r\n  const openErrorNotification = () => {\r\n    notification.open({\r\n      message: \"Error\",\r\n      description: \"Error message.\",\r\n      icon: <RiErrorWarningFill style={{ color: \"#FF0022\" }} />,\r\n      closeIcon: (\r\n        <RiCloseFill className=\"remix-icon hp-text-color-black-80 hp-text-color-dark-30\" size={24} />\r\n      ),\r\n    });\r\n  };\r\n\r\n  return (\r\n    <Card className=\"hp-border-color-black-40\">\r\n      <Row>\r\n        <Col className=\"hp-mb-16\" span={24}>\r\n          <Row>\r\n            <Col lg={12} span={20}>\r\n              <h4>Notification with Icon</h4>\r\n              <p className=\"hp-p1-body\">\r\n                A notification box with a icon at the left side.\r\n              </p>\r\n            </Col>\r\n\r\n            <Col lg={12} span={4} className=\"hp-text-right\">\r\n              <Button\r\n                onClick={toggleChecked}\r\n                type=\"text\"\r\n                icon={<RiCodeSSlashLine className=\"hp-text-color-black-80\" />}\r\n              />\r\n            </Col>\r\n          </Row>\r\n        </Col>\r\n\r\n        <Col span={24}>\r\n          <Button\r\n            className=\"hp-mr-16 hp-mb-16\"\r\n            type=\"success\"\r\n            ghost\r\n            onClick={openSuccessNotification}\r\n          >\r\n            Success\r\n          </Button>\r\n\r\n          <Button\r\n            className=\"hp-mr-16 hp-mb-16\"\r\n            type=\"info\"\r\n            ghost\r\n            onClick={openInfoNotification}\r\n          >\r\n            Info\r\n          </Button>\r\n\r\n          <Button\r\n            className=\"hp-mr-16 hp-mb-16\"\r\n            type=\"warning\"\r\n            ghost\r\n            onClick={openWarningNotification}\r\n          >\r\n            Warning\r\n          </Button>\r\n\r\n          <Button\r\n            className=\"hp-mr-16 hp-mb-16\"\r\n            type=\"error\"\r\n            ghost\r\n            onClick={openErrorNotification}\r\n          >\r\n            Error\r\n          </Button>\r\n        </Col>\r\n      </Row>\r\n\r\n      {checkedCode && (\r\n        <SyntaxHighlighter\r\n          language=\"javascript\"\r\n          className={`show-code hp-mt-24 ${codeClass && \"show-code-active\"}`}\r\n          style={monoBlue}\r\n        >\r\n          {icon}\r\n        </SyntaxHighlighter>\r\n      )}\r\n    </Card>\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\r\n\r\nimport SyntaxHighlighter from \"react-syntax-highlighter\";\r\nimport { monoBlue } from \"react-syntax-highlighter/dist/esm/styles/hljs\";\r\nimport { customClose } from \"./code.js\";\r\n\r\nimport { Card, Row, Col, Button, notification } from \"antd\";\r\nimport { RiCloseFill, RiCodeSSlashLine } from \"react-icons/ri\";\r\n\r\nexport default function CustomCloseNotification() {\r\n  const [checkedCode, setCheckedCode] = useState(false);\r\n  const [codeClass, setCodeClass] = useState(false);\r\n\r\n  function toggleChecked() {\r\n    setTimeout(() => setCodeClass(!codeClass), 100);\r\n    setCheckedCode(!checkedCode);\r\n  }\r\n\r\n  const close = () => {};\r\n\r\n  const openNotification = () => {\r\n    const key = `open${Date.now()}`;\r\n    const btn = (\r\n      <Button\r\n        type=\"primary\"\r\n        size=\"small\"\r\n        onClick={() => notification.close(key)}\r\n      >\r\n        Confirm\r\n      </Button>\r\n    );\r\n    notification.open({\r\n      message: \"Notification Title\",\r\n      description:\r\n        'A function will be be called after the notification is closed (automatically after the \"duration\" time of manually).',\r\n      btn,\r\n      key,\r\n      closeIcon: (\r\n        <RiCloseFill className=\"remix-icon hp-text-color-black-80 hp-text-color-dark-30\" size={24} />\r\n      ),\r\n      onClose: close,\r\n    });\r\n  };\r\n\r\n  return (\r\n    <Card className=\"hp-border-color-black-40\">\r\n      <Row>\r\n        <Col className=\"hp-mb-16\" span={24}>\r\n          <Row>\r\n            <Col lg={12} span={20}>\r\n              <h4>Custom close button</h4>\r\n              <p className=\"hp-p1-body\">\r\n                To customize the style or font of the close button.\r\n              </p>\r\n            </Col>\r\n\r\n            <Col lg={12} span={4} className=\"hp-text-right\">\r\n              <Button\r\n                onClick={toggleChecked}\r\n                type=\"text\"\r\n                icon={<RiCodeSSlashLine className=\"hp-text-color-black-80\" />}\r\n              />\r\n            </Col>\r\n          </Row>\r\n        </Col>\r\n\r\n        <Col span={24}>\r\n          <Button type=\"primary\" ghost onClick={openNotification}>\r\n            Open the notification box\r\n          </Button>\r\n        </Col>\r\n      </Row>\r\n\r\n      {checkedCode && (\r\n        <SyntaxHighlighter\r\n          language=\"javascript\"\r\n          className={`show-code hp-mt-24 ${codeClass && \"show-code-active\"}`}\r\n          style={monoBlue}\r\n        >\r\n          {customClose}\r\n        </SyntaxHighlighter>\r\n      )}\r\n    </Card>\r\n  );\r\n}\r\n","import React from \"react\";\r\n\r\nimport { Row, Col } from \"antd\";\r\n\r\nimport PageContent from \"../../../../layout/components/content/page-content\";\r\nimport BasicNotification from \"./basic\";\r\nimport DurationNotification from \"./duration\";\r\nimport IconNotification from \"./icon\";\r\nimport CustomCloseNotification from \"./customClose\";\r\n\r\nexport default function Notification() {\r\n  return (\r\n    <Row gutter={[32, 32]} className=\"hp-mb-32\">\r\n      <Col span={24}>\r\n        <PageContent\r\n          title=\"Notification\"\r\n          desc=\"Display a notification message globally.\"\r\n          breadcrumb={[\r\n            {\r\n              title: \"Components\",\r\n              link: \"/components/components-page\"\r\n            },\r\n            {\r\n              title: \"Feedback\",\r\n            },\r\n            {\r\n              title: \"Notification\",\r\n            }\r\n          ]}\r\n        />\r\n      </Col>\r\n\r\n      <Col span={24}>\r\n        <BasicNotification />\r\n      </Col>\r\n\r\n      <Col span={24}>\r\n        <DurationNotification />\r\n      </Col>\r\n\r\n      <Col span={24}>\r\n        <IconNotification />\r\n      </Col>\r\n\r\n      <Col span={24}>\r\n        <CustomCloseNotification />\r\n      </Col>\r\n    </Row>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport { Breadcrumb, Col, Row } from \"antd\";\r\n\r\nexport default function PageContent(props) {\r\n  const { title, breadcrumb, desc } = props;\r\n\r\n  return (\r\n    <Col span={24} className=\"hp-bg-black-bg hp-py-sm-32 hp-py-64 hp-px-sm-24 hp-px-md-48 hp-px-80 hp-overflow-hidden\" style={{ borderRadius: 32 }}>\r\n      <svg\r\n        width={358}\r\n        height={336}\r\n        fill=\"none\"\r\n        xmlns=\"http://www.w3.org/2000/svg\"\r\n        className=\"hp-position-absolute-bottom-right hp-rtl-scale-x-n1\"\r\n      >\r\n        <path\r\n          d=\"M730.404 135.471 369.675-6.641l88.802 164.001-243.179-98.8 246.364 263.281-329.128-126.619 114.698 166.726-241.68-62.446\"\r\n          stroke=\"url(#a)\"\r\n          strokeWidth={40}\r\n          strokeLinejoin=\"bevel\"\r\n        />\r\n        <defs>\r\n          <linearGradient\r\n            id=\"a\"\r\n            x1={315.467}\r\n            y1={6.875}\r\n            x2={397.957}\r\n            y2={337.724}\r\n            gradientUnits=\"userSpaceOnUse\"\r\n          >\r\n            <stop stopColor=\"#fff\" />\r\n            <stop offset={1} stopColor=\"#fff\" stopOpacity={0} />\r\n          </linearGradient>\r\n        </defs>\r\n      </svg>\r\n\r\n      <Row>\r\n        <Col sm={12} span={24}>\r\n          <Row>\r\n            {\r\n              title && (\r\n                <Col span={24}>\r\n                  <h1 className=\"hp-mb-0 hp-text-color-black-0\">{title}</h1>\r\n                </Col>\r\n              )\r\n            }\r\n\r\n            {\r\n              breadcrumb && (\r\n                <Col span={24}>\r\n                  <Breadcrumb className=\"hp-d-flex hp-flex-wrap hp-mt-24\">\r\n                    <Breadcrumb.Item>\r\n                      <Link to=\"/\" className=\"hp-text-color-black-0 hp-hover-text-color-primary-2\">Home</Link>\r\n                    </Breadcrumb.Item>\r\n\r\n                    {\r\n                      breadcrumb.map((item, index) => (\r\n                        <Breadcrumb.Item key={index}>\r\n                          <Link to={item.link ? item.link : '#'} className={`hp-text-color-black-0${item.link ? ' hp-hover-text-color-primary-2' : ''}`}>{item.title}</Link>\r\n                        </Breadcrumb.Item>\r\n                      ))\r\n                    }\r\n                  </Breadcrumb>\r\n                </Col>\r\n              )\r\n            }\r\n\r\n            {\r\n              desc && (\r\n                <Col span={24}>\r\n                  <p className=\"h5 hp-mb-0 hp-mt-24 hp-text-color-black-0\">{desc}</p>\r\n                </Col>\r\n              )\r\n            }\r\n          </Row>\r\n        </Col>\r\n      </Row>\r\n    </Col>\r\n  );\r\n}\r\n"],"sourceRoot":""}