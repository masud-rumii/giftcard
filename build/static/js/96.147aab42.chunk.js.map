{"version":3,"sources":["view/apps/calendar/Calendar.jsx","assets/images/apps/calendar/sidebar.svg","view/apps/calendar/Sidebar.jsx","view/apps/calendar/AddEventSidebar.jsx","redux/calendar/data/index.jsx","redux/calendar/calendarActions.jsx","view/apps/calendar/index.jsx"],"names":["Calendar","props","calendarRef","useRef","store","dispatch","blankEvent","calendarApi","selectEvent","updateEvent","calendarsColor","setCalendarApi","showModal","useEffect","current","getApi","calendarOptions","events","length","plugins","interactionPlugin","dayGridPlugin","timeGridPlugin","initialView","headerToolbar","start","end","editable","eventResizableFromStart","dragScroll","dayMaxEvents","navLinks","eventClassNames","calendarEvent","event","colorName","_def","extendedProps","calendar","eventClick","clickedEvent","dateClick","info","ev","date","eventDrop","droppedEvent","eventResize","resizedEvent","ref","memo","filters","label","color","Sidebar","updateFilter","updateAllFilters","className","span","type","onClick","block","icon","size","id","checked","selectedCalendars","onChange","e","target","map","filter","index","includes","defaultChecked","align","justify","src","illustration","alt","isObjEmpty","obj","Object","keys","TextArea","Input","AddEventSidebar","addEvent","removeEvent","refetchEvents","handleCancel","isModalVisible","setIsModalVisible","selectedEvent","useForm","handleSubmit","errors","useState","desc","setDesc","title","setTitle","allDay","Date","endPicker","setEndPicker","startPicker","setStartPicker","value","setValue","handleAddEvent","display","undefined","handleResetInputValues","handleUpdateEvent","eventToUpdate","description","updatedEventData","propsToUpdate","extendedPropsToUpdate","existingEvent","getEventById","propName","setProp","setDates","setExtendedProp","updateEventInCalendar","handleDeleteEvent","eventId","remove","FooterAddOrUpdate","FooterCancelOrDelete","ghost","modalTitle","visible","onCancel","footer","centered","closeIcon","width","layout","onSubmit","Item","name","style","placeholder","required","options","enableTime","dateFormat","static","badge","classNamePrefix","isClearable","data","components","Option","rows","instance","axios","create","baseURL","timeout","headers","mock","MockAdapter","nextDay","getTime","nextMonth","getMonth","getFullYear","prevMonth","url","onGet","reply","config","calendars","onPost","JSON","parse","lastIndex","push","eventData","Number","find","assign","onDelete","eventIndex","findIndex","splice","fetchEvents","get","then","response","getState","post","delete","Travel","Social","Work","Important","Sider","Layout","Content","Calender","isDrawervisible","setIsDrawerVisible","useDispatch","useSelector","state","customise","handleOk","placement","closable","onClose","theme","flex","guests","location"],"mappings":"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","file":"static/js/96.147aab42.chunk.js","sourcesContent":["import { useEffect, useRef, memo } from \"react\";\n\nimport FullCalendar from \"@fullcalendar/react\";\nimport dayGridPlugin from \"@fullcalendar/daygrid\";\nimport timeGridPlugin from \"@fullcalendar/timegrid\";\nimport interactionPlugin from \"@fullcalendar/interaction\";\n\nconst Calendar = (props) => {\n  const calendarRef = useRef(null);\n\n  const {\n    store,\n    dispatch,\n    blankEvent,\n    calendarApi,\n    selectEvent,\n    updateEvent,\n    calendarsColor,\n    setCalendarApi,\n    showModal,\n  } = props;\n\n  useEffect(() => {\n    if (calendarApi === null) {\n      setCalendarApi(calendarRef.current.getApi());\n    }\n  }, [calendarApi]);\n\n  const calendarOptions = {\n    events: store.events.length ? store.events : [],\n    plugins: [interactionPlugin, dayGridPlugin, timeGridPlugin],\n    initialView: \"dayGridMonth\",\n    headerToolbar: {\n      start: \"prev,next,title\",\n      end: \"dayGridMonth,timeGridWeek,timeGridDay\",\n    },\n    editable: true,\n    eventResizableFromStart: true,\n    dragScroll: true,\n    dayMaxEvents: 2,\n    navLinks: true,\n\n    eventClassNames({ event: calendarEvent }) {\n      const colorName =\n        calendarsColor[calendarEvent._def.extendedProps.calendar];\n\n      return [`bg-light-${colorName}`];\n    },\n\n    eventClick({ event: clickedEvent }) {\n      dispatch(selectEvent(clickedEvent));\n      showModal();\n    },\n\n    dateClick(info) {\n      const ev = blankEvent;\n      ev.start = info.date;\n      ev.end = info.date;\n      dispatch(selectEvent(ev));\n    },\n\n    eventDrop({ event: droppedEvent }) {\n      dispatch(updateEvent(droppedEvent));\n    },\n\n    eventResize({ event: resizedEvent }) {\n      dispatch(updateEvent(resizedEvent));\n    },\n\n    ref: calendarRef,\n  };\n\n  return <FullCalendar {...calendarOptions} />;\n};\n\nexport default memo(Calendar);","export default __webpack_public_path__ + \"static/media/sidebar.87505a9b.svg\";","import React from \"react\";\n\nimport { Col, Row, Button, Checkbox } from \"antd\";\n\nimport { RiCalendarEventLine } from \"react-icons/ri\";\nimport illustration from \"../../../assets/images/apps/calendar/sidebar.svg\";\n\n// Filters\nconst filters = [\n  {\n    label: \"Travel\",\n    color: \"travel\",\n  },\n  {\n    label: \"Social\",\n    color: \"social\",\n  },\n  {\n    label: \"Work\",\n    color: \"work\",\n  },\n  {\n    label: \"Important\",\n    color: \"important\",\n  },\n];\n\nconst Sidebar = (props) => {\n  const { updateFilter, updateAllFilters, showModal, store, dispatch } = props;\n\n  return (\n    <Row className=\"hp-h-100 hp-pr-24\">\n      <Col span={24}>\n        <h3>YodaCalendar</h3>\n\n        <Button\n          className=\"hp-mt-16\"\n          type=\"primary\"\n          onClick={showModal}\n          block\n          icon={<RiCalendarEventLine className=\"remix-icon\" size={17} />}\n        >\n          New Event\n        </Button>\n\n        <h5 className=\"hp-mt-48\">Calendars</h5>\n\n        <Checkbox\n          className=\"hp-mb-8\"\n          id=\"view-all\"\n          checked={store.selectedCalendars.length === filters.length}\n          onChange={(e) => dispatch(updateAllFilters(e.target.checked))}\n        >\n          Select All\n        </Checkbox>\n\n        <div className=\"hp-calendar-checkbox-list\">\n          {filters.length &&\n            filters.map((filter, index) => {\n              return (\n                <Checkbox\n                  key={index}\n                  id={filter.label}\n                  onChange={() => dispatch(updateFilter(filter.label))}\n                  checked={store.selectedCalendars.includes(filter.label)}\n                  defaultChecked={true}\n                  className=\"hp-mb-8\"\n                  data-color={filter.color}\n                >\n                  {filter.label}\n                </Checkbox>\n              );\n            })}\n        </div>\n      </Col>\n\n      <Row\n        className=\"hp-calendar-menu-footer hp-w-100\"\n        align=\"bottom\"\n        justify=\"center\"\n      >\n        <img src={illustration} alt=\"illustration\" />\n      </Row>\n    </Row>\n  );\n};\n\nexport default Sidebar;\n","import { Fragment, useState } from \"react\";\n\nimport Select, { components } from \"react-select\";\nimport \"flatpickr/dist/themes/light.css\";\nimport Flatpickr from \"react-flatpickr\";\nimport { useForm } from \"react-hook-form\";\nimport { RiCloseFill } from \"react-icons/ri\";\nimport { Button, Input, Form, Modal, Badge, Row, Col } from \"antd\";\n\nexport const isObjEmpty = (obj) => Object.keys(obj).length === 0;\n\nconst { TextArea } = Input;\n\nconst AddEventSidebar = (props) => {\n  const {\n    store,\n    dispatch,\n    addEvent,\n    selectEvent,\n    updateEvent,\n    removeEvent,\n    calendarApi,\n    refetchEvents,\n    handleCancel,\n    isModalVisible,\n    setIsModalVisible,\n    showModal,\n  } = props;\n\n  const selectedEvent = store.selectedEvent;\n  const { errors, handleSubmit } = useForm();\n\n  const [desc, setDesc] = useState(\"\");\n  const [title, setTitle] = useState(\"\");\n  const [allDay, setAllDay] = useState(false);\n  const [endPicker, setEndPicker] = useState(new Date());\n  const [startPicker, setStartPicker] = useState(new Date());\n  const [value, setValue] = useState([{ value: \"Travel\", label: \"Travel\" }]);\n\n  const options = [\n    { value: \"Travel\", label: \"Travel\", badge: \"#C903FF\" },\n    { value: \"Social\", label: \"Social\", badge: \"#00F7BF\" },\n    { value: \"Work\", label: \"Work\", badge: \"#FFC700\" },\n    { value: \"Important\", label: \"Important\", badge: \"#FF0022\" },\n  ];\n\n  const OptionComponent = ({ data, ...props }) => {\n    return (\n      <components.Option {...props}>\n        <Badge color={data.badge} />\n        {data.label}\n      </components.Option>\n    );\n  };\n\n  // Adds New Event\n  const handleAddEvent = () => {\n    const obj = {\n      title,\n      start: startPicker,\n      end: endPicker,\n      allDay,\n      display: \"block\",\n      extendedProps: {\n        calendar: value[0].label,\n        desc: desc.length ? desc : undefined,\n      },\n    };\n    dispatch(addEvent(obj));\n    refetchEvents();\n    handleCancel();\n  };\n\n  // Reset Input Values on Close\n  const handleResetInputValues = () => {\n    dispatch(selectEvent({}));\n    setTitle(\"\");\n    setDesc(\"\");\n    setValue([{ value: \"Travel\", label: \"Travel\" }]);\n    setStartPicker(new Date());\n    setEndPicker(new Date());\n    setIsModalVisible(false);\n  };\n\n  // (UI) updateEventInCalendar\n  const updateEventInCalendar = (\n    updatedEventData,\n    propsToUpdate,\n    extendedPropsToUpdate\n  ) => {\n    const existingEvent = calendarApi.getEventById(updatedEventData.id);\n\n    // Set event properties except date related\n    for (let index = 0; index < propsToUpdate.length; index++) {\n      const propName = propsToUpdate[index];\n      existingEvent.setProp(propName, updatedEventData[propName]);\n    }\n\n    // Set date related props\n    existingEvent.setDates(updatedEventData.start, updatedEventData.end, {\n      allDay: updatedEventData.allDay,\n    });\n\n    // Set event's extendedProps\n    // eslint-disable-next-line no-plusplus\n    for (let index = 0; index < extendedPropsToUpdate.length; index++) {\n      const propName = extendedPropsToUpdate[index];\n      existingEvent.setExtendedProp(\n        propName,\n        updatedEventData.extendedProps[propName]\n      );\n    }\n  };\n\n  // Updates Event in Store\n  const handleUpdateEvent = () => {\n    const eventToUpdate = {\n      id: selectedEvent.id,\n      title,\n      allDay,\n      start: startPicker,\n      end: endPicker,\n      extendedProps: {\n        description: desc,\n        calendar: value[0].label,\n      },\n    };\n\n    const propsToUpdate = [\"id\", \"title\"];\n    const extendedPropsToUpdate = [\"calendar\", \"description\"];\n\n    dispatch(updateEvent(eventToUpdate));\n    updateEventInCalendar(eventToUpdate, propsToUpdate, extendedPropsToUpdate);\n    setIsModalVisible(false);\n  };\n\n  // (UI) removeEventInCalendar\n  const removeEventInCalendar = (eventId) => {\n    calendarApi.getEventById(eventId).remove();\n  };\n\n  const handleDeleteEvent = () => {\n    dispatch(removeEvent(selectedEvent.id));\n    removeEventInCalendar(selectedEvent.id);\n    setIsModalVisible(false);\n  };\n\n  const FooterAddOrUpdate = () => {\n    if (\n      isObjEmpty(selectedEvent) ||\n      (!isObjEmpty(selectedEvent) && !selectedEvent.title.length)\n    ) {\n      return (\n        <Fragment>\n          <Button\n            onClick={() => {\n              handleAddEvent();\n              handleResetInputValues();\n            }}\n            type=\"primary\"\n            block\n          >\n            Add\n          </Button>\n        </Fragment>\n      );\n    } else {\n      return (\n        <Fragment>\n          <Button\n            type=\"primary\"\n            onClick={() => {\n              setIsModalVisible(true);\n              handleResetInputValues();\n              handleUpdateEvent();\n            }}\n            block\n          >\n            Update\n          </Button>\n        </Fragment>\n      );\n    }\n  };\n\n  const FooterCancelOrDelete = () => {\n    if (\n      isObjEmpty(selectedEvent) ||\n      (!isObjEmpty(selectedEvent) && !selectedEvent.title.length)\n    ) {\n      return (\n        <Fragment>\n          <Button\n            onClick={() => {\n              handleResetInputValues();\n            }}\n            type=\"primary\"\n            block\n            ghost\n          >\n            Cancel\n          </Button>\n        </Fragment>\n      );\n    } else {\n      return (\n        <Fragment>\n          <Button\n            type=\"danger\"\n            onClick={() => {\n              setIsModalVisible(true);\n              handleResetInputValues();\n              handleDeleteEvent();\n            }}\n            block\n            ghost\n          >\n            Delete\n          </Button>\n        </Fragment>\n      );\n    }\n  };\n\n  const modalTitle = (\n    <h5 className=\"modal-title\">\n      {selectedEvent && selectedEvent.title && selectedEvent.title.length\n        ? \"Update\"\n        : \"Add\"}\n      Event\n    </h5>\n  );\n\n  return (\n    <Modal\n      visible={isModalVisible}\n      title={modalTitle}\n      onCancel={() => {\n        handleResetInputValues();\n        handleCancel();\n      }}\n      className=\"hp-modal-p-24\"\n      footer={\n        <Row justify=\"center\">\n          <Col span={12} className=\"hp-pr-4\">\n            <FooterCancelOrDelete />\n          </Col>\n\n          <Col span={12} className=\"hp-pl-4\">\n            <FooterAddOrUpdate />\n          </Col>\n        </Row>\n      }\n      centered\n      closeIcon={\n        <RiCloseFill className=\"remix-icon text-color-black-100\" size={24} />\n      }\n      width={416}\n    >\n      <Form\n        layout=\"vertical\"\n        onSubmit={handleSubmit(() => {\n          if (\n            isObjEmpty(selectedEvent) ||\n            (!isObjEmpty(selectedEvent) && !selectedEvent.title.length)\n          ) {\n            handleAddEvent();\n          } else {\n            handleUpdateEvent();\n          }\n        })}\n      >\n        <Form.Item label=\"Event Title :\">\n          <Input\n            id=\"title\"\n            name=\"title\"\n            style={{ width: \"100%\" }}\n            placeholder=\"Title\"\n            value={title}\n            onChange={(e) => setTitle(e.target.value)}\n          />\n        </Form.Item>\n\n        <Form.Item label=\"From :\">\n          <Flatpickr\n            required\n            id=\"startDate\"\n            name=\"startDate\"\n            style={{ width: \"100%\" }}\n            onChange={(date) => setStartPicker(date[0])}\n            value={startPicker}\n            options={{\n              enableTime: allDay === false,\n              dateFormat: \"d M Y - H:i K\",\n              static: true,\n            }}\n          />\n        </Form.Item>\n\n        <Form.Item label=\"To :\">\n          <Flatpickr\n            required\n            id=\"endDate\"\n            name=\"endDate\"\n            style={{ width: \"100%\" }}\n            onChange={(date) => setEndPicker(date[0])}\n            value={endPicker}\n            options={{\n              enableTime: allDay === false,\n              dateFormat: \"d M Y - H:i K\",\n              static: true,\n            }}\n          />\n        </Form.Item>\n\n        <Form.Item label=\"Event :\">\n          <Select\n            id=\"label\"\n            value={value}\n            options={options}\n            classNamePrefix=\"select\"\n            isClearable={false}\n            onChange={(data) => setValue([data])}\n            components={{\n              Option: OptionComponent,\n            }}\n          />\n        </Form.Item>\n\n        <Form.Item label=\"Description :\">\n          <TextArea\n            style={{ width: \"100%\" }}\n            type=\"textarea\"\n            name=\"text\"\n            id=\"description\"\n            rows={4}\n            value={desc}\n            onChange={(e) => setDesc(e.target.value)}\n            placeholder=\"Description\"\n          />\n        </Form.Item>\n      </Form>\n    </Modal>\n  );\n};\n\nexport default AddEventSidebar;\n","import axios from \"axios\";\nimport MockAdapter from \"axios-mock-adapter\";\n\nlet instance = axios.create({\n  baseURL: \"https://localhost:3000/\",\n  timeout: 1000,\n  headers: {\n    \"X-Custom-Header\": \"foobar\",\n  },\n});\n\nlet mock = new MockAdapter(instance);\n\nconst date = new Date();\nconst nextDay = new Date(new Date().getTime() + 24 * 60 * 60 * 1000);\n\nconst nextMonth = date.getMonth() === 11 ? new Date(date.getFullYear() + 1, 0, 1) : new Date(date.getFullYear(), date.getMonth() + 1, 1)\nconst prevMonth = date.getMonth() === 11 ? new Date(date.getFullYear() - 1, 0, 1) : new Date(date.getFullYear(), date.getMonth() - 1, 1)\n\nconst data = {\n  events: [\n    {\n      id: 1,\n      url: \"\",\n      title: \"Design Review\",\n      start: date,\n      end: nextDay,\n      allDay: false,\n      extendedProps: {\n        calendar: \"Work\",\n      },\n    },\n    {\n      id: 2,\n      url: \"\",\n      title: \"Meeting With Client\",\n      start: new Date(date.getFullYear(), date.getMonth() + 1, -11),\n      end: new Date(date.getFullYear(), date.getMonth() + 1, -10),\n      allDay: true,\n      extendedProps: {\n        calendar: \"Work\",\n      },\n    },\n    {\n      id: 3,\n      url: \"\",\n      title: \"Family Trip\",\n      allDay: true,\n      start: new Date(date.getFullYear(), date.getMonth() + 1, -9),\n      end: new Date(date.getFullYear(), date.getMonth() + 1, -7),\n      extendedProps: {\n        calendar: \"Travel\",\n      },\n    },\n    {\n      id: 4,\n      url: \"\",\n      title: \"Doctor's Appointment\",\n      start: new Date(date.getFullYear(), date.getMonth() + 1, -11),\n      end: new Date(date.getFullYear(), date.getMonth() + 1, -10),\n      allDay: true,\n      extendedProps: {\n        calendar: \"Important\",\n      },\n    },\n    {\n      id: 6,\n      url: \"\",\n      title: \"Meditation\",\n      start: new Date(date.getFullYear(), date.getMonth() + 1, -13),\n      end: new Date(date.getFullYear(), date.getMonth() + 1, -12),\n      allDay: true,\n      extendedProps: {\n        calendar: \"Important\",\n      },\n    },\n    {\n      id: 7,\n      url: \"\",\n      title: \"Dinner\",\n      start: new Date(date.getFullYear(), date.getMonth() + 1, -13),\n      end: new Date(date.getFullYear(), date.getMonth() + 1, -12),\n      allDay: true,\n      extendedProps: {\n        calendar: \"Social\",\n      },\n    },\n    {\n      id: 8,\n      url: \"\",\n      title: \"Product Review\",\n      start: new Date(date.getFullYear(), date.getMonth() + 1, -13),\n      end: new Date(date.getFullYear(), date.getMonth() + 1, -12),\n      allDay: true,\n      extendedProps: {\n        calendar: \"Work\",\n      },\n    },\n    {\n      id: 9,\n      url: \"\",\n      title: \"Monthly Meeting\",\n      start: nextMonth,\n      end: nextMonth,\n      allDay: true,\n      extendedProps: {\n        calendar: \"Work\",\n      },\n    },\n    {\n      id: 10,\n      url: \"\",\n      title: \"Monthly Checkup\",\n      start: prevMonth,\n      end: prevMonth,\n      allDay: true,\n      extendedProps: {\n        calendar: \"Important\",\n      },\n    },\n  ],\n};\n\n// Return calendar events\nmock.onGet(\"/apps/calendar/events\").reply((config) => {\n  const calendars = config.calendars;\n\n  return [\n    200,\n    data.events.filter((event) =>\n      calendars.includes(event.extendedProps.calendar)\n    ),\n  ];\n});\n\n// Add new event\nmock.onPost(\"/apps/calendar/add-event\").reply((config) => {\n  const { event } = JSON.parse(config.data);\n\n  const { length } = data.events;\n  let lastIndex = 0;\n  if (length) {\n    lastIndex = data.events[length - 1].id;\n  }\n  event.id = lastIndex + 1;\n\n  data.events.push(event);\n\n  return [\n    201,\n    {\n      event,\n    },\n  ];\n});\n\n// Update Event\nmock.onPost(\"/apps/calendar/update-event\").reply((config) => {\n  const { event: eventData } = JSON.parse(config.data);\n\n  eventData.id = Number(eventData.id);\n\n  const event = data.events.find((ev) => ev.id === Number(eventData.id));\n  Object.assign(event, eventData);\n\n  return [\n    200,\n    {\n      event,\n    },\n  ];\n});\n\n// Remove Event\nmock.onDelete(\"/apps/calendar/remove-event\").reply((config) => {\n  let { id } = config;\n\n  const eventId = Number(id);\n\n  const eventIndex = data.events.findIndex((ev) => ev.id === eventId);\n  data.events.splice(eventIndex, 1);\n  return [200];\n});\n\nexport default instance;","import instance from \"./data\";\n\n// Fetch Events\nexport const fetchEvents = (calendars) => {\n  return (dispatch) => {\n    instance.get(\"/apps/calendar/events\", { calendars }).then((response) => {\n      dispatch({\n        type: \"FETCH_EVENTS\",\n        events: response.data,\n      });\n    });\n  };\n};\n\n// Add Event\nexport const addEvent = (event) => {\n  return (dispatch, getState) => {\n    instance.post(\"/apps/calendar/add-event\", { event }).then(() => {\n      dispatch({\n        type: \"ADD_EVENT\",\n      });\n      dispatch(fetchEvents(getState().calendar.selectedCalendars));\n    });\n  };\n};\n\n// Update Event\nexport const updateEvent = (event) => {\n  return (dispatch) => {\n    instance.post(\"/apps/calendar/update-event\", { event }).then(() => {\n      dispatch({\n        type: \"UPDATE_EVENT\",\n      });\n    });\n  };\n};\n\n// Filter Events\nexport const updateFilter = (filter) => {\n  return (dispatch, getState) => {\n    dispatch({\n      type: \"UPDATE_FILTERS\",\n      filter,\n    });\n    dispatch(fetchEvents(getState().calendar.selectedCalendars));\n  };\n};\n\n// Add/Remove All Filters\nexport const updateAllFilters = (value) => {\n  return (dispatch, getState) => {\n    dispatch({\n      type: \"UPDATE_ALL_FILTERS\",\n      value,\n    });\n    dispatch(fetchEvents(getState().calendar.selectedCalendars));\n  };\n};\n\n// Remove Event\nexport const removeEvent = (id) => {\n  return (dispatch) => {\n    instance.delete(\"/apps/calendar/remove-event\", { id }).then(() => {\n      dispatch({\n        type: \"REMOVE_EVENT\",\n      });\n    });\n  };\n};\n\n// Select Event (get event data on click)\nexport const selectEvent = (event) => {\n  return (dispatch) => {\n    dispatch({\n      type: \"SELECT_EVENT\",\n      event,\n    });\n  };\n};\n","import React, { useState, useEffect } from \"react\";\n\nimport { Layout, Row, Col, Card, Button, Drawer } from \"antd\";\nimport { RiMenuFill, RiCloseFill } from \"react-icons/ri\";\n\n// Component\nimport Calendar from \"./Calendar\";\nimport Sidebar from \"./Sidebar\";\nimport AddEventSidebar from \"./AddEventSidebar\";\n\n// Redux\nimport { useSelector, useDispatch } from \"react-redux\";\nimport {\n  fetchEvents,\n  selectEvent,\n  updateEvent,\n  updateFilter,\n  updateAllFilters,\n  addEvent,\n  removeEvent,\n} from \"../../../redux/calendar/calendarActions\";\n\n// Colors\nconst calendarsColor = {\n  Travel: \"travel\",\n  Social: \"social\",\n  Work: \"work\",\n  Important: \"important\",\n};\n\nconst { Sider, Content } = Layout;\n\nexport default function Calender() {\n  const [calendarApi, setCalendarApi] = useState(null);\n  const [isModalVisible, setIsModalVisible] = useState(false);\n  const [isDrawervisible, setIsDrawerVisible] = useState(false);\n\n  // Redux\n  const dispatch = useDispatch();\n  const store = useSelector((state) => state.calendar);\n  const customise = useSelector(state => state.customise)\n\n  const showDrawer = () => {\n    setIsDrawerVisible(true);\n  };\n\n  const closeDrawer = () => {\n    setIsDrawerVisible(false);\n  };\n\n  const showModal = () => {\n    setIsModalVisible(true);\n  };\n\n  const handleOk = () => {\n    setIsModalVisible(false);\n  };\n\n  const handleCancel = () => {\n    setIsModalVisible(false);\n  };\n\n  // Object\n  const blankEvent = {\n    title: \"\",\n    start: \"\",\n    end: \"\",\n    allDay: false,\n    url: \"\",\n    extendedProps: {\n      calendar: \"\",\n      guests: [],\n      location: \"\",\n      description: \"\",\n    },\n  };\n\n  // RefetchEvents\n  const refetchEvents = () => {\n    if (calendarApi !== null) {\n      calendarApi.refetchEvents();\n    }\n  };\n\n  // Fetch Events\n  useEffect(() => {\n    dispatch(fetchEvents(store.selectedCalendars));\n  }, []);\n\n  return (\n    <Layout className=\"hp-calendar hp-mb-32 hp-bg-dark-90\">\n      <Drawer\n        title=\" \"\n        className=\"hp-calendar-mobile-menu\"\n        placement=\"left\"\n        closable={true}\n        onClose={closeDrawer}\n        visible={isDrawervisible}\n        closeIcon={\n          <RiCloseFill\n            className=\"remix-icon hp-text-color-black-80 hp-text-color-dark-30\"\n            size={24}\n          />\n        }\n      >\n        <Sidebar\n          store={store}\n          dispatch={dispatch}\n          updateFilter={updateFilter}\n          updateAllFilters={updateAllFilters}\n          showModal={showModal}\n          handleOk={handleOk}\n          handleCancel={handleCancel}\n          isModalVisible={isModalVisible}\n        />\n      </Drawer>\n\n      <Content>\n        <Row className=\"hp-calendar-mobile-menu-btn hp-bg-color-black-0 hp-bg-color-dark-100 hp-border-radius hp-py-12 hp-px-sm-8 hp-px-24 hp-mb-16\">\n          <Button\n            className=\"hp-p-0\"\n            type=\"text\"\n            icon={\n              <RiMenuFill\n                size={24}\n                className=\"remix-icon hp-text-color-black-80 hp-text-color-dark-30\"\n              />\n            }\n            onClick={showDrawer}\n          />\n        </Row>\n\n        <Card>\n          <Row>\n            <Sider\n              className=\"hp-bg-dark-100 hp-border-right-1 hp-border-color-dark-80 hp-py-24 hp-mr-24\"\n              theme={customise.theme == \"light\" ? \"light\" : \"dark\"}\n              width={256}\n            >\n              <Sidebar\n                store={store}\n                dispatch={dispatch}\n                updateFilter={updateFilter}\n                updateAllFilters={updateAllFilters}\n                showModal={showModal}\n                handleOk={handleOk}\n                handleCancel={handleCancel}\n                isModalVisible={isModalVisible}\n              />\n            </Sider>\n\n            <Col flex=\"1 1\" className=\"hp-py-24\">\n              <Calendar\n                store={store}\n                dispatch={dispatch}\n                blankEvent={blankEvent}\n                calendarApi={calendarApi}\n                selectEvent={selectEvent}\n                updateEvent={updateEvent}\n                calendarsColor={calendarsColor}\n                setCalendarApi={setCalendarApi}\n                showModal={showModal}\n              />\n            </Col>\n          </Row>\n        </Card>\n\n        <AddEventSidebar\n          store={store}\n          dispatch={dispatch}\n          addEvent={addEvent}\n          selectEvent={selectEvent}\n          updateEvent={updateEvent}\n          removeEvent={removeEvent}\n          calendarApi={calendarApi}\n          refetchEvents={refetchEvents}\n          handleCancel={handleCancel}\n          isModalVisible={isModalVisible}\n          setIsModalVisible={setIsModalVisible}\n          showModal={showModal}\n        />\n      </Content>\n    </Layout>\n  );\n}\n"],"sourceRoot":""}