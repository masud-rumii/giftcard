(this.webpackJsonpsochitel_giftcard=this.webpackJsonpsochitel_giftcard||[]).push([[53],{1061:function(e,n,t){"use strict";t.r(n),t.d(n,"default",(function(){return R}));var a=t(0),i=t(76),s=t(48),c=t(511),r=t(5),l=t(7),o=t(1082),p=t(1011),d=t(298),j=t(474),u=t(84),m=t(1040),b=t(49),h=t(2);function f(){var e=Object(a.useState)(!1),n=Object(l.a)(e,2),t=n[0],c=n[1],f=Object(a.useState)(!1),x=Object(l.a)(f,2),g=x[0],O=x[1];var w={name:"file",action:"https://www.mocky.io/v2/5cc8019d300000980a055e76",headers:{authorization:"authorization-text"},onChange:function(e){"uploading"!==e.file.status&&console.log(e.file,e.fileList),"done"===e.file.status?d.b.success({content:"".concat(e.file.name," file uploaded successfully."),icon:Object(h.jsx)(b.r,{className:"remix-icon"})}):"error"===e.file.status&&d.b.error({content:"".concat(e.file.name," file upload failed."),icon:Object(h.jsx)(b.t,{className:"remix-icon"})})}};return Object(h.jsxs)(j.a,{className:"hp-border-color-black-40",children:[Object(h.jsxs)(i.a,{children:[Object(h.jsx)(s.a,{className:"hp-mb-16",span:24,children:Object(h.jsxs)(i.a,{children:[Object(h.jsxs)(s.a,{lg:12,span:20,children:[Object(h.jsx)("h4",{children:"Upload by Clicking"}),Object(h.jsx)("p",{className:"hp-p1-body",children:"Classic mode. File selection dialog pops up when upload button is clicked."})]}),Object(h.jsx)(s.a,{lg:12,span:4,className:"hp-text-right",children:Object(h.jsx)(u.a,{onClick:function(){setTimeout((function(){return O(!g)}),100),c(!t)},type:"text",icon:Object(h.jsx)(b.w,{className:"hp-text-color-black-80"})})})]})}),Object(h.jsx)(s.a,{span:24,children:Object(h.jsx)(m.a,Object(r.a)(Object(r.a)({},w),{},{children:Object(h.jsx)(u.a,{type:"primary",icon:Object(h.jsx)(b.Fb,{className:"remix-icon"}),children:"Click to Upload"})}))})]}),t&&Object(h.jsx)(o.a,{language:"javascript",className:"show-code hp-mt-24 ".concat(g&&"show-code-active"),style:p.a,children:'\nimport React from "react";\n\nimport { Upload, message, Button } from "antd";\nimport {\n  RiUpload2Line,\n  RiCheckboxCircleLine,\n  RiCloseCircleLine,\n} from "react-icons/ri";\n\nconst props = {\n  name: "file",\n  action: "https://www.mocky.io/v2/5cc8019d300000980a055e76",\n  headers: {\n    authorization: "authorization-text",\n  },\n  onChange(info) {\n    if (info.file.status !== "uploading") {\n      console.log(info.file, info.fileList);\n    }\n    if (info.file.status === "done") {\n      message.success({\n        content: info.file.name + \' file uploaded successfully.\',\n        icon: <RiCheckboxCircleLine className="remix-icon" />,\n      });\n    } else if (info.file.status === "error") {\n      message.error({\n        content: info.file.name + \' file upload failed.\',\n        icon: <RiCloseCircleLine className="remix-icon" />,\n      });\n    }\n  },\n};\n\nreturn (\n  <Upload {...props}>\n    <Button\n      type="primary"\n      icon={<RiUpload2Line className="remix-icon" />}\n    >\n      Click to Upload\n    </Button>\n  </Upload>\n);\n'})]})}var x=t(8);function g(){var e=Object(a.useState)(!1),n=Object(l.a)(e,2),t=n[0],c=n[1],d=Object(a.useState)(!1),f=Object(l.a)(d,2),g=f[0],O=f[1];var w=Object(a.useState)([{uid:"-1",name:"xxx.png",status:"done",url:"http://www.baidu.com/xxx.png"}]),v=Object(l.a)(w,2),y=v[0],N=v[1];return Object(h.jsxs)(j.a,{className:"hp-border-color-black-40",children:[Object(h.jsxs)(i.a,{children:[Object(h.jsx)(s.a,{className:"hp-mb-16",span:24,children:Object(h.jsxs)(i.a,{children:[Object(h.jsxs)(s.a,{lg:12,span:20,children:[Object(h.jsx)("h4",{children:"Complete Control Over File List"}),Object(h.jsx)("p",{className:"hp-p1-body",children:"You can gain full control over filelist by configuring fileList"})]}),Object(h.jsx)(s.a,{lg:12,span:4,className:"hp-text-right",children:Object(h.jsx)(u.a,{onClick:function(){setTimeout((function(){return O(!g)}),100),c(!t)},type:"text",icon:Object(h.jsx)(b.w,{className:"hp-text-color-black-80"})})})]})}),Object(h.jsx)(s.a,{span:24,children:Object(h.jsx)(m.a,Object(r.a)(Object(r.a)({},{action:"https://www.mocky.io/v2/5cc8019d300000980a055e76",multiple:!0}),{},{onChange:function(e){var n=Object(x.a)(e.fileList);n=(n=n.slice(-2)).map((function(e){return e.response&&(e.url=e.response.url),e})),N(n)},fileList:y,children:Object(h.jsx)(u.a,{type:"primary",icon:Object(h.jsx)(b.Fb,{className:"remix-icon"}),children:"Upload"})}))})]}),t&&Object(h.jsx)(o.a,{language:"javascript",className:"show-code hp-mt-24 ".concat(g&&"show-code-active"),style:p.a,children:'\nimport React, { useState } from "react";\n\nimport { Upload, Button } from "antd";\nimport { RiUpload2Line } from "react-icons/ri";\n\nconst [fileList, setFileList] = useState([\n  {\n    uid: "-1",\n    name: "xxx.png",\n    status: "done",\n    url: "http://www.baidu.com/xxx.png",\n  },\n]);\n\nconst handleChange = (info) => {\n  let fileList = [...info.fileList];\n  fileList = fileList.slice(-2);\n\n  fileList = fileList.map((file) => {\n    if (file.response) {\n      file.url = file.response.url;\n    }\n    return file;\n  });\n\n  setFileList(fileList);\n};\n\nconst props = {\n  action: "https://www.mocky.io/v2/5cc8019d300000980a055e76",\n  multiple: true,\n};\n\nreturn (\n  <Upload {...props} onChange={handleChange} fileList={fileList}>\n    <Button\n      type="primary"\n      icon={<RiUpload2Line className="remix-icon" />}\n    >\n      Upload\n    </Button>\n  </Upload>\n);\n'})]})}var O=t(514);function w(){var e=Object(a.useState)(!1),n=Object(l.a)(e,2),t=n[0],c=n[1],r=Object(a.useState)(!1),d=Object(l.a)(r,2),f=d[0],x=d[1];var g=[{uid:"-1",name:"xxx.png",status:"done",url:O.a,thumbUrl:O.a},{uid:"-2",name:"yyy.png",status:"error"}];return Object(h.jsxs)(j.a,{className:"hp-border-color-black-40",children:[Object(h.jsxs)(i.a,{children:[Object(h.jsx)(s.a,{className:"hp-mb-16",span:24,children:Object(h.jsxs)(i.a,{children:[Object(h.jsxs)(s.a,{lg:12,span:20,children:[Object(h.jsx)("h4",{children:"Pictures with List Style"}),Object(h.jsx)("p",{className:"hp-p1-body",children:"If uploaded file is a picture, the thumbnail can be shown."})]}),Object(h.jsx)(s.a,{lg:12,span:4,className:"hp-text-right",children:Object(h.jsx)(u.a,{onClick:function(){setTimeout((function(){return x(!f)}),100),c(!t)},type:"text",icon:Object(h.jsx)(b.w,{className:"hp-text-color-black-80"})})})]})}),Object(h.jsx)(s.a,{span:24,children:Object(h.jsx)(m.a,{action:"https://www.mocky.io/v2/5cc8019d300000980a055e76",listType:"picture",defaultFileList:[].concat(g),children:Object(h.jsx)(u.a,{type:"primary",icon:Object(h.jsx)(b.Fb,{className:"remix-icon"}),children:"Upload"})})})]}),t&&Object(h.jsx)(o.a,{language:"javascript",className:"show-code hp-mt-24 ".concat(f&&"show-code-active"),style:p.a,children:'\nimport React from "react";\n\nimport { Upload, Button } from "antd";\nimport { RiUpload2Line } from "react-icons/ri";\n\nimport images from "../../../../assets/images/memoji/memoji-1.png";\n\nconst fileList = [\n  {\n    uid: "-1",\n    name: "xxx.png",\n    status: "done",\n    url: images,\n    thumbUrl: images,\n  },\n  {\n    uid: "-2",\n    name: "yyy.png",\n    status: "error",\n  },\n];\n\nreturn (\n  <Upload\n    action="https://www.mocky.io/v2/5cc8019d300000980a055e76"\n    listType="picture"\n    defaultFileList={[...fileList]}\n  >\n    <Button\n      type="primary"\n      icon={<RiUpload2Line className="remix-icon" />}\n    >\n      Upload\n    </Button>\n  </Upload>\n);\n'})]})}function v(){var e=Object(a.useState)(!1),n=Object(l.a)(e,2),t=n[0],c=n[1],r=Object(a.useState)(!1),f=Object(l.a)(r,2),x=f[0],g=f[1];var O=Object(a.useState)(),w=Object(l.a)(O,2),v=w[0],y=w[1],N=Object(a.useState)(!1),L=Object(l.a)(N,2),k=L[0],U=L[1],C=Object(h.jsxs)("div",{children:[k?Object(h.jsx)(b.W,{className:"remix-icon-loading remix-icon-spin remix-icon",size:24}):Object(h.jsx)(b.a,{size:24}),Object(h.jsx)("div",{style:{marginTop:8},children:"Upload"})]});return Object(h.jsxs)(j.a,{className:"hp-border-color-black-40",children:[Object(h.jsxs)(i.a,{children:[Object(h.jsx)(s.a,{className:"hp-mb-16",span:24,children:Object(h.jsxs)(i.a,{children:[Object(h.jsxs)(s.a,{lg:12,span:20,children:[Object(h.jsx)("h4",{children:"Avatar"}),Object(h.jsx)("p",{className:"hp-p1-body",children:"Click to upload user's avatar, and validate size and format of picture with beforeUpload."})]}),Object(h.jsx)(s.a,{lg:12,span:4,className:"hp-text-right",children:Object(h.jsx)(u.a,{onClick:function(){setTimeout((function(){return g(!x)}),100),c(!t)},type:"text",icon:Object(h.jsx)(b.w,{className:"hp-text-color-black-80"})})})]})}),Object(h.jsx)(s.a,{span:24,children:Object(h.jsx)(m.a,{name:"avatar",listType:"picture-card",className:"avatar-uploader",showUploadList:!1,action:"https://www.mocky.io/v2/5cc8019d300000980a055e76",beforeUpload:function(e){var n="image/jpeg"===e.type||"image/png"===e.type;n||d.b.error("You can only upload JPG/PNG file!");var t=e.size/1024/1024<2;return t||d.b.error("Image must smaller than 2MB!"),n&&t},onChange:function(e){"uploading"!==e.file.status?"done"===e.file.status&&function(e,n){var t=new FileReader;t.addEventListener("load",(function(){return n(t.result)})),t.readAsDataURL(e)}(e.file.originFileObj,(function(e){return y(e)}),U(!1)):U(!0)},children:v?Object(h.jsx)("img",{src:v,alt:"avatar",style:{width:"100%"}}):C})})]}),t&&Object(h.jsx)(o.a,{language:"javascript",className:"show-code hp-mt-24 ".concat(x&&"show-code-active"),style:p.a,children:'\nimport React, { useState } from "react";\n\nimport { Upload, message } from "antd";\nimport { RiLoaderLine, RiAddLine } from "react-icons/ri";\n\nfunction getBase64(img, callback) {\n  const reader = new FileReader();\n  reader.addEventListener("load", () => callback(reader.result));\n  reader.readAsDataURL(img);\n}\n\nfunction beforeUpload(file) {\n  const isJpgOrPng = file.type === "image/jpeg" || file.type === "image/png";\n  if (!isJpgOrPng) {\n    message.error("You can only upload JPG/PNG file!");\n  }\n  const isLt2M = file.size / 1024 / 1024 < 2;\n  if (!isLt2M) {\n    message.error("Image must smaller than 2MB!");\n  }\n  return isJpgOrPng && isLt2M;\n}\n\nconst [imageUrl, setImageUrl] = useState();\nconst [loading, setLoading] = useState(false);\n\nconst handleChange = (info) => {\n  if (info.file.status === "uploading") {\n    setLoading(true);\n    return;\n  }\n  \n  if (info.file.status === "done") {\n    getBase64(\n      info.file.originFileObj,\n      (imageUrl) => setImageUrl(imageUrl),\n      setLoading(false)\n    );\n  }\n};\n\nconst uploadButton = (\n  <div>\n    {loading ? (\n      <RiLoaderLine\n        className="remix-icon-loading remix-icon-spin remix-icon"\n        size={24}\n      />\n    ) : (\n      <RiAddLine size={24} />\n    )}\n    <div style={{ marginTop: 8 }}>Upload</div>\n  </div>\n);\n\nreturn (\n  <Upload\n    name="avatar"\n    listType="picture-card"\n    className="avatar-uploader"\n    showUploadList={false}\n    action="https://www.mocky.io/v2/5cc8019d300000980a055e76"\n    beforeUpload={beforeUpload}\n    onChange={handleChange}\n  >\n    {imageUrl ? (\n      <img src={imageUrl} alt="avatar" style={{ width: "100%" }} />\n    ) : (\n      uploadButton\n    )}\n  </Upload>\n);\n'})]})}var y=t(45),N=t(79),L=t(999);function k(){var e=Object(a.useState)(!1),n=Object(l.a)(e,2),t=n[0],c=n[1],r=Object(a.useState)(!1),d=Object(l.a)(r,2),f=d[0],x=d[1];function g(e){return new Promise((function(n,t){var a=new FileReader;a.readAsDataURL(e),a.onload=function(){return n(a.result)},a.onerror=function(e){return t(e)}}))}var w=Object(a.useState)(!1),v=Object(l.a)(w,2),k=v[0],U=v[1],C=Object(a.useState)(),R=Object(l.a)(C,2),S=R[0],P=R[1],T=Object(a.useState)(),B=Object(l.a)(T,2),F=B[0],z=B[1],D=Object(a.useState)([{uid:"-1",name:"image.png",status:"done",url:O.a},{uid:"-2",name:"image.png",status:"done",url:O.a},{uid:"-3",name:"image.png",status:"done",url:O.a},{uid:"-4",name:"image.png",status:"done",url:O.a},{uid:"-5",name:"image.png",status:"error"}]),I=Object(l.a)(D,2),A=I[0],M=I[1],J=function(){var e=Object(N.a)(Object(y.a)().mark((function e(n){return Object(y.a)().wrap((function(e){for(;;)switch(e.prev=e.next){case 0:if(n.url||n.preview){e.next=4;break}return e.next=3,g(n.originFileObj);case 3:n.preview=e.sent;case 4:P(n.url||n.preview),U(!0),z(n.name||n.url.substring(n.url.lastIndexOf("/")+1));case 7:case"end":return e.stop()}}),e)})));return function(n){return e.apply(this,arguments)}}(),G=Object(h.jsxs)("div",{children:[Object(h.jsx)(b.a,{size:24}),Object(h.jsx)("div",{style:{marginTop:8},children:"Upload"})]});return Object(h.jsxs)(j.a,{className:"hp-border-color-black-40",children:[Object(h.jsxs)(i.a,{children:[Object(h.jsx)(s.a,{className:"hp-mb-16",span:24,children:Object(h.jsxs)(i.a,{children:[Object(h.jsxs)(s.a,{lg:12,span:20,children:[Object(h.jsx)("h4",{children:"Pictures Wall"}),Object(h.jsx)("p",{className:"hp-p1-body",children:"After users upload picture, the thumbnail will be shown in list. The upload button will disappear when count meets limitation."})]}),Object(h.jsx)(s.a,{lg:12,span:4,className:"hp-text-right",children:Object(h.jsx)(u.a,{onClick:function(){setTimeout((function(){return x(!f)}),100),c(!t)},type:"text",icon:Object(h.jsx)(b.w,{className:"hp-text-color-black-80"})})})]})}),Object(h.jsxs)(s.a,{span:24,children:[Object(h.jsx)(m.a,{action:"https://www.mocky.io/v2/5cc8019d300000980a055e76",listType:"picture-card",fileList:A,onPreview:J,onChange:function(e){M(e.fileList)},children:A.length>=8?null:G}),Object(h.jsx)(L.a,{visible:k,title:F,footer:null,onCancel:function(){return U(!1)},children:Object(h.jsx)("img",{alt:"example",style:{width:"100%"},src:S})})]})]}),t&&Object(h.jsx)(o.a,{language:"javascript",className:"show-code hp-mt-24 ".concat(f&&"show-code-active"),style:p.a,children:'\nimport React, { useState } from "react";\n\nimport { Upload, Modal } from "antd";\nimport { RiAddLine } from "react-icons/ri";\n\nimport images from "../../../../assets/images/memoji/memoji-1.png";\n\nfunction getBase64(file) {\n  return new Promise((resolve, reject) => {\n    const reader = new FileReader();\n    reader.readAsDataURL(file);\n    reader.onload = () => resolve(reader.result);\n    reader.onerror = (error) => reject(error);\n  });\n}\n\nconst [previewVisible, setPreviewVisible] = useState(false);\nconst [previewImage, setPreviewImage] = useState();\nconst [previewTitle, setPreviewTitle] = useState();\nconst [fileList, setFileList] = useState([\n  {\n    uid: "-1",\n    name: "image.png",\n    status: "done",\n    url: images,\n  },\n  {\n    uid: "-2",\n    name: "image.png",\n    status: "done",\n    url: images,\n  },\n  {\n    uid: "-3",\n    name: "image.png",\n    status: "done",\n    url: images,\n  },\n  {\n    uid: "-4",\n    name: "image.png",\n    status: "done",\n    url: images,\n  },\n  {\n    uid: "-5",\n    name: "image.png",\n    status: "error",\n  },\n]);\n\nconst handleCancel = () => setPreviewVisible(false);\n\nconst handlePreview = async (file) => {\n  if (!file.url && !file.preview) {\n    file.preview = await getBase64(file.originFileObj);\n  }\n\n  setPreviewImage(file.url || file.preview);\n  setPreviewVisible(true);\n  setPreviewTitle(\n    file.name || file.url.substring(file.url.lastIndexOf("/") + 1)\n  );\n};\n\nconst handleChange = (e) => {\n  setFileList(e.fileList);\n};\n\nconst uploadButton = (\n  <div>\n    <RiAddLine size={24} />\n    <div style={{ marginTop: 8 }}>Upload</div>\n  </div>\n);\n\nreturn (\n  <>\n    <Upload\n      action="https://www.mocky.io/v2/5cc8019d300000980a055e76"\n      listType="picture-card"\n      fileList={fileList}\n      onPreview={handlePreview}\n      onChange={handleChange}\n    >\n      {fileList.length >= 8 ? null : uploadButton}\n    </Upload>\n\n    <Modal\n      visible={previewVisible}\n      title={previewTitle}\n      footer={null}\n      onCancel={handleCancel}\n    >\n      <img alt="example" style={{ width: "100%" }} src={previewImage} />\n    </Modal>\n  </>       \n);\n'})]})}var U=m.a.Dragger;function C(){var e=Object(a.useState)(!1),n=Object(l.a)(e,2),t=n[0],c=n[1],m=Object(a.useState)(!1),f=Object(l.a)(m,2),x=f[0],g=f[1];var O={name:"file",multiple:!0,action:"https://www.mocky.io/v2/5cc8019d300000980a055e76",onChange:function(e){var n=e.file.status;"done"===n?d.b.success({content:"".concat(e.file.name," file uploaded successfully."),icon:Object(h.jsx)(b.r,{className:"remix-icon"})}):"error"===n&&d.b.error({content:"".concat(e.file.name," file upload failed."),icon:Object(h.jsx)(b.t,{className:"remix-icon"})})},onDrop:function(){}};return Object(h.jsxs)(j.a,{className:"hp-border-color-black-40",children:[Object(h.jsxs)(i.a,{children:[Object(h.jsx)(s.a,{className:"hp-mb-16",span:24,children:Object(h.jsxs)(i.a,{children:[Object(h.jsxs)(s.a,{lg:12,span:20,children:[Object(h.jsx)("h4",{children:"Drag and Drop"}),Object(h.jsx)("p",{className:"hp-p1-body",children:"You can drag files to a specific area, to upload. Alternatively, you can also upload by selecting."})]}),Object(h.jsx)(s.a,{lg:12,span:4,className:"hp-text-right",children:Object(h.jsx)(u.a,{onClick:function(){setTimeout((function(){return g(!x)}),100),c(!t)},type:"text",icon:Object(h.jsx)(b.w,{className:"hp-text-color-black-80"})})})]})}),Object(h.jsx)(s.a,{span:24,className:"hp-upload-dragger-col",children:Object(h.jsxs)(U,Object(r.a)(Object(r.a)({},O),{},{children:[Object(h.jsx)("p",{className:"ant-upload-drag-icon",children:Object(h.jsx)(b.Gb,{className:"remix-icon"})}),Object(h.jsx)("p",{className:"ant-upload-text",children:"Click or drag file to this area to upload"}),Object(h.jsx)("p",{className:"ant-upload-hint",children:"Support for a single or bulk upload. Strictly prohibit from uploading company data or other band files"})]}))})]}),t&&Object(h.jsx)(o.a,{language:"javascript",className:"show-code hp-mt-24 ".concat(x&&"show-code-active"),style:p.a,children:'\nimport React from "react";\n\nimport { Upload, message } from "antd";\nimport {\n  RiUploadCloud2Line,\n  RiCheckboxCircleLine,\n  RiCloseCircleLine,\n} from "react-icons/ri";\n\nconst { Dragger } = Upload;\n\nconst props = {\n  name: "file",\n  multiple: true,\n  action: "https://www.mocky.io/v2/5cc8019d300000980a055e76",\n  onChange(info) {\n    const { status } = info.file;\n    if (status !== "uploading") {\n    }\n    if (status === "done") {\n      message.success({\n        content: info.file.name + \' file uploaded successfully.\',\n        icon: <RiCheckboxCircleLine className="remix-icon" />,\n      });\n    } else if (status === "error") {\n      message.error({\n        content: info.file.name + \' file upload failed.\',\n        icon: <RiCloseCircleLine className="remix-icon" />,\n      });\n    }\n  },\n  onDrop() {},\n};\n\nreturn (\n  <Dragger {...props}>\n    <p className="ant-upload-drag-icon">\n      <RiUploadCloud2Line className="remix-icon" />\n    </p>\n\n    <p className="ant-upload-text">\n      Click or drag file to this area to upload\n    </p>\n\n    <p className="ant-upload-hint">\n      Support for a single or bulk upload. Strictly prohibit from\n      uploading company data or other band files\n    </p>\n  </Dragger>\n);\n'})]})}function R(){return Object(h.jsxs)(i.a,{gutter:[32,32],className:"hp-mb-32",children:[Object(h.jsx)(s.a,{span:24,children:Object(h.jsx)(c.a,{title:"Upload",desc:"Upload file by selecting or dragging.",breadcrumb:[{title:"Components",link:"/components/components-page"},{title:"Data Entry"},{title:"Upload"}]})}),Object(h.jsx)(s.a,{span:24,children:Object(h.jsx)(f,{})}),Object(h.jsx)(s.a,{span:24,children:Object(h.jsx)(g,{})}),Object(h.jsx)(s.a,{span:24,children:Object(h.jsx)(w,{})}),Object(h.jsx)(s.a,{span:24,children:Object(h.jsx)(v,{})}),Object(h.jsx)(s.a,{span:24,children:Object(h.jsx)(k,{})}),Object(h.jsx)(s.a,{span:24,children:Object(h.jsx)(C,{})})]})}},511:function(e,n,t){"use strict";t.d(n,"a",(function(){return l}));t(0);var a=t(28),i=t(48),s=t(76),c=t(513),r=t(2);function l(e){var n=e.title,t=e.breadcrumb,l=e.desc;return Object(r.jsxs)(i.a,{span:24,className:"hp-bg-black-bg hp-py-sm-32 hp-py-64 hp-px-sm-24 hp-px-md-48 hp-px-80 hp-overflow-hidden",style:{borderRadius:32},children:[Object(r.jsxs)("svg",{width:358,height:336,fill:"none",xmlns:"http://www.w3.org/2000/svg",className:"hp-position-absolute-bottom-right hp-rtl-scale-x-n1",children:[Object(r.jsx)("path",{d:"M730.404 135.471 369.675-6.641l88.802 164.001-243.179-98.8 246.364 263.281-329.128-126.619 114.698 166.726-241.68-62.446",stroke:"url(#a)",strokeWidth:40,strokeLinejoin:"bevel"}),Object(r.jsx)("defs",{children:Object(r.jsxs)("linearGradient",{id:"a",x1:315.467,y1:6.875,x2:397.957,y2:337.724,gradientUnits:"userSpaceOnUse",children:[Object(r.jsx)("stop",{stopColor:"#fff"}),Object(r.jsx)("stop",{offset:1,stopColor:"#fff",stopOpacity:0})]})})]}),Object(r.jsx)(s.a,{children:Object(r.jsx)(i.a,{sm:12,span:24,children:Object(r.jsxs)(s.a,{children:[n&&Object(r.jsx)(i.a,{span:24,children:Object(r.jsx)("h1",{className:"hp-mb-0 hp-text-color-black-0",children:n})}),t&&Object(r.jsx)(i.a,{span:24,children:Object(r.jsxs)(c.a,{className:"hp-d-flex hp-flex-wrap hp-mt-24",children:[Object(r.jsx)(c.a.Item,{children:Object(r.jsx)(a.b,{to:"/",className:"hp-text-color-black-0 hp-hover-text-color-primary-2",children:"Home"})}),t.map((function(e,n){return Object(r.jsx)(c.a.Item,{children:Object(r.jsx)(a.b,{to:e.link?e.link:"#",className:"hp-text-color-black-0".concat(e.link?" hp-hover-text-color-primary-2":""),children:e.title})},n)}))]})}),l&&Object(r.jsx)(i.a,{span:24,children:Object(r.jsx)("p",{className:"h5 hp-mb-0 hp-mt-24 hp-text-color-black-0",children:l})})]})})})]})}},514:function(e,n,t){"use strict";n.a=t.p+"static/media/memoji-1.afa5922f.png"}}]);
//# sourceMappingURL=53.8b001c26.chunk.js.map