{"version":3,"sources":["view/components/data-entry/datepicker/basic.jsx","view/components/data-entry/datepicker/code.js","view/components/data-entry/datepicker/rangePicker.jsx","view/components/data-entry/datepicker/switchable.jsx","view/components/data-entry/datepicker/dateFormat.jsx","view/components/data-entry/datepicker/datePickerSizes.jsx","view/components/data-entry/datepicker/disabled.jsx","view/components/data-entry/datepicker/customizedDateRender.jsx","view/components/data-entry/datepicker/extraFooter.jsx","view/components/data-entry/datepicker/index.jsx","layout/components/content/page-content/index.jsx"],"names":["BasicDatepicker","onChange","value","console","log","useState","checkedCode","setCheckedCode","codeClass","setCodeClass","className","lg","span","onClick","setTimeout","type","icon","suffixIcon","picker","language","style","monoBlue","RangePicker","DatePicker","RangePickerItem","Option","Select","SwitchablePicker","PickerWithType","setType","size","DateFormat","dateFormat","monthFormat","dateFormatList","defaultValue","moment","format","DatePickerSizes","setSize","Group","e","target","Button","DatePickerDisabled","disabled","DatePickerCustomizedDateRender","dateRender","current","date","border","borderRadius","DatePickerExtraFooter","renderExtraFooter","showTime","Datepicker","gutter","title","desc","breadcrumb","link","PageContent","props","width","height","fill","xmlns","d","stroke","strokeWidth","strokeLinejoin","id","x1","y1","x2","y2","gradientUnits","stopColor","offset","stopOpacity","sm","Item","to","map","item","index"],"mappings":"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","file":"static/js/71.b58be83e.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\n\r\nimport SyntaxHighlighter from \"react-syntax-highlighter\";\r\nimport { monoBlue } from \"react-syntax-highlighter/dist/esm/styles/hljs\";\r\nimport { basic } from \"./code.js\";\r\n\r\nimport { Card, Row, Col, DatePicker, Button } from \"antd\";\r\nimport { RiCalendarLine, RiCodeSSlashLine } from \"react-icons/ri\";\r\n\r\nexport default function BasicDatepicker() {\r\n  function onChange(value) {\r\n    console.log(\"changed\", value);\r\n  }\r\n\r\n  const [checkedCode, setCheckedCode] = useState(false);\r\n  const [codeClass, setCodeClass] = useState(false);\r\n\r\n  function toggleChecked() {\r\n    setTimeout(() => setCodeClass(!codeClass), 100);\r\n    setCheckedCode(!checkedCode);\r\n  }\r\n\r\n  return (\r\n    <Card className=\"hp-border-color-black-40\">\r\n      <Row>\r\n        <Col className=\"hp-mb-16\" lg={12} span={20}>\r\n          <h4>Basic</h4>\r\n          <p className=\"hp-p1-body\">\r\n            Basic use case. Users can select or input a date in panel.\r\n          </p>\r\n        </Col>\r\n\r\n        <Col lg={12} span={4} className=\"hp-text-right\">\r\n          <Button\r\n            onClick={toggleChecked}\r\n            type=\"text\"\r\n            icon={<RiCodeSSlashLine className=\"hp-text-color-black-80\" />}\r\n          />\r\n        </Col>\r\n\r\n        <Col span={24}>\r\n          <DatePicker\r\n            className=\"hp-mr-16 hp-mb-xl-16\"\r\n            onChange={onChange}\r\n            suffixIcon={\r\n              <RiCalendarLine className=\"remix-icon\" />\r\n            }\r\n          />\r\n          <DatePicker\r\n            className=\"hp-mr-16 hp-mb-xl-16\"\r\n            onChange={onChange}\r\n            picker=\"week\"\r\n            suffixIcon={\r\n              <RiCalendarLine className=\"remix-icon\" />\r\n            }\r\n          />\r\n          <DatePicker\r\n            className=\"hp-mr-16 hp-mb-xl-16\"\r\n            onChange={onChange}\r\n            picker=\"month\"\r\n            suffixIcon={\r\n              <RiCalendarLine className=\"remix-icon\" />\r\n            }\r\n          />\r\n          <DatePicker\r\n            className=\"hp-mr-16 hp-mb-xl-16\"\r\n            onChange={onChange}\r\n            picker=\"quarter\"\r\n            suffixIcon={\r\n              <RiCalendarLine className=\"remix-icon\" />\r\n            }\r\n          />\r\n          <DatePicker\r\n            className=\"hp-mr-16 hp-mb-xl-16\"\r\n            onChange={onChange}\r\n            picker=\"year\"\r\n            suffixIcon={\r\n              <RiCalendarLine className=\"remix-icon\" />\r\n            }\r\n          />\r\n        </Col>\r\n      </Row>\r\n\r\n      {checkedCode && (\r\n        <SyntaxHighlighter\r\n          language=\"javascript\"\r\n          className={`show-code hp-mt-24 ${codeClass && \"show-code-active\"}`}\r\n          style={monoBlue}\r\n        >\r\n          {basic}\r\n        </SyntaxHighlighter>\r\n      )}\r\n    </Card>\r\n  );\r\n}\r\n","export const basic = `\r\nimport { DatePicker } from \"antd\";\r\nimport { RiCalendarLine } from \"react-icons/ri\";\r\n\r\nfunction onChange(value) {\r\n  console.log(\"changed\", value);\r\n}\r\n  \r\nreturn (\r\n  <>\r\n    <DatePicker\r\n      onChange={onChange}\r\n      suffixIcon= {<RiCalendarLine className=\"remix-icon hp-text-color-black-100\" />}\r\n    />\r\n\r\n    <DatePicker\r\n      onChange={onChange}\r\n      picker=\"week\"\r\n      suffixIcon= {<RiCalendarLine className=\"remix-icon hp-text-color-black-100\" />}\r\n    />\r\n\r\n    <DatePicker\r\n      onChange={onChange}\r\n      picker=\"month\"\r\n      suffixIcon= {<RiCalendarLine className=\"remix-icon hp-text-color-black-100\" />}\r\n    />\r\n\r\n    <DatePicker\r\n      onChange={onChange}\r\n      picker=\"quarter\"\r\n      suffixIcon= {<RiCalendarLine className=\"remix-icon hp-text-color-black-100\" />}\r\n    />\r\n\r\n    <DatePicker\r\n      onChange={onChange}\r\n      picker=\"year\"\r\n      suffixIcon= {<RiCalendarLine className=\"remix-icon hp-text-color-black-100\" />}\r\n    />\r\n  </>\r\n);\r\n`;\r\n\r\nexport const datarender = `\r\nimport { DatePicker, Radio, Space, Button } from \"antd\";\r\n\r\nconst { RangePicker } = DatePicker;\r\n\r\nreturn (\r\n  <>\r\n    <DatePicker\r\n      dateRender={(current) => {\r\n        const style = {};\r\n        if (current.date() === 1) {\r\n          style.border = \"1px solid #1890ff\";\r\n          style.borderRadius = \"50%\";\r\n        }\r\n        return (\r\n          <div className=\"ant-picker-cell-inner\" style={style}>\r\n            {current.date()}\r\n          </div>\r\n        );\r\n      }}\r\n    />\r\n\r\n    <RangePicker\r\n      dateRender={(current) => {\r\n        const style = {};\r\n        if (current.date() === 1) {\r\n          style.border = \"1px solid #1890ff\";\r\n          style.borderRadius = \"50%\";\r\n        }\r\n        return (\r\n          <div className=\"ant-picker-cell-inner\" style={style}>\r\n            {current.date()}\r\n          </div>\r\n        );\r\n      }}\r\n    />\r\n  </>\r\n);\r\n`;\r\n\r\nexport const dateformat = `\r\nimport { DatePicker, TimePicker, Select } from \"antd\";\r\nimport moment from \"moment\";\r\n\r\nconst { RangePicker } = DatePicker;\r\n\r\nconst dateFormat = \"YYYY/MM/DD\";\r\nconst monthFormat = \"YYYY/MM\";\r\n\r\nconst dateFormatList = [\"DD/MM/YYYY\", \"DD/MM/YY\"];\r\n\r\nconst customFormat = (value) => \"custom format: \" + value.format(dateFormat);\r\n\r\nreturn (\r\n  <>\r\n    <DatePicker\r\n      defaultValue={moment(\"2015/01/01\", dateFormat)}\r\n      format={dateFormat}\r\n    />\r\n\r\n    <DatePicker\r\n      defaultValue={moment(\"01/01/2015\", dateFormatList[0])}\r\n      format={dateFormatList}\r\n    />\r\n\r\n    <DatePicker\r\n      defaultValue={moment(\"2015/01\", monthFormat)}\r\n      format={monthFormat}\r\n      picker=\"month\"\r\n    />\r\n\r\n    <RangePicker\r\n      defaultValue={[\r\n        moment(\"2015/01/01\", dateFormat),\r\n        moment(\"2015/01/01\", dateFormat),\r\n      ]}\r\n      format={dateFormat}\r\n    />\r\n    \r\n    <DatePicker\r\n      defaultValue={moment(\"2015/01/01\", dateFormat)}\r\n      format={customFormat}\r\n    />\r\n  </>\r\n);\r\n`;\r\n\r\nexport const sizes = `\r\nimport React, { useState } from \"react\";\r\n\r\nimport { DatePicker, Radio } from \"antd\";\r\n\r\nconst { RangePicker } = DatePicker;\r\n\r\nconst [size, setSize] = useState(\"default\");\r\n\r\nconst handleSizeChange = (e) => {\r\n  setSize(e.target.value);\r\n};\r\n\r\nreturn (\r\n  <>\r\n    <Radio.Group value={size} onChange={handleSizeChange} className=\"hp-mb-16\">\r\n      <Radio.Button value=\"large\">Large</Radio.Button>\r\n      <Radio.Button value=\"default\">Default</Radio.Button>\r\n      <Radio.Button value=\"small\">Small</Radio.Button>\r\n    </Radio.Group>\r\n\r\n    <DatePicker className=\"hp-mb-16 hp-mr-16\" size={size} />\r\n\r\n    <DatePicker className=\"hp-mb-16 hp-mr-16\" size={size} picker=\"month\" />\r\n\r\n    <RangePicker className=\"hp-mb-16 hp-mr-16\" size={size} />\r\n\r\n    <DatePicker className=\"hp-mb-16 hp-mr-16\" size={size} picker=\"week\" />\r\n  </>\r\n);\r\n`;\r\n\r\nexport const disabled = `\r\nimport { DatePicker, Radio } from \"antd\";\r\nimport moment from \"moment\";\r\n\r\nconst { RangePicker } = DatePicker;\r\n\r\nconst dateFormat = \"YYYY-MM-DD\";\r\n\r\nreturn (\r\n  <>\r\n    <DatePicker\r\n      defaultValue={moment(\"2015-06-06\", dateFormat)}\r\n      disabled\r\n    />\r\n\r\n    <DatePicker\r\n      picker=\"month\"\r\n      defaultValue={moment(\"2015-06\", \"YYYY-MM\")}\r\n      disabled\r\n    />\r\n\r\n    <RangePicker\r\n      defaultValue={[\r\n        moment(\"2015-06-06\", dateFormat),\r\n        moment(\"2015-06-06\", dateFormat),\r\n      ]}\r\n      disabled\r\n    />\r\n\r\n    <RangePicker\r\n      defaultValue={[\r\n        moment(\"2019-09-03\", dateFormat),\r\n        moment(\"2019-11-22\", dateFormat),\r\n      ]}\r\n      disabled={[false, true]}\r\n    />\r\n  </>\r\n);\r\n`;\r\n\r\nexport const extrafooter = `\r\nimport { DatePicker, Radio } from \"antd\";\r\n\r\nconst { RangePicker } = DatePicker;\r\n\r\nreturn (\r\n  <>\r\n    <DatePicker\r\n      renderExtraFooter={() => \"extra footer\"}\r\n    />\r\n\r\n    <DatePicker\r\n      renderExtraFooter={() => \"extra footer\"}\r\n      showTime\r\n    />\r\n\r\n    <RangePicker\r\n      renderExtraFooter={() => \"extra footer\"}\r\n    />\r\n\r\n    <RangePicker\r\n      renderExtraFooter={() => \"extra footer\"}\r\n      showTime\r\n    />\r\n\r\n    <DatePicker\r\n      renderExtraFooter={() => \"extra footer\"}\r\n      picker=\"month\"\r\n    />\r\n  </>\r\n);\r\n`;\r\n\r\nexport const rangepicker = `\r\nimport { DatePicker } from \"antd\";\r\nimport { RiCalendarLine } from \"react-icons/ri\";\r\n\r\nconst { RangePicker } = DatePicker;\r\n\r\nfunction onChange(value) {\r\n  console.log(\"changed\", value);\r\n}\r\n\r\nreturn (\r\n  <>\r\n    <RangePicker\r\n      onChange={onChange}\r\n      suffixIcon= {<RiCalendarLine className=\"remix-icon hp-text-color-black-100\" />}\r\n    />\r\n\r\n    <RangePicker\r\n      onChange={onChange}\r\n      picker=\"week\"\r\n      suffixIcon={<RiCalendarLine className=\"remix-icon hp-text-color-black-100\" />}\r\n    />\r\n\r\n    <RangePicker\r\n      onChange={onChange}\r\n      picker=\"month\"\r\n      suffixIcon={<RiCalendarLine className=\"remix-icon hp-text-color-black-100\" />}\r\n    />\r\n\r\n    <RangePicker\r\n      onChange={onChange}\r\n      picker=\"quarter\"\r\n      suffixIcon={<RiCalendarLine className=\"remix-icon hp-text-color-black-100\" />}\r\n    />\r\n\r\n    <RangePicker\r\n      onChange={onChange}\r\n      picker=\"year\"\r\n      suffixIcon={<RiCalendarLine className=\"remix-icon hp-text-color-black-100\" />}\r\n    />\r\n  </>\r\n);\r\n`;\r\n\r\nexport const switchable = `\r\nimport React, {useState} from \"react\";\r\n\r\nimport { DatePicker, TimePicker, Space, Select } from \"antd\";\r\n\r\nconst { Option } = Select;\r\n\r\nfunction PickerWithType({ type, onChange }) {\r\n  if (type === \"time\") return <TimePicker onChange={onChange} />;\r\n  if (type === \"date\") return <DatePicker onChange={onChange} />;\r\n  return <DatePicker picker={type} onChange={onChange} />;\r\n}\r\n\r\nconst [type, setType] = useState(\"time\");\r\n\r\nreturn (\r\n  <Space size={16}>\r\n    <Select value={type} onChange={setType}>\r\n      <Option value=\"time\">Time</Option>\r\n      <Option value=\"date\">Date</Option>\r\n      <Option value=\"week\">Week</Option>\r\n      <Option value=\"month\">Month</Option>\r\n      <Option value=\"quarter\">Quarter</Option>\r\n      <Option value=\"year\">Year</Option>\r\n    </Select>\r\n    \r\n    <PickerWithType\r\n      type={type}\r\n      onChange={(value) => console.log(value)}\r\n    />\r\n    \r\n  </Space>\r\n);\r\n`;\r\n","import React, { useState } from \"react\";\r\n\r\nimport SyntaxHighlighter from \"react-syntax-highlighter\";\r\nimport { monoBlue } from \"react-syntax-highlighter/dist/esm/styles/hljs\";\r\nimport { rangepicker } from \"./code.js\";\r\n\r\nimport { Card, Row, Col, DatePicker, Button } from \"antd\";\r\nimport { RiCalendarLine, RiCodeSSlashLine } from \"react-icons/ri\";\r\n\r\nconst { RangePicker } = DatePicker;\r\n\r\nexport default function RangePickerItem() {\r\n  const [checkedCode, setCheckedCode] = useState(false);\r\n  const [codeClass, setCodeClass] = useState(false);\r\n\r\n  function toggleChecked() {\r\n    setTimeout(() => setCodeClass(!codeClass), 100);\r\n    setCheckedCode(!checkedCode);\r\n  }\r\n\r\n  function onChange(value) {\r\n    console.log(\"changed\", value);\r\n  }\r\n\r\n  return (\r\n    <Card className=\"hp-border-color-black-40\">\r\n      <Row>\r\n        <Col className=\"hp-mb-16\" lg={12} span={20}>\r\n          <h4>Range Picker</h4>\r\n          <p className=\"hp-p1-body\">Set range picker type by picker prop.</p>\r\n        </Col>\r\n\r\n        <Col lg={12} span={4} className=\"hp-text-right\">\r\n          <Button\r\n            onClick={toggleChecked}\r\n            type=\"text\"\r\n            icon={<RiCodeSSlashLine className=\"hp-text-color-black-80\" />}\r\n          />\r\n        </Col>\r\n\r\n        <Col span={24}>\r\n          <RangePicker\r\n            className=\"hp-mb-16 hp-mr-16\"\r\n            onChange={onChange}\r\n            suffixIcon={\r\n              <RiCalendarLine className=\"remix-icon\" />\r\n            }\r\n          />\r\n          <RangePicker\r\n            className=\"hp-mb-16 hp-mr-16\"\r\n            onChange={onChange}\r\n            picker=\"week\"\r\n            suffixIcon={\r\n              <RiCalendarLine className=\"remix-icon\" />\r\n            }\r\n          />\r\n          <RangePicker\r\n            className=\"hp-mb-16 hp-mr-16\"\r\n            onChange={onChange}\r\n            picker=\"month\"\r\n            suffixIcon={\r\n              <RiCalendarLine className=\"remix-icon\" />\r\n            }\r\n          />\r\n          <RangePicker\r\n            className=\"hp-mb-16 hp-mr-16\"\r\n            onChange={onChange}\r\n            picker=\"quarter\"\r\n            suffixIcon={\r\n              <RiCalendarLine className=\"remix-icon\" />\r\n            }\r\n          />\r\n          <RangePicker\r\n            className=\"hp-mb-16 hp-mr-16\"\r\n            onChange={onChange}\r\n            picker=\"year\"\r\n            suffixIcon={\r\n              <RiCalendarLine className=\"remix-icon\" />\r\n            }\r\n          />\r\n        </Col>\r\n      </Row>\r\n\r\n      {checkedCode && (\r\n        <SyntaxHighlighter\r\n          language=\"javascript\"\r\n          className={`show-code hp-mt-24 ${codeClass && \"show-code-active\"}`}\r\n          style={monoBlue}\r\n        >\r\n          {rangepicker}\r\n        </SyntaxHighlighter>\r\n      )}\r\n    </Card>\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\r\n\r\nimport SyntaxHighlighter from \"react-syntax-highlighter\";\r\nimport { monoBlue } from \"react-syntax-highlighter/dist/esm/styles/hljs\";\r\nimport { switchable } from \"./code.js\";\r\n\r\nimport {\r\n  Card,\r\n  Row,\r\n  Col,\r\n  DatePicker,\r\n  TimePicker,\r\n  Space,\r\n  Select,\r\n  Button,\r\n} from \"antd\";\r\nimport { RiCodeSSlashLine } from \"react-icons/ri\";\r\n\r\nconst { Option } = Select;\r\n\r\nexport default function SwitchablePicker() {\r\n  const [checkedCode, setCheckedCode] = useState(false);\r\n  const [codeClass, setCodeClass] = useState(false);\r\n\r\n  function toggleChecked() {\r\n    setTimeout(() => setCodeClass(!codeClass), 100);\r\n    setCheckedCode(!checkedCode);\r\n  }\r\n\r\n  function PickerWithType({ type, onChange }) {\r\n    if (type === \"time\") return <TimePicker onChange={onChange} />;\r\n    if (type === \"date\") return <DatePicker onChange={onChange} />;\r\n    return <DatePicker picker={type} onChange={onChange} />;\r\n  }\r\n\r\n  const [type, setType] = useState(\"time\");\r\n\r\n  return (\r\n    <Card className=\"hp-border-color-black-40\">\r\n      <Row>\r\n        <Col className=\"hp-mb-16\" lg={12} span={20}>\r\n          <h4>Switchable Picker</h4>\r\n          <p className=\"hp-p1-body\">\r\n            Switch in different types of pickers by Select.\r\n          </p>\r\n        </Col>\r\n\r\n        <Col lg={12} span={4} className=\"hp-text-right\">\r\n          <Button\r\n            onClick={toggleChecked}\r\n            type=\"text\"\r\n            icon={<RiCodeSSlashLine className=\"hp-text-color-black-80\" />}\r\n          />\r\n        </Col>\r\n\r\n        <Col span={12}>\r\n          <Space size={16}>\r\n            <Select value={type} onChange={setType}>\r\n              <Option value=\"time\">Time</Option>\r\n              <Option value=\"date\">Date</Option>\r\n              <Option value=\"week\">Week</Option>\r\n              <Option value=\"month\">Month</Option>\r\n              <Option value=\"quarter\">Quarter</Option>\r\n              <Option value=\"year\">Year</Option>\r\n            </Select>\r\n            <PickerWithType\r\n              type={type}\r\n              onChange={(value) => console.log(value)}\r\n            />\r\n          </Space>\r\n        </Col>\r\n      </Row>\r\n\r\n      {checkedCode && (\r\n        <SyntaxHighlighter\r\n          language=\"javascript\"\r\n          className={`show-code hp-mt-24 ${codeClass && \"show-code-active\"}`}\r\n          style={monoBlue}\r\n        >\r\n          {switchable}\r\n        </SyntaxHighlighter>\r\n      )}\r\n    </Card>\r\n  );\r\n}","import React, { useState } from \"react\";\r\n\r\nimport SyntaxHighlighter from \"react-syntax-highlighter\";\r\nimport { monoBlue } from \"react-syntax-highlighter/dist/esm/styles/hljs\";\r\nimport { dateformat } from \"./code.js\";\r\n\r\nimport { Card, Row, Col, DatePicker, Button } from \"antd\";\r\nimport { RiCodeSSlashLine } from \"react-icons/ri\";\r\nimport moment from \"moment\";\r\n\r\nconst { RangePicker } = DatePicker;\r\n\r\nexport default function DateFormat() {\r\n  const [checkedCode, setCheckedCode] = useState(false);\r\n  const [codeClass, setCodeClass] = useState(false);\r\n\r\n  function toggleChecked() {\r\n    setTimeout(() => setCodeClass(!codeClass), 100);\r\n    setCheckedCode(!checkedCode);\r\n  }\r\n\r\n  const dateFormat = \"YYYY/MM/DD\";\r\n  const monthFormat = \"YYYY/MM\";\r\n  const dateFormatList = [\"DD/MM/YYYY\", \"DD/MM/YY\"];\r\n\r\n  const customFormat = (value) => `custom format: ${value.format(dateFormat)}`;\r\n\r\n  return (\r\n    <Card className=\"hp-border-color-black-40\">\r\n      <Row>\r\n        <Col className=\"hp-mb-16\" lg={12} span={20}>\r\n          <h4>Date Format</h4>\r\n          <p className=\"hp-p1-body\">We can set the date format by format.</p>\r\n        </Col>\r\n\r\n        <Col lg={12} span={4} className=\"hp-text-right\">\r\n          <Button\r\n            onClick={toggleChecked}\r\n            type=\"text\"\r\n            icon={<RiCodeSSlashLine className=\"hp-text-color-black-80\" />}\r\n          />\r\n        </Col>\r\n\r\n        <Col span={24}>\r\n          <DatePicker\r\n            className=\"hp-mb-16 hp-mr-16\"\r\n            defaultValue={moment(\"2015/01/01\", dateFormat)}\r\n            format={dateFormat}\r\n          />\r\n          <DatePicker\r\n            className=\"hp-mb-16 hp-mr-16\"\r\n            defaultValue={moment(\"01/01/2015\", dateFormatList[0])}\r\n            format={dateFormatList}\r\n          />\r\n          <DatePicker\r\n            className=\"hp-mb-16 hp-mr-16\"\r\n            defaultValue={moment(\"2015/01\", monthFormat)}\r\n            format={monthFormat}\r\n            picker=\"month\"\r\n          />\r\n          <RangePicker\r\n            className=\"hp-mb-16 hp-mr-16\"\r\n            defaultValue={[\r\n              moment(\"2015/01/01\", dateFormat),\r\n              moment(\"2015/01/01\", dateFormat),\r\n            ]}\r\n            format={dateFormat}\r\n          />\r\n          <DatePicker\r\n            className=\"hp-mb-16 hp-mr-16\"\r\n            defaultValue={moment(\"2015/01/01\", dateFormat)}\r\n            format={customFormat}\r\n          />\r\n        </Col>\r\n      </Row>\r\n      \r\n      {checkedCode && (\r\n        <SyntaxHighlighter\r\n          language=\"javascript\"\r\n          className={`show-code hp-mt-24 ${codeClass && \"show-code-active\"}`}\r\n          style={monoBlue}\r\n        >\r\n          {dateformat}\r\n        </SyntaxHighlighter>\r\n      )}\r\n    </Card>\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\r\n\r\nimport SyntaxHighlighter from \"react-syntax-highlighter\";\r\nimport { monoBlue } from \"react-syntax-highlighter/dist/esm/styles/hljs\";\r\nimport { sizes } from \"./code.js\";\r\n\r\nimport { Card, Row, Col, DatePicker, Radio, Button } from \"antd\";\r\nimport { RiCodeSSlashLine } from \"react-icons/ri\";\r\n\r\nconst { RangePicker } = DatePicker;\r\n\r\nexport default function DatePickerSizes() {\r\n  const [checkedCode, setCheckedCode] = useState(false);\r\n  const [codeClass, setCodeClass] = useState(false);\r\n\r\n  function toggleChecked() {\r\n    setTimeout(() => setCodeClass(!codeClass), 100);\r\n    setCheckedCode(!checkedCode);\r\n  }\r\n\r\n  const [size, setSize] = useState(\"default\");\r\n\r\n  const handleSizeChange = (e) => {\r\n    setSize(e.target.value);\r\n  };\r\n\r\n  return (\r\n    <Card className=\"hp-border-color-black-40\">\r\n      <Row>\r\n        <Col className=\"hp-mb-16\" lg={12} span={20}>\r\n          <h4>Three Sizes</h4>\r\n          <p className=\"hp-p1-body\">\r\n            The input box comes in three sizes. default will be used if size is\r\n            omitted.\r\n          </p>\r\n        </Col>\r\n\r\n        <Col lg={12} span={4} className=\"hp-text-right\">\r\n          <Button\r\n            onClick={toggleChecked}\r\n            type=\"text\"\r\n            icon={<RiCodeSSlashLine className=\"hp-text-color-black-80\" />}\r\n          />\r\n        </Col>\r\n\r\n        <Col span={24}>\r\n          <Radio.Group\r\n            value={size}\r\n            onChange={handleSizeChange}\r\n            className=\"hp-mb-16\"\r\n          >\r\n            <Radio.Button value=\"large\">Large</Radio.Button>\r\n            <Radio.Button value=\"default\">Default</Radio.Button>\r\n            <Radio.Button value=\"small\">Small</Radio.Button>\r\n          </Radio.Group>\r\n\r\n          <br />\r\n\r\n          <DatePicker className=\"hp-mb-16 hp-mr-16\" size={size} />\r\n\r\n          <DatePicker\r\n            className=\"hp-mb-16 hp-mr-16\"\r\n            size={size}\r\n            picker=\"month\"\r\n          />\r\n\r\n          <RangePicker className=\"hp-mb-16 hp-mr-16\" size={size} />\r\n\r\n          <DatePicker className=\"hp-mb-16 hp-mr-16\" size={size} picker=\"week\" />\r\n        </Col>\r\n      </Row>\r\n\r\n      {checkedCode && (\r\n        <SyntaxHighlighter\r\n          language=\"javascript\"\r\n          className={`show-code hp-mt-24 ${codeClass && \"show-code-active\"}`}\r\n          style={monoBlue}\r\n        >\r\n          {sizes}\r\n        </SyntaxHighlighter>\r\n      )}\r\n    </Card>\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\r\n\r\nimport SyntaxHighlighter from \"react-syntax-highlighter\";\r\nimport { monoBlue } from \"react-syntax-highlighter/dist/esm/styles/hljs\";\r\nimport { disabled } from \"./code.js\";\r\n\r\nimport { Card, Row, Col, DatePicker, Button } from \"antd\";\r\nimport { RiCodeSSlashLine } from \"react-icons/ri\";\r\nimport moment from \"moment\";\r\n\r\nconst { RangePicker } = DatePicker;\r\n\r\nexport default function DatePickerDisabled() {\r\n  const [checkedCode, setCheckedCode] = useState(false);\r\n  const [codeClass, setCodeClass] = useState(false);\r\n\r\n  function toggleChecked() {\r\n    setTimeout(() => setCodeClass(!codeClass), 100);\r\n    setCheckedCode(!checkedCode);\r\n  }\r\n\r\n  const dateFormat = \"YYYY-MM-DD\";\r\n\r\n  return (\r\n    <Card className=\"hp-border-color-black-40\">\r\n      <Row>\r\n        <Col className=\"hp-mb-16\" lg={12} span={20}>\r\n          <h4>Disabled</h4>\r\n          <p className=\"hp-p1-body\">\r\n            A disabled state of the DatePicker. You can also set as array to\r\n            disable one of input.\r\n          </p>\r\n        </Col>\r\n\r\n        <Col lg={12} span={4} className=\"hp-text-right\">\r\n          <Button\r\n            onClick={toggleChecked}\r\n            type=\"text\"\r\n            icon={<RiCodeSSlashLine className=\"hp-text-color-black-80\" />}\r\n          />\r\n        </Col>\r\n\r\n        <Col span={24}>\r\n          <DatePicker\r\n            className=\"hp-mb-16 hp-mr-16\"\r\n            defaultValue={moment(\"2015-06-06\", dateFormat)}\r\n            disabled\r\n          />\r\n          <DatePicker\r\n            className=\"hp-mb-16 hp-mr-16\"\r\n            picker=\"month\"\r\n            defaultValue={moment(\"2015-06\", \"YYYY-MM\")}\r\n            disabled\r\n          />\r\n          <RangePicker\r\n            className=\"hp-mb-16 hp-mr-16\"\r\n            defaultValue={[\r\n              moment(\"2015-06-06\", dateFormat),\r\n              moment(\"2015-06-06\", dateFormat),\r\n            ]}\r\n            disabled\r\n          />\r\n          <RangePicker\r\n            className=\"hp-mb-16 hp-mr-16\"\r\n            defaultValue={[\r\n              moment(\"2019-09-03\", dateFormat),\r\n              moment(\"2019-11-22\", dateFormat),\r\n            ]}\r\n            disabled={[false, true]}\r\n          />\r\n        </Col>\r\n      </Row>\r\n      \r\n      {checkedCode && (\r\n        <SyntaxHighlighter\r\n          language=\"javascript\"\r\n          className={`show-code hp-mt-24 ${codeClass && \"show-code-active\"}`}\r\n          style={monoBlue}\r\n        >\r\n          {disabled}\r\n        </SyntaxHighlighter>\r\n      )}\r\n    </Card>\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\r\n\r\nimport SyntaxHighlighter from \"react-syntax-highlighter\";\r\nimport { monoBlue } from \"react-syntax-highlighter/dist/esm/styles/hljs\";\r\nimport { datarender } from \"./code.js\";\r\n\r\nimport { Card, Row, Col, DatePicker, Button } from \"antd\";\r\nimport { RiCodeSSlashLine } from \"react-icons/ri\";\r\n\r\nconst { RangePicker } = DatePicker;\r\n\r\nexport default function DatePickerCustomizedDateRender() {\r\n  const [checkedCode, setCheckedCode] = useState(false);\r\n  const [codeClass, setCodeClass] = useState(false);\r\n\r\n  function toggleChecked() {\r\n    setTimeout(() => setCodeClass(!codeClass), 100);\r\n    setCheckedCode(!checkedCode);\r\n  }\r\n\r\n  return (\r\n    <Card className=\"hp-border-color-black-40\">\r\n      <Row>\r\n        <Col className=\"hp-mb-16\" lg={12} span={20}>\r\n          <h4>Customized Date Rendering</h4>\r\n          <p className=\"hp-p1-body\">\r\n            We can customize the rendering of date cells in the calendar by\r\n            providing a dateRender function to DatePicker.\r\n          </p>\r\n        </Col>\r\n\r\n        <Col lg={12} span={4} className=\"hp-text-right\">\r\n          <Button\r\n            onClick={toggleChecked}\r\n            type=\"text\"\r\n            icon={<RiCodeSSlashLine className=\"hp-text-color-black-80\" />}\r\n          />\r\n        </Col>\r\n\r\n        <Col span={24}>\r\n          <DatePicker\r\n            className=\"hp-mb-16 hp-mr-16\"\r\n            dateRender={(current) => {\r\n              const style = {};\r\n              if (current.date() === 1) {\r\n                style.border = \"1px solid #1890ff\";\r\n                style.borderRadius = \"50%\";\r\n              }\r\n              return (\r\n                <div className=\"ant-picker-cell-inner\" style={style}>\r\n                  {current.date()}\r\n                </div>\r\n              );\r\n            }}\r\n          />\r\n\r\n          <RangePicker\r\n            className=\"hp-mb-16 hp-mr-16\"\r\n            dateRender={(current) => {\r\n              const style = {};\r\n              if (current.date() === 1) {\r\n                style.border = \"1px solid #1890ff\";\r\n                style.borderRadius = \"50%\";\r\n              }\r\n              return (\r\n                <div className=\"ant-picker-cell-inner\" style={style}>\r\n                  {current.date()}\r\n                </div>\r\n              );\r\n            }}\r\n          />\r\n        </Col>\r\n      </Row>\r\n\r\n      {checkedCode && (\r\n        <SyntaxHighlighter\r\n          language=\"javascript\"\r\n          className={`show-code hp-mt-24 ${codeClass && \"show-code-active\"}`}\r\n          style={monoBlue}\r\n        >\r\n          {datarender}\r\n        </SyntaxHighlighter>\r\n      )}\r\n    </Card>\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\r\n\r\nimport SyntaxHighlighter from \"react-syntax-highlighter\";\r\nimport { monoBlue } from \"react-syntax-highlighter/dist/esm/styles/hljs\";\r\nimport { extrafooter } from \"./code.js\";\r\n\r\nimport { Card, Row, Col, DatePicker, Button } from \"antd\";\r\nimport { RiCodeSSlashLine } from \"react-icons/ri\";\r\n\r\nconst { RangePicker } = DatePicker;\r\n\r\nexport default function DatePickerExtraFooter() {\r\n  const [checkedCode, setCheckedCode] = useState(false);\r\n  const [codeClass, setCodeClass] = useState(false);\r\n\r\n  function toggleChecked() {\r\n    setTimeout(() => setCodeClass(!codeClass), 100);\r\n    setCheckedCode(!checkedCode);\r\n  }\r\n\r\n  return (\r\n    <Card className=\"hp-border-color-black-40\">\r\n      <Row>\r\n        <Col className=\"hp-mb-16\" lg={12} span={20}>\r\n          <h4>Extra Footer</h4>\r\n          <p className=\"hp-p1-body\">\r\n            Render extra footer in panel for customized requirements.\r\n          </p>\r\n        </Col>\r\n\r\n        <Col lg={12} span={4} className=\"hp-text-right\">\r\n          <Button\r\n            onClick={toggleChecked}\r\n            type=\"text\"\r\n            icon={<RiCodeSSlashLine className=\"hp-text-color-black-80\" />}\r\n          />\r\n        </Col>\r\n\r\n        <Col span={24}>\r\n          <DatePicker\r\n            renderExtraFooter={() => \"extra footer\"}\r\n            className=\"hp-mb-16 hp-mr-16\"\r\n          />\r\n          <DatePicker\r\n            className=\"hp-mb-16 hp-mr-16\"\r\n            renderExtraFooter={() => \"extra footer\"}\r\n            showTime\r\n          />\r\n          <RangePicker\r\n            className=\"hp-mb-16 hp-mr-16\"\r\n            renderExtraFooter={() => \"extra footer\"}\r\n          />\r\n          <RangePicker\r\n            className=\"hp-mb-16 hp-mr-16\"\r\n            renderExtraFooter={() => \"extra footer\"}\r\n            showTime\r\n          />\r\n          <DatePicker\r\n            className=\"hp-mb-16 hp-mr-16\"\r\n            renderExtraFooter={() => \"extra footer\"}\r\n            picker=\"month\"\r\n          />\r\n        </Col>\r\n      </Row>\r\n\r\n      {checkedCode && (\r\n        <SyntaxHighlighter\r\n          language=\"javascript\"\r\n          className={`show-code hp-mt-24 ${codeClass && \"show-code-active\"}`}\r\n          style={monoBlue}\r\n        >\r\n          {extrafooter}\r\n        </SyntaxHighlighter>\r\n      )}\r\n    </Card>\r\n  );\r\n}\r\n","import React from \"react\";\r\n\r\nimport { Row, Col } from \"antd\";\r\n\r\nimport PageContent from \"../../../../layout/components/content/page-content\";\r\nimport BasicDatepicker from \"./basic\";\r\nimport RangePickerItem from \"./rangePicker\";\r\nimport SwitchablePicker from \"./switchable\";\r\nimport DateFormat from \"./dateFormat\";\r\nimport DatePickerSizes from \"./datePickerSizes\";\r\nimport DatePickerDisabled from \"./disabled\";\r\nimport DatePickerCustomizedDateRender from \"./customizedDateRender\";\r\nimport DatePickerExtraFooter from \"./extraFooter\";\r\n\r\nexport default function Datepicker() {\r\n  return (\r\n    <Row gutter={[32, 32]} className=\"hp-mb-32\">\r\n      <Col span={24}>\r\n        <PageContent\r\n          title=\"Date Picker\"\r\n          desc=\"To select or input a date.\"\r\n          breadcrumb={[\r\n            {\r\n              title: \"Components\",\r\n              link: \"/components/components-page\"\r\n            },\r\n            {\r\n              title: \"Data Entry\",\r\n            },\r\n            {\r\n              title: \"Date Picker\",\r\n            }\r\n          ]}\r\n        />\r\n      </Col>\r\n\r\n      <Col span={24}>\r\n        <BasicDatepicker />\r\n      </Col>\r\n\r\n      <Col span={24}>\r\n        <SwitchablePicker />\r\n      </Col>\r\n\r\n      <Col span={24}>\r\n        <DatePickerSizes />\r\n      </Col>\r\n\r\n      <Col span={24}>\r\n        <DatePickerCustomizedDateRender />\r\n      </Col>\r\n\r\n      <Col span={24}>\r\n        <RangePickerItem />\r\n      </Col>\r\n\r\n      <Col span={24}>\r\n        <DateFormat />\r\n      </Col>\r\n\r\n      <Col span={24}>\r\n        <DatePickerDisabled />\r\n      </Col>\r\n\r\n      <Col span={24}>\r\n        <DatePickerExtraFooter />\r\n      </Col>\r\n    </Row>\r\n  );\r\n}","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport { Breadcrumb, Col, Row } from \"antd\";\r\n\r\nexport default function PageContent(props) {\r\n  const { title, breadcrumb, desc } = props;\r\n\r\n  return (\r\n    <Col span={24} className=\"hp-bg-black-bg hp-py-sm-32 hp-py-64 hp-px-sm-24 hp-px-md-48 hp-px-80 hp-overflow-hidden\" style={{ borderRadius: 32 }}>\r\n      <svg\r\n        width={358}\r\n        height={336}\r\n        fill=\"none\"\r\n        xmlns=\"http://www.w3.org/2000/svg\"\r\n        className=\"hp-position-absolute-bottom-right hp-rtl-scale-x-n1\"\r\n      >\r\n        <path\r\n          d=\"M730.404 135.471 369.675-6.641l88.802 164.001-243.179-98.8 246.364 263.281-329.128-126.619 114.698 166.726-241.68-62.446\"\r\n          stroke=\"url(#a)\"\r\n          strokeWidth={40}\r\n          strokeLinejoin=\"bevel\"\r\n        />\r\n        <defs>\r\n          <linearGradient\r\n            id=\"a\"\r\n            x1={315.467}\r\n            y1={6.875}\r\n            x2={397.957}\r\n            y2={337.724}\r\n            gradientUnits=\"userSpaceOnUse\"\r\n          >\r\n            <stop stopColor=\"#fff\" />\r\n            <stop offset={1} stopColor=\"#fff\" stopOpacity={0} />\r\n          </linearGradient>\r\n        </defs>\r\n      </svg>\r\n\r\n      <Row>\r\n        <Col sm={12} span={24}>\r\n          <Row>\r\n            {\r\n              title && (\r\n                <Col span={24}>\r\n                  <h1 className=\"hp-mb-0 hp-text-color-black-0\">{title}</h1>\r\n                </Col>\r\n              )\r\n            }\r\n\r\n            {\r\n              breadcrumb && (\r\n                <Col span={24}>\r\n                  <Breadcrumb className=\"hp-d-flex hp-flex-wrap hp-mt-24\">\r\n                    <Breadcrumb.Item>\r\n                      <Link to=\"/\" className=\"hp-text-color-black-0 hp-hover-text-color-primary-2\">Home</Link>\r\n                    </Breadcrumb.Item>\r\n\r\n                    {\r\n                      breadcrumb.map((item, index) => (\r\n                        <Breadcrumb.Item key={index}>\r\n                          <Link to={item.link ? item.link : '#'} className={`hp-text-color-black-0${item.link ? ' hp-hover-text-color-primary-2' : ''}`}>{item.title}</Link>\r\n                        </Breadcrumb.Item>\r\n                      ))\r\n                    }\r\n                  </Breadcrumb>\r\n                </Col>\r\n              )\r\n            }\r\n\r\n            {\r\n              desc && (\r\n                <Col span={24}>\r\n                  <p className=\"h5 hp-mb-0 hp-mt-24 hp-text-color-black-0\">{desc}</p>\r\n                </Col>\r\n              )\r\n            }\r\n          </Row>\r\n        </Col>\r\n      </Row>\r\n    </Col>\r\n  );\r\n}\r\n"],"sourceRoot":""}