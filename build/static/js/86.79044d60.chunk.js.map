{"version":3,"sources":["view/components/navigation/steps/basic.jsx","view/components/navigation/steps/code.js","view/components/navigation/steps/miniVersion.jsx","view/components/navigation/steps/withIcon.jsx","view/components/navigation/steps/switchStep.jsx","view/components/navigation/steps/vertical.jsx","view/components/navigation/steps/verticalMini.jsx","view/components/navigation/steps/errorStatus.jsx","view/components/navigation/steps/dotStyle.jsx","view/components/navigation/steps/customizedDotStyle.jsx","view/components/navigation/steps/index.jsx","layout/components/content/page-content/index.jsx"],"names":["Step","Steps","BasicSteps","useState","checkedCode","setCheckedCode","codeClass","setCodeClass","className","lg","span","onClick","setTimeout","type","icon","current","title","description","subTitle","language","style","monoBlue","StepsMiniVersion","size","StepsWithIcon","status","StepsSwitchStep","steps","content","setCurrent","map","item","length","StepsVertical","direction","StepsVerticalMini","StepsErrorStatus","StepsDotStyle","progressDot","StepsCustomizedDotStyle","dot","index","gutter","desc","breadcrumb","link","md","PageContent","props","borderRadius","width","height","fill","xmlns","d","stroke","strokeWidth","strokeLinejoin","id","x1","y1","x2","y2","gradientUnits","stopColor","offset","stopOpacity","sm","Item","to"],"mappings":"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","file":"static/js/86.79044d60.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\n\r\nimport SyntaxHighlighter from \"react-syntax-highlighter\";\r\nimport { monoBlue } from \"react-syntax-highlighter/dist/esm/styles/hljs\";\r\nimport { basic } from \"./code.js\";\r\n\r\nimport { Card, Row, Col, Button, Steps } from \"antd\";\r\nimport { RiCodeSSlashLine } from \"react-icons/ri\";\r\n\r\nconst { Step } = Steps;\r\n\r\nexport default function BasicSteps() {\r\n  const [checkedCode, setCheckedCode] = useState(false);\r\n  const [codeClass, setCodeClass] = useState(false);\r\n\r\n  function toggleChecked() {\r\n    setTimeout(() => setCodeClass(!codeClass), 100);\r\n    setCheckedCode(!checkedCode);\r\n  }\r\n\r\n  return (\r\n    <Card className=\"hp-border-color-black-40\">\r\n      <Row>\r\n        <Col lg={12} span={20} className=\"hp-mb-16\">\r\n          <h4>Basic</h4>\r\n          <p className=\"hp-p1-body\">The most basic step bar.</p>\r\n        </Col>\r\n\r\n        <Col lg={12} span={4} className=\"hp-text-right\">\r\n          <Button\r\n            onClick={toggleChecked}\r\n            type=\"text\"\r\n            icon={<RiCodeSSlashLine className=\"hp-text-color-black-80\" />}\r\n          />\r\n        </Col>\r\n\r\n        <Col span={24} className=\"hp-overflow-scroll hp-scrollbar-x-hidden\">\r\n          <Steps current={1}>\r\n            <Step title=\"Finished\" description=\"This is a description.\" />\r\n            \r\n            <Step\r\n              title=\"In Progress\"\r\n              subTitle=\"Left 00:00:08\"\r\n              description=\"This is a description.\"\r\n            />\r\n            \r\n            <Step title=\"Waiting\" description=\"This is a description.\" />\r\n          </Steps>\r\n        </Col>\r\n      </Row>\r\n\r\n      {checkedCode && (\r\n        <SyntaxHighlighter\r\n          language=\"javascript\"\r\n          className={`show-code hp-mt-24 ${codeClass && \"show-code-active\"}`}\r\n          style={monoBlue}\r\n        >\r\n          {basic}\r\n        </SyntaxHighlighter>\r\n      )}\r\n    </Card>\r\n  );\r\n}\r\n","export const basic = `\r\nimport { Steps } from \"antd\";\r\n\r\nconst { Step } = Steps;\r\n\r\nreturn (\r\n  <div className=\"hp-overflow-scroll hp-scrollbar-x-hidden\">\r\n    <Steps current={1}>\r\n      <Step title=\"Finished\" description=\"This is a description.\" />\r\n\r\n      <Step\r\n        title=\"In Progress\"\r\n        subTitle=\"Left 00:00:08\"\r\n        description=\"This is a description.\"\r\n      />\r\n\r\n      <Step title=\"Waiting\" description=\"This is a description.\" />\r\n    </Steps>\r\n  </div>\r\n);\r\n`;\r\n\r\nexport const customized = `\r\nimport { Steps } from \"antd\";\r\n\r\nconst { Step } = Steps;\r\n\r\nconst customDot = (dot, { status, index }) => (\r\n  <Popover\r\n    content={\r\n      <span>\r\n        Step: {index} Status: {status}\r\n      </span>\r\n    }\r\n  >\r\n    {dot}\r\n  </Popover>\r\n);\r\n\r\nreturn (\r\n  <div className=\"hp-overflow-scroll hp-scrollbar-x-hidden\">\r\n    <Steps current={1} progressDot={customDot}>\r\n      <Step title=\"Finished\" description=\"You can hover on the dot.\" />\r\n      <Step title=\"In Progress\" description=\"You can hover on the dot.\" />\r\n      <Step title=\"Waiting\" description=\"You can hover on the dot.\" />\r\n      <Step title=\"Waiting\" description=\"You can hover on the dot.\" />\r\n    </Steps>\r\n  </div>\r\n);\r\n`;\r\n\r\nexport const dotStyle = `\r\nimport { Divider, Steps } from \"antd\";\r\n\r\nconst { Step } = Steps;\r\n\r\nreturn (\r\n  <div className=\"hp-overflow-scroll hp-scrollbar-x-hidden\">\r\n    <Steps progressDot current={1}>\r\n      <Step title=\"Finished\" description=\"This is a description.\" />\r\n      <Step title=\"In Progress\" description=\"This is a description.\" />\r\n      <Step title=\"Waiting\" description=\"This is a description.\" />\r\n    </Steps>\r\n\r\n    <Divider />\r\n\r\n    <div className=\"hp-pl-4\">\r\n      <Steps progressDot current={1} direction=\"vertical\">\r\n        <Step\r\n          title=\"Finished\"\r\n          description=\"This is a description. This is a description.\"\r\n        />\r\n        <Step\r\n          title=\"Finished\"\r\n          description=\"This is a description. This is a description.\"\r\n        />\r\n        <Step\r\n          title=\"In Progress\"\r\n          description=\"This is a description. This is a description.\"\r\n        />\r\n        <Step title=\"Waiting\" description=\"This is a description.\" />\r\n        <Step title=\"Waiting\" description=\"This is a description.\" />\r\n      </Steps>\r\n    </div>\r\n  </div>\r\n);\r\n`;\r\n\r\nexport const errorStatus = `\r\nimport { Steps } from \"antd\";\r\n\r\nconst { Step } = Steps;\r\n\r\nreturn (\r\n  <div className=\"hp-overflow-scroll hp-scrollbar-x-hidden\">\r\n    <Steps current={1} status=\"error\">\r\n      <Step title=\"Finished\" description=\"This is a description\" />\r\n      <Step title=\"In Process\" description=\"This is a description\" />\r\n      <Step title=\"Waiting\" description=\"This is a description\" />\r\n    </Steps>\r\n  </div>\r\n);\r\n`;\r\n\r\nexport const miniVersion = `\r\nimport { Steps } from \"antd\";\r\n\r\nconst { Step } = Steps;\r\n\r\nreturn (\r\n  <div className=\"hp-overflow-scroll hp-scrollbar-x-hidden\">\r\n    <Steps size=\"small\" current={1}>\r\n      <Step title=\"Finished\" />\r\n      <Step title=\"In Progress\" />\r\n      <Step title=\"Waiting\" />\r\n    </Steps>\r\n  </div>\r\n);\r\n`;\r\n\r\nexport const switchStep = `\r\nimport React, { useState } from \"react\";\r\n\r\nimport { Button, Steps } from \"antd\";\r\n\r\nconst { Step } = Steps;\r\n\r\nconst steps = [\r\n  {\r\n    title: \"First\",\r\n    content: \"First-content\",\r\n  },\r\n  {\r\n    title: \"Second\",\r\n    content: \"Second-content\",\r\n  },\r\n  {\r\n    title: \"Last\",\r\n    content: \"Last-content\",\r\n  },\r\n];\r\n\r\nconst [current, setCurrent] = useState(0);\r\n\r\nconst next = () => {\r\n  setCurrent(current + 1);\r\n};\r\n\r\nconst prev = () => {\r\n  setCurrent(current - 1);\r\n};\r\n\r\nreturn (\r\n  <>\r\n    <div className=\"hp-overflow-scroll hp-scrollbar-x-hidden\">\r\n      <Steps current={current}>\r\n        {steps.map((item) => (\r\n          <Step key={item.title} title={item.title} />\r\n        ))}\r\n      </Steps>\r\n    </div>\r\n\r\n    <div className=\"hp-border-radius-sm hp-border-dashed hp-bg-color-black-20 hp-text-center hp-p-120 hp-mt-16 hp-border-1\">\r\n      {steps[current].content}\r\n    </div>\r\n\r\n    <div className=\"hp-mt-24\">\r\n      {current < steps.length - 1 && (\r\n        <Button type=\"primary\" onClick={() => next()}>\r\n          Next\r\n        </Button>\r\n      )}\r\n\r\n      {current === steps.length - 1 && (\r\n        <Button\r\n          type=\"primary\"\r\n          onClick={() => message.success(\"Processing complete!\")}\r\n        >\r\n          Done\r\n        </Button>\r\n      )}\r\n\r\n      {current > 0 && (\r\n        <Button className=\"hp-mx-8\" onClick={() => prev()}>\r\n          Previous\r\n        </Button>\r\n      )}\r\n    </div>\r\n  </>\r\n);\r\n`;\r\n\r\nexport const vertical = `\r\nimport { Steps } from \"antd\";\r\n\r\nconst { Step } = Steps;\r\n\r\nreturn (\r\n  <Steps direction=\"vertical\" current={1}>\r\n    <Step title=\"Finished\" description=\"This is a description.\" />\r\n    <Step title=\"In Progress\" description=\"This is a description.\" />\r\n    <Step title=\"Waiting\" description=\"This is a description.\" />\r\n  </Steps>\r\n);\r\n`;\r\n\r\nexport const verticalMini = `\r\nimport { Steps } from \"antd\";\r\n\r\nconst { Step } = Steps;\r\n\r\nreturn (\r\n  <Steps direction=\"vertical\" current={1}>\r\n    <Step title=\"Finished\" description=\"This is a description.\" />\r\n    <Step title=\"In Progress\" description=\"This is a description.\" />\r\n    <Step title=\"Waiting\" description=\"This is a description.\" />\r\n  </Steps>\r\n);\r\n`;\r\n\r\nexport const withIcon = `\r\nimport { Steps } from \"antd\";\r\n\r\nconst { Step } = Steps;\r\n\r\nreturn (\r\n  <div className=\"hp-overflow-scroll hp-scrollbar-x-hidden\">\r\n    <Steps>\r\n      <Step\r\n        status=\"finish\"\r\n        title=\"Login\"\r\n        icon={\r\n          <span className=\"remix-icon\">\r\n            <i className=\"ri-user-line\" />\r\n          </span>\r\n        }\r\n      />\r\n      <Step\r\n        status=\"process\"\r\n        title=\"Pay\"\r\n        icon={\r\n          <span className=\"remix-icon  anticon-loading anticon-spin\">\r\n            <i className=\"ri-loader-5-line\" />\r\n          </span>\r\n        }\r\n      />\r\n\r\n      <Step\r\n        status=\"wait\"\r\n        title=\"Done\"\r\n        icon={\r\n          <span className=\"remix-icon\">\r\n            <i className=\"ri-user-smile-line\" />\r\n          </span>\r\n        }\r\n      />\r\n    </Steps>\r\n  </div>\r\n);\r\n`;","import React, { useState } from \"react\";\r\n\r\nimport SyntaxHighlighter from \"react-syntax-highlighter\";\r\nimport { monoBlue } from \"react-syntax-highlighter/dist/esm/styles/hljs\";\r\nimport { miniVersion } from \"./code.js\";\r\n\r\nimport { Card, Row, Col, Steps, Button } from \"antd\";\r\nimport { RiCodeSSlashLine } from \"react-icons/ri\";\r\n\r\nconst { Step } = Steps;\r\n\r\nexport default function StepsMiniVersion() {\r\n  const [checkedCode, setCheckedCode] = useState(false);\r\n  const [codeClass, setCodeClass] = useState(false);\r\n\r\n  function toggleChecked() {\r\n    setTimeout(() => setCodeClass(!codeClass), 100);\r\n    setCheckedCode(!checkedCode);\r\n  }\r\n\r\n  return (\r\n    <Card className=\"hp-border-color-black-40\">\r\n      <Row>\r\n        <Col lg={12} span={20} className=\"hp-mb-16\">\r\n          <h4>Mini Version</h4>\r\n          <p className=\"hp-p1-body\">\r\n            By setting like this: &lt;Steps size=\"small\"&gt;, you can get a mini\r\n            version.\r\n          </p>\r\n        </Col>\r\n\r\n        <Col lg={12} span={4} className=\"hp-text-right\">\r\n          <Button\r\n            onClick={toggleChecked}\r\n            type=\"text\"\r\n            icon={<RiCodeSSlashLine className=\"hp-text-color-black-80\" />}\r\n          />\r\n        </Col>\r\n\r\n        <Col span={24} className=\"hp-overflow-scroll hp-scrollbar-x-hidden\">\r\n          <Steps size=\"small\" current={1}>\r\n            <Step title=\"Finished\" />\r\n            <Step title=\"In Progress\" />\r\n            <Step title=\"Waiting\" />\r\n          </Steps>\r\n        </Col>\r\n      </Row>\r\n\r\n      {checkedCode && (\r\n        <SyntaxHighlighter\r\n          language=\"javascript\"\r\n          className={`show-code hp-mt-24 ${codeClass && \"show-code-active\"}`}\r\n          style={monoBlue}\r\n        >\r\n          {miniVersion}\r\n        </SyntaxHighlighter>\r\n      )}\r\n    </Card>\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\r\n\r\nimport SyntaxHighlighter from \"react-syntax-highlighter\";\r\nimport { monoBlue } from \"react-syntax-highlighter/dist/esm/styles/hljs\";\r\nimport { withIcon } from \"./code.js\";\r\n\r\nimport { Card, Row, Col, Steps, Button } from \"antd\";\r\nimport { RiCodeSSlashLine } from \"react-icons/ri\";\r\n\r\nconst { Step } = Steps;\r\n\r\nexport default function StepsWithIcon() {\r\n  const [checkedCode, setCheckedCode] = useState(false);\r\n  const [codeClass, setCodeClass] = useState(false);\r\n\r\n  function toggleChecked() {\r\n    setTimeout(() => setCodeClass(!codeClass), 100);\r\n    setCheckedCode(!checkedCode);\r\n  }\r\n\r\n  return (\r\n    <Card className=\"hp-border-color-black-40\">\r\n      <Row>\r\n        <Col lg={12} span={20} className=\"hp-mb-16\">\r\n          <h4>With icon</h4>\r\n          <p className=\"hp-p1-body\">\r\n            You can use your own custom icons by setting the property icon for\r\n            Steps.Step.\r\n          </p>\r\n        </Col>\r\n\r\n        <Col lg={12} span={4} className=\"hp-text-right\">\r\n          <Button\r\n            onClick={toggleChecked}\r\n            type=\"text\"\r\n            icon={<RiCodeSSlashLine className=\"hp-text-color-black-80\" />}\r\n          />\r\n        </Col>\r\n\r\n        <Col span={24} className=\"hp-overflow-scroll hp-scrollbar-x-hidden\">\r\n          <Steps>\r\n            <Step\r\n              status=\"finish\"\r\n              title=\"Login\"\r\n              icon={\r\n                <span className=\"remix-icon\">\r\n                  <i className=\"ri-user-line\" />\r\n                </span>\r\n              }\r\n            />\r\n            <Step\r\n              status=\"process\"\r\n              title=\"Pay\"\r\n              icon={\r\n                <span className=\"remix-icon  anticon-loading anticon-spin\">\r\n                  <i className=\"ri-loader-5-line\" />\r\n                </span>\r\n              }\r\n            />\r\n\r\n            <Step\r\n              status=\"wait\"\r\n              title=\"Done\"\r\n              icon={\r\n                <span className=\"remix-icon\">\r\n                  <i className=\"ri-user-smile-line\" />\r\n                </span>\r\n              }\r\n            />\r\n          </Steps>\r\n        </Col>\r\n      </Row>\r\n\r\n      {checkedCode && (\r\n        <SyntaxHighlighter\r\n          language=\"javascript\"\r\n          className={`show-code hp-mt-24 ${codeClass && \"show-code-active\"}`}\r\n          style={monoBlue}\r\n        >\r\n          {withIcon}\r\n        </SyntaxHighlighter>\r\n      )}\r\n    </Card>\r\n  );\r\n}","import React, { useState } from \"react\";\r\n\r\nimport SyntaxHighlighter from \"react-syntax-highlighter\";\r\nimport { monoBlue } from \"react-syntax-highlighter/dist/esm/styles/hljs\";\r\nimport { switchStep } from \"./code.js\";\r\n\r\nimport { Card, Row, Col, Button, Steps } from \"antd\";\r\nimport { RiCodeSSlashLine } from \"react-icons/ri\";\r\n\r\nconst { Step } = Steps;\r\n\r\nexport default function StepsSwitchStep() {\r\n  const [checkedCode, setCheckedCode] = useState(false);\r\n  const [codeClass, setCodeClass] = useState(false);\r\n\r\n  function toggleChecked() {\r\n    setTimeout(() => setCodeClass(!codeClass), 100);\r\n    setCheckedCode(!checkedCode);\r\n  }\r\n\r\n  const steps = [\r\n    {\r\n      title: \"First\",\r\n      content: \"First-content\",\r\n    },\r\n    {\r\n      title: \"Second\",\r\n      content: \"Second-content\",\r\n    },\r\n    {\r\n      title: \"Last\",\r\n      content: \"Last-content\",\r\n    },\r\n  ];\r\n\r\n  const [current, setCurrent] = useState(0);\r\n\r\n  const next = () => {\r\n    setCurrent(current + 1);\r\n  };\r\n\r\n  const prev = () => {\r\n    setCurrent(current - 1);\r\n  };\r\n\r\n  return (\r\n    <Card className=\"hp-border-color-black-40\">\r\n      <Row>\r\n        <Col lg={12} span={20} className=\"hp-mb-16\">\r\n          <h4>Switch Step</h4>\r\n          <p className=\"hp-p1-body\">\r\n            Cooperate with the content and buttons, to represent the progress of\r\n            a process.\r\n          </p>\r\n        </Col>\r\n\r\n        <Col lg={12} span={4} className=\"hp-text-right\">\r\n          <Button\r\n            onClick={toggleChecked}\r\n            type=\"text\"\r\n            icon={<RiCodeSSlashLine className=\"hp-text-color-black-80\" />}\r\n          />\r\n        </Col>\r\n\r\n        <Col span={24}>\r\n          <div className=\"hp-overflow-scroll hp-scrollbar-x-hidden\">\r\n            <Steps current={current}>\r\n              {steps.map((item) => (\r\n                <Step key={item.title} title={item.title} />\r\n              ))}\r\n            </Steps>\r\n          </div>\r\n\r\n          <div className=\"hp-border-radius-sm hp-border-dashed hp-bg-color-black-20 hp-bg-color-dark-90 hp-text-color-dark-0 hp-text-center hp-p-120 hp-mt-16 hp-border-1 hp-border-color-dark-80\">\r\n            {steps[current].content}\r\n          </div>\r\n\r\n          <div className=\"hp-mt-24\">\r\n            {current < steps.length - 1 && (\r\n              <Button type=\"primary\" onClick={() => next()}>\r\n                Next\r\n              </Button>\r\n            )}\r\n\r\n            {current === steps.length - 1 && (\r\n              <Button\r\n                type=\"primary\"\r\n              >\r\n                Done\r\n              </Button>\r\n            )}\r\n\r\n            {current > 0 && (\r\n              <Button className=\"hp-mx-8\" onClick={() => prev()}>\r\n                Previous\r\n              </Button>\r\n            )}\r\n          </div>\r\n        </Col>\r\n      </Row>\r\n\r\n      {checkedCode && (\r\n        <SyntaxHighlighter\r\n          language=\"javascript\"\r\n          className={`show-code hp-mt-24 ${codeClass && \"show-code-active\"}`}\r\n          style={monoBlue}\r\n        >\r\n          {switchStep}\r\n        </SyntaxHighlighter>\r\n      )}\r\n    </Card>\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\r\n\r\nimport SyntaxHighlighter from \"react-syntax-highlighter\";\r\nimport { monoBlue } from \"react-syntax-highlighter/dist/esm/styles/hljs\";\r\nimport { vertical } from \"./code.js\";\r\n\r\nimport { Card, Row, Col, Button, Steps } from \"antd\";\r\nimport { RiCodeSSlashLine } from \"react-icons/ri\";\r\n\r\nconst { Step } = Steps;\r\n\r\nexport default function StepsVertical() {\r\n  const [checkedCode, setCheckedCode] = useState(false);\r\n  const [codeClass, setCodeClass] = useState(false);\r\n\r\n  function toggleChecked() {\r\n    setTimeout(() => setCodeClass(!codeClass), 100);\r\n    setCheckedCode(!checkedCode);\r\n  }\r\n\r\n  return (\r\n    <Card className=\"hp-border-color-black-40\">\r\n      <Row>\r\n        <Col lg={12} span={20} className=\"hp-mb-16\">\r\n          <h4>Vertical</h4>\r\n          <p className=\"hp-p1-body\">\r\n            A simple step bar in the vertical direction.\r\n          </p>\r\n        </Col>\r\n\r\n        <Col lg={12} span={4} className=\"hp-text-right\">\r\n          <Button\r\n            onClick={toggleChecked}\r\n            type=\"text\"\r\n            icon={<RiCodeSSlashLine className=\"hp-text-color-black-80\" />}\r\n          />\r\n        </Col>\r\n\r\n        <Col span={24}>\r\n          <Steps direction=\"vertical\" current={1}>\r\n            <Step title=\"Finished\" description=\"This is a description.\" />\r\n            <Step title=\"In Progress\" description=\"This is a description.\" />\r\n            <Step title=\"Waiting\" description=\"This is a description.\" />\r\n          </Steps>\r\n        </Col>\r\n      </Row>\r\n\r\n      {checkedCode && (\r\n        <SyntaxHighlighter\r\n          language=\"javascript\"\r\n          className={`show-code hp-mt-24 ${codeClass && \"show-code-active\"}`}\r\n          style={monoBlue}\r\n        >\r\n          {vertical}\r\n        </SyntaxHighlighter>\r\n      )}\r\n    </Card>\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\r\n\r\nimport SyntaxHighlighter from \"react-syntax-highlighter\";\r\nimport { monoBlue } from \"react-syntax-highlighter/dist/esm/styles/hljs\";\r\nimport { verticalMini } from \"./code.js\";\r\n\r\nimport { Card, Row, Col, Button, Steps } from \"antd\";\r\nimport { RiCodeSSlashLine } from \"react-icons/ri\";\r\n\r\nconst { Step } = Steps;\r\n\r\nexport default function StepsVerticalMini() {\r\n  const [checkedCode, setCheckedCode] = useState(false);\r\n  const [codeClass, setCodeClass] = useState(false);\r\n\r\n  function toggleChecked() {\r\n    setTimeout(() => setCodeClass(!codeClass), 100);\r\n    setCheckedCode(!checkedCode);\r\n  }\r\n\r\n  return (\r\n    <Card className=\"hp-border-color-black-40\">\r\n      <Row>\r\n        <Col lg={16} span={20} className=\"hp-mb-16\">\r\n          <h4>Vertical Mini Version</h4>\r\n          <p className=\"hp-p1-body\">\r\n            A simple mini version step bar in the vertical direction.\r\n          </p>\r\n        </Col>\r\n\r\n        <Col lg={8} span={4} className=\"hp-text-right\">\r\n          <Button\r\n            onClick={toggleChecked}\r\n            type=\"text\"\r\n            icon={<RiCodeSSlashLine className=\"hp-text-color-black-80\" />}\r\n          />\r\n        </Col>\r\n\r\n        <Col span={24}>\r\n          <Steps direction=\"vertical\" current={1}>\r\n            <Step title=\"Finished\" description=\"This is a description.\" />\r\n            <Step title=\"In Progress\" description=\"This is a description.\" />\r\n            <Step title=\"Waiting\" description=\"This is a description.\" />\r\n          </Steps>\r\n        </Col>\r\n      </Row>\r\n\r\n      {checkedCode && (\r\n        <SyntaxHighlighter\r\n          language=\"javascript\"\r\n          className={`show-code hp-mt-24 ${codeClass && \"show-code-active\"}`}\r\n          style={monoBlue}\r\n        >\r\n          {verticalMini}\r\n        </SyntaxHighlighter>\r\n      )}\r\n    </Card>\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\r\n\r\nimport SyntaxHighlighter from \"react-syntax-highlighter\";\r\nimport { monoBlue } from \"react-syntax-highlighter/dist/esm/styles/hljs\";\r\nimport { errorStatus } from \"./code.js\";\r\n\r\nimport { Card, Row, Col, Button, Steps } from \"antd\";\r\nimport { RiCodeSSlashLine } from \"react-icons/ri\";\r\n\r\nconst { Step } = Steps;\r\n\r\nexport default function StepsErrorStatus() {\r\n  const [checkedCode, setCheckedCode] = useState(false);\r\n  const [codeClass, setCodeClass] = useState(false);\r\n\r\n  function toggleChecked() {\r\n    setTimeout(() => setCodeClass(!codeClass), 100);\r\n    setCheckedCode(!checkedCode);\r\n  }\r\n\r\n  return (\r\n    <Card className=\"hp-border-color-black-40\">\r\n      <Row>\r\n        <Col lg={12} span={20} className=\"hp-mb-16\">\r\n          <h4>Error Status</h4>\r\n          <p className=\"hp-p1-body\">\r\n            By using status of Steps, you can specify the state for current\r\n            step.\r\n          </p>\r\n        </Col>\r\n\r\n        <Col lg={12} span={4} className=\"hp-text-right\">\r\n          <Button\r\n            onClick={toggleChecked}\r\n            type=\"text\"\r\n            icon={<RiCodeSSlashLine className=\"hp-text-color-black-80\" />}\r\n          />\r\n        </Col>\r\n\r\n        <Col span={24} className=\"hp-overflow-scroll hp-scrollbar-x-hidden\">\r\n          <Steps current={1} status=\"error\">\r\n            <Step title=\"Finished\" description=\"This is a description\" />\r\n            <Step title=\"In Process\" description=\"This is a description\" />\r\n            <Step title=\"Waiting\" description=\"This is a description\" />\r\n          </Steps>\r\n        </Col>\r\n      </Row>\r\n\r\n      {checkedCode && (\r\n        <SyntaxHighlighter\r\n          language=\"javascript\"\r\n          className={`show-code hp-mt-24 ${codeClass && \"show-code-active\"}`}\r\n          style={monoBlue}\r\n        >\r\n          {errorStatus}\r\n        </SyntaxHighlighter>\r\n      )}\r\n    </Card>\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\r\n\r\nimport SyntaxHighlighter from \"react-syntax-highlighter\";\r\nimport { monoBlue } from \"react-syntax-highlighter/dist/esm/styles/hljs\";\r\nimport { dotStyle } from \"./code.js\";\r\n\r\nimport { Card, Row, Col, Divider, Steps, Button } from \"antd\";\r\nimport { RiCodeSSlashLine } from \"react-icons/ri\";\r\n\r\nconst { Step } = Steps;\r\n\r\nexport default function StepsDotStyle() {\r\n  const [checkedCode, setCheckedCode] = useState(false);\r\n  const [codeClass, setCodeClass] = useState(false);\r\n\r\n  function toggleChecked() {\r\n    setTimeout(() => setCodeClass(!codeClass), 100);\r\n    setCheckedCode(!checkedCode);\r\n  }\r\n\r\n  return (\r\n    <Card className=\"hp-border-color-black-40\">\r\n      <Row>\r\n        <Col lg={12} span={20} className=\"hp-mb-16\">\r\n          <h4>Dot Style</h4>\r\n          <p className=\"hp-p1-body\">Steps with progress dot style.</p>\r\n        </Col>\r\n\r\n        <Col lg={12} span={4} className=\"hp-text-right\">\r\n          <Button\r\n            onClick={toggleChecked}\r\n            type=\"text\"\r\n            icon={<RiCodeSSlashLine className=\"hp-text-color-black-80\" />}\r\n          />\r\n        </Col>\r\n\r\n        <Col span={24} className=\"hp-overflow-scroll hp-scrollbar-x-hidden hp-pt-4\">\r\n          <Steps progressDot current={1}>\r\n            <Step title=\"Finished\" description=\"This is a description.\" />\r\n            <Step title=\"In Progress\" description=\"This is a description.\" />\r\n            <Step title=\"Waiting\" description=\"This is a description.\" />\r\n          </Steps>\r\n\r\n          <Divider />\r\n\r\n          <div className=\"hp-pl-4\">\r\n            <Steps progressDot current={1} direction=\"vertical\">\r\n              <Step\r\n                title=\"Finished\"\r\n                description=\"This is a description. This is a description.\"\r\n              />\r\n              <Step\r\n                title=\"Finished\"\r\n                description=\"This is a description. This is a description.\"\r\n              />\r\n              <Step\r\n                title=\"In Progress\"\r\n                description=\"This is a description. This is a description.\"\r\n              />\r\n              <Step title=\"Waiting\" description=\"This is a description.\" />\r\n              <Step title=\"Waiting\" description=\"This is a description.\" />\r\n            </Steps>\r\n          </div>\r\n        </Col>\r\n      </Row>\r\n\r\n      {checkedCode && (\r\n        <SyntaxHighlighter\r\n          language=\"javascript\"\r\n          className={`show-code hp-mt-24 ${codeClass && \"show-code-active\"}`}\r\n          style={monoBlue}\r\n        >\r\n          {dotStyle}\r\n        </SyntaxHighlighter>\r\n      )}\r\n    </Card>\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\r\n\r\nimport SyntaxHighlighter from \"react-syntax-highlighter\";\r\nimport { monoBlue } from \"react-syntax-highlighter/dist/esm/styles/hljs\";\r\nimport { customized } from \"./code.js\";\r\n\r\nimport { Card, Row, Col, Popover, Steps, Button } from \"antd\";\r\nimport { RiCodeSSlashLine } from \"react-icons/ri\";\r\n\r\nconst { Step } = Steps;\r\n\r\nexport default function StepsCustomizedDotStyle() {\r\n  const [checkedCode, setCheckedCode] = useState(false);\r\n  const [codeClass, setCodeClass] = useState(false);\r\n\r\n  function toggleChecked() {\r\n    setTimeout(() => setCodeClass(!codeClass), 100);\r\n    setCheckedCode(!checkedCode);\r\n  }\r\n\r\n  const customDot = (dot, { status, index }) => (\r\n    <Popover\r\n      content={\r\n        <span>\r\n          Step: {index} Status: {status}\r\n        </span>\r\n      }\r\n    >\r\n      {dot}\r\n    </Popover>\r\n  );\r\n\r\n  return (\r\n    <Card className=\"hp-border-color-black-40\">\r\n      <Row>\r\n        <Col lg={12} span={20} className=\"hp-mb-16\">\r\n          <h4>Customized Dot Style</h4>\r\n          <p className=\"hp-p1-body\">\r\n            You can customize the display for Steps with progress dot style.\r\n          </p>\r\n        </Col>\r\n\r\n        <Col lg={12} span={4} className=\"hp-text-right\">\r\n          <Button\r\n            onClick={toggleChecked}\r\n            type=\"text\"\r\n            icon={<RiCodeSSlashLine className=\"hp-text-color-black-80\" />}\r\n          />\r\n        </Col>\r\n\r\n        <Col span={24} className=\"hp-overflow-scroll hp-scrollbar-x-hidden hp-pt-4\">\r\n          <Steps current={1} progressDot={customDot}>\r\n            <Step title=\"Finished\" description=\"You can hover on the dot.\" />\r\n            <Step title=\"In Progress\" description=\"You can hover on the dot.\" />\r\n            <Step title=\"Waiting\" description=\"You can hover on the dot.\" />\r\n            <Step title=\"Waiting\" description=\"You can hover on the dot.\" />\r\n          </Steps>\r\n        </Col>\r\n      </Row>\r\n\r\n      {checkedCode && (\r\n        <SyntaxHighlighter\r\n          language=\"javascript\"\r\n          className={`show-code hp-mt-24 ${codeClass && \"show-code-active\"}`}\r\n          style={monoBlue}\r\n        >\r\n          {customized}\r\n        </SyntaxHighlighter>\r\n      )}\r\n    </Card>\r\n  );\r\n}\r\n","import React from \"react\";\r\n\r\nimport { Row, Col } from \"antd\";\r\n\r\nimport PageContent from \"../../../../layout/components/content/page-content\";\r\nimport BasicSteps from \"./basic\";\r\nimport StepsMiniVersion from \"./miniVersion\";\r\nimport StepsWithIcon from \"./withIcon\";\r\nimport StepsSwitchStep from \"./switchStep\";\r\nimport StepsVertical from \"./vertical\";\r\nimport StepsVerticalMini from \"./verticalMini\";\r\nimport StepsErrorStatus from \"./errorStatus\";\r\nimport StepsDotStyle from \"./dotStyle\";\r\nimport StepsCustomizedDotStyle from \"./customizedDotStyle\";\r\n\r\nexport default function Steps() {\r\n  return (\r\n    <Row gutter={[32, 32]} className=\"hp-mb-32\">\r\n      <Col span={24}>\r\n        <PageContent\r\n          title=\"Steps\"\r\n          desc=\"Steps is a navigation bar that guides users through the steps of a task.\"\r\n          breadcrumb={[\r\n            {\r\n              title: \"Components\",\r\n              link: \"/components/components-page\"\r\n            },\r\n            {\r\n              title: \"Navigation\",\r\n            },\r\n            {\r\n              title: \"Steps\",\r\n            }\r\n          ]}\r\n        />\r\n      </Col>\r\n\r\n      <Col span={24}>\r\n        <BasicSteps />\r\n      </Col>\r\n\r\n      <Col span={24}>\r\n        <StepsMiniVersion />\r\n      </Col>\r\n\r\n      <Col span={24}>\r\n        <StepsWithIcon />\r\n      </Col>\r\n\r\n      <Col span={24}>\r\n        <StepsErrorStatus />\r\n      </Col>\r\n\r\n      <Col span={24}>\r\n        <StepsSwitchStep />\r\n      </Col>\r\n\r\n      <Col md={12} span={24}>\r\n        <StepsVertical />\r\n      </Col>\r\n\r\n      <Col md={12} span={24}>\r\n        <StepsVerticalMini />\r\n      </Col>\r\n\r\n      <Col span={24}>\r\n        <StepsDotStyle />\r\n      </Col>\r\n\r\n      <Col span={24}>\r\n        <StepsCustomizedDotStyle />\r\n      </Col>\r\n    </Row>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport { Breadcrumb, Col, Row } from \"antd\";\r\n\r\nexport default function PageContent(props) {\r\n  const { title, breadcrumb, desc } = props;\r\n\r\n  return (\r\n    <Col span={24} className=\"hp-bg-black-bg hp-py-sm-32 hp-py-64 hp-px-sm-24 hp-px-md-48 hp-px-80 hp-overflow-hidden\" style={{ borderRadius: 32 }}>\r\n      <svg\r\n        width={358}\r\n        height={336}\r\n        fill=\"none\"\r\n        xmlns=\"http://www.w3.org/2000/svg\"\r\n        className=\"hp-position-absolute-bottom-right hp-rtl-scale-x-n1\"\r\n      >\r\n        <path\r\n          d=\"M730.404 135.471 369.675-6.641l88.802 164.001-243.179-98.8 246.364 263.281-329.128-126.619 114.698 166.726-241.68-62.446\"\r\n          stroke=\"url(#a)\"\r\n          strokeWidth={40}\r\n          strokeLinejoin=\"bevel\"\r\n        />\r\n        <defs>\r\n          <linearGradient\r\n            id=\"a\"\r\n            x1={315.467}\r\n            y1={6.875}\r\n            x2={397.957}\r\n            y2={337.724}\r\n            gradientUnits=\"userSpaceOnUse\"\r\n          >\r\n            <stop stopColor=\"#fff\" />\r\n            <stop offset={1} stopColor=\"#fff\" stopOpacity={0} />\r\n          </linearGradient>\r\n        </defs>\r\n      </svg>\r\n\r\n      <Row>\r\n        <Col sm={12} span={24}>\r\n          <Row>\r\n            {\r\n              title && (\r\n                <Col span={24}>\r\n                  <h1 className=\"hp-mb-0 hp-text-color-black-0\">{title}</h1>\r\n                </Col>\r\n              )\r\n            }\r\n\r\n            {\r\n              breadcrumb && (\r\n                <Col span={24}>\r\n                  <Breadcrumb className=\"hp-d-flex hp-flex-wrap hp-mt-24\">\r\n                    <Breadcrumb.Item>\r\n                      <Link to=\"/\" className=\"hp-text-color-black-0 hp-hover-text-color-primary-2\">Home</Link>\r\n                    </Breadcrumb.Item>\r\n\r\n                    {\r\n                      breadcrumb.map((item, index) => (\r\n                        <Breadcrumb.Item key={index}>\r\n                          <Link to={item.link ? item.link : '#'} className={`hp-text-color-black-0${item.link ? ' hp-hover-text-color-primary-2' : ''}`}>{item.title}</Link>\r\n                        </Breadcrumb.Item>\r\n                      ))\r\n                    }\r\n                  </Breadcrumb>\r\n                </Col>\r\n              )\r\n            }\r\n\r\n            {\r\n              desc && (\r\n                <Col span={24}>\r\n                  <p className=\"h5 hp-mb-0 hp-mt-24 hp-text-color-black-0\">{desc}</p>\r\n                </Col>\r\n              )\r\n            }\r\n          </Row>\r\n        </Col>\r\n      </Row>\r\n    </Col>\r\n  );\r\n}\r\n"],"sourceRoot":""}