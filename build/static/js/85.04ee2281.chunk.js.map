{"version":3,"sources":["view/components/navigation/pagination/basic.jsx","view/components/navigation/pagination/code.js","view/components/navigation/pagination/more.jsx","view/components/navigation/pagination/changer.jsx","view/components/navigation/pagination/jumper.jsx","view/components/navigation/pagination/miniSize.jsx","view/components/navigation/pagination/simpleMode.jsx","view/components/navigation/pagination/prevNext.jsx","view/components/navigation/pagination/index.jsx","layout/components/content/page-content/index.jsx"],"names":["BasicPagination","useState","checkedCode","setCheckedCode","codeClass","setCodeClass","className","lg","span","onClick","setTimeout","type","icon","defaultCurrent","total","language","style","monoBlue","PaginationMore","PaginationChanger","onShowSizeChange","current","pageSize","console","log","showSizeChanger","disabled","PaginationJumper","onChange","pageNumber","showQuickJumper","PaginationMiniSize","showTotal","size","PaginationSimpleMode","simple","PaginationPrevNext","itemRender","originalElement","href","Pagination","gutter","title","desc","breadcrumb","link","PageContent","props","borderRadius","width","height","fill","xmlns","d","stroke","strokeWidth","strokeLinejoin","id","x1","y1","x2","y2","gradientUnits","stopColor","offset","stopOpacity","sm","Item","to","map","item","index"],"mappings":"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","file":"static/js/85.04ee2281.chunk.js","sourcesContent":["import React, { useState } from \"react\";\n\nimport SyntaxHighlighter from \"react-syntax-highlighter\";\nimport { monoBlue } from \"react-syntax-highlighter/dist/esm/styles/hljs\";\nimport { basic } from \"./code.js\";\n\nimport { Card, Row, Col, Pagination, Button } from \"antd\";\nimport { RiCodeSSlashLine } from \"react-icons/ri\";\n\nexport default function BasicPagination() {\n  const [checkedCode, setCheckedCode] = useState(false);\n  const [codeClass, setCodeClass] = useState(false);\n\n  function toggleChecked() {\n    setTimeout(() => setCodeClass(!codeClass), 100);\n    setCheckedCode(!checkedCode);\n  }\n\n  return (\n    <Card className=\"hp-border-color-black-40\">\n      <Row>\n        <Col className=\"hp-mb-16\" lg={12} span={20}>\n          <h4>Basic Usage</h4>\n          <p className=\"hp-p1-body\">The simplest use.</p>\n        </Col>\n\n        <Col lg={12} span={4} className=\"hp-text-right\">\n          <Button\n            onClick={toggleChecked}\n            type=\"text\"\n            icon={<RiCodeSSlashLine className=\"hp-text-color-black-80\" />}\n          />\n        </Col>\n\n        <Col span={24}>\n          <Pagination defaultCurrent={1} total={50} />\n        </Col>\n      </Row>\n\n      {checkedCode && (\n        <SyntaxHighlighter\n          language=\"javascript\"\n          className={`show-code hp-mt-24 ${codeClass && \"show-code-active\"}`}\n          style={monoBlue}\n        >\n          {basic}\n        </SyntaxHighlighter>\n      )}\n    </Card>\n  );\n}\n","export const basic = `\nimport { Pagination } from \"antd\";\n\nreturn (\n  <Pagination defaultCurrent={1} total={50} />\n);\n`;\n\nexport const changer = `\nimport { Pagination } from \"antd\";\n\nfunction onShowSizeChange(current, pageSize) {\n  console.log(current, pageSize);\n}\n\nreturn (\n  <>\n    <Pagination\n      showSizeChanger\n      onShowSizeChange={onShowSizeChange}\n      defaultCurrent={3}\n      total={500}\n    />\n\n    <br />\n\n    <Pagination\n      showSizeChanger\n      onShowSizeChange={onShowSizeChange}\n      defaultCurrent={3}\n      total={500}\n      disabled\n    />\n  </>\n);\n`;\n\nexport const jumper = `\nimport { Pagination } from \"antd\";\n\nfunction onChange(pageNumber) {\n  console.log(\"Page: \", pageNumber);\n}\n\nreturn (\n  <>\n    <Pagination\n      showQuickJumper\n      defaultCurrent={2}\n      total={500}\n      onChange={onChange}\n    />\n\n    <br />\n\n    <Pagination\n      showQuickJumper\n      defaultCurrent={2}\n      total={500}\n      onChange={onChange}\n      disabled\n    />\n  </>\n);\n`;\n\nexport const miniSize = `\nimport { Pagination, Divider } from \"antd\";\n\nfunction showTotal(total) {\n  return \"Total \" + total + \" items\";\n}\n\nreturn (\n  <>\n    <Pagination size=\"small\" total={50} className=\"hp-mb-16\" />\n\n    <Divider />\n\n    <Pagination\n      size=\"small\"\n      total={50}\n      showSizeChanger\n      showQuickJumper\n      className=\"hp-mb-16\"\n    />\n\n    <Divider />\n\n    <Pagination\n      size=\"small\"\n      total={50}\n      showTotal={showTotal}\n      className=\"hp-mb-16\"\n    />\n\n    <Divider />\n\n    <Pagination\n      size=\"small\"\n      total={50}\n      disabled\n      showTotal={showTotal}\n      showSizeChanger\n      showQuickJumper\n    />\n  </>\n);\n`;\n\nexport const more = `\nimport { Pagination } from \"antd\";\n\nreturn (\n  <Pagination defaultCurrent={6} total={500} />\n);\n`;\n\nexport const prevNext = `\nimport { Pagination } from \"antd\";\n\nfunction itemRender(current, type, originalElement) {\n  if (type === \"prev\") {\n    return <a href=\"#\">Previous</a>;\n  }\n  if (type === \"next\") {\n    return <a href=\"#\">Next</a>;\n  }\n  return originalElement;\n}\n\nreturn (\n  <Pagination total={500} itemRender={itemRender} />\n);\n`;\n\nexport const simpleMode = `\nimport { Pagination } from \"antd\";\n\nreturn (\n  <>\n    <Pagination simple defaultCurrent={2} total={50} />\n    \n    <br />\n    \n    <Pagination disabled simple defaultCurrent={2} total={50} />\n  </>\n);\n`;\n","import React, { useState } from \"react\";\n\nimport SyntaxHighlighter from \"react-syntax-highlighter\";\nimport { monoBlue } from \"react-syntax-highlighter/dist/esm/styles/hljs\";\nimport { more } from \"./code.js\";\n\nimport { Card, Row, Col, Pagination, Button } from \"antd\";\nimport { RiCodeSSlashLine } from \"react-icons/ri\";\n\nexport default function PaginationMore() {\n  const [checkedCode, setCheckedCode] = useState(false);\n  const [codeClass, setCodeClass] = useState(false);\n\n  function toggleChecked() {\n    setTimeout(() => setCodeClass(!codeClass), 100);\n    setCheckedCode(!checkedCode);\n  }\n\n  return (\n    <Card className=\"hp-border-color-black-40\">\n      <Row>\n        <Col className=\"hp-mb-16\" lg={12} span={20}>\n          <h4>More</h4>\n          <p className=\"hp-p1-body\">More pages.</p>\n        </Col>\n\n        <Col lg={12} span={4} className=\"hp-text-right\">\n          <Button\n            onClick={toggleChecked}\n            type=\"text\"\n            icon={<RiCodeSSlashLine className=\"hp-text-color-black-80\" />}\n          />\n        </Col>\n\n        <Col span={24}>\n          <Pagination defaultCurrent={6} total={500} />\n        </Col>\n      </Row>\n\n      {checkedCode && (\n        <SyntaxHighlighter\n          language=\"javascript\"\n          className={`show-code hp-mt-24 ${codeClass && \"show-code-active\"}`}\n          style={monoBlue}\n        >\n          {more}\n        </SyntaxHighlighter>\n      )}\n    </Card>\n  );\n}\n","import React, { useState } from \"react\";\n\nimport SyntaxHighlighter from \"react-syntax-highlighter\";\nimport { monoBlue } from \"react-syntax-highlighter/dist/esm/styles/hljs\";\nimport { changer } from \"./code.js\";\n\nimport { Card, Row, Col, Pagination, Button } from \"antd\";\nimport { RiCodeSSlashLine } from \"react-icons/ri\";\n\nexport default function PaginationChanger() {\n  const [checkedCode, setCheckedCode] = useState(false);\n  const [codeClass, setCodeClass] = useState(false);\n\n  function toggleChecked() {\n    setTimeout(() => setCodeClass(!codeClass), 100);\n    setCheckedCode(!checkedCode);\n  }\n\n  function onShowSizeChange(current, pageSize) {\n    console.log(current, pageSize);\n  }\n\n  return (\n    <Card className=\"hp-border-color-black-40\">\n      <Row>\n        <Col className=\"hp-mb-16\" lg={12} span={20}>\n          <h4>Changer</h4>\n          <p className=\"hp-p1-body\">Change pageSize.</p>\n        </Col>\n\n        <Col lg={12} span={4} className=\"hp-text-right\">\n          <Button\n            onClick={toggleChecked}\n            type=\"text\"\n            icon={<RiCodeSSlashLine className=\"hp-text-color-black-80\" />}\n          />\n        </Col>\n\n        <Col span={24}>\n          <Pagination\n            showSizeChanger\n            onShowSizeChange={onShowSizeChange}\n            defaultCurrent={3}\n            total={500}\n          />\n          \n          <br />\n          \n          <Pagination\n            showSizeChanger\n            onShowSizeChange={onShowSizeChange}\n            defaultCurrent={3}\n            total={500}\n            disabled\n          />\n        </Col>\n      </Row>\n\n      {checkedCode && (\n        <SyntaxHighlighter\n          language=\"javascript\"\n          className={`show-code hp-mt-24 ${codeClass && \"show-code-active\"}`}\n          style={monoBlue}\n        >\n          {changer}\n        </SyntaxHighlighter>\n      )}\n    </Card>\n  );\n}\n","import React, { useState } from \"react\";\n\nimport SyntaxHighlighter from \"react-syntax-highlighter\";\nimport { monoBlue } from \"react-syntax-highlighter/dist/esm/styles/hljs\";\nimport { jumper } from \"./code.js\";\n\nimport { Card, Row, Col, Pagination, Button } from \"antd\";\nimport { RiCodeSSlashLine } from \"react-icons/ri\";\n\nexport default function PaginationJumper() {\n  const [checkedCode, setCheckedCode] = useState(false);\n  const [codeClass, setCodeClass] = useState(false);\n\n  function toggleChecked() {\n    setTimeout(() => setCodeClass(!codeClass), 100);\n    setCheckedCode(!checkedCode);\n  }\n\n  function onChange(pageNumber) {\n    console.log(\"Page: \", pageNumber);\n  }\n\n  return (\n    <Card className=\"hp-border-color-black-40\">\n      <Row>\n        <Col className=\"hp-mb-16\" lg={12} span={20}>\n          <h4>Jumper</h4>\n          <p className=\"hp-p1-body\">Jump to a page directly.</p>\n        </Col>\n\n        <Col lg={12} span={4} className=\"hp-text-right\">\n          <Button\n            onClick={toggleChecked}\n            type=\"text\"\n            icon={<RiCodeSSlashLine className=\"hp-text-color-black-80\" />}\n          />\n        </Col>\n\n        <Col span={24}>\n          <Pagination\n            showQuickJumper\n            defaultCurrent={2}\n            total={500}\n            onChange={onChange}\n          />\n          \n          <br />\n          \n          <Pagination\n            showQuickJumper\n            defaultCurrent={2}\n            total={500}\n            onChange={onChange}\n            disabled\n          />\n        </Col>\n      </Row>\n\n      {checkedCode && (\n        <SyntaxHighlighter\n          language=\"javascript\"\n          className={`show-code hp-mt-24 ${codeClass && \"show-code-active\"}`}\n          style={monoBlue}\n        >\n          {jumper}\n        </SyntaxHighlighter>\n      )}\n    </Card>\n  );\n}\n","import React, { useState } from \"react\";\n\nimport SyntaxHighlighter from \"react-syntax-highlighter\";\nimport { monoBlue } from \"react-syntax-highlighter/dist/esm/styles/hljs\";\nimport { miniSize } from \"./code.js\";\n\nimport { Card, Row, Col, Pagination, Divider, Button } from \"antd\";\nimport { RiCodeSSlashLine } from \"react-icons/ri\";\n\nexport default function PaginationMiniSize() {\n  const [checkedCode, setCheckedCode] = useState(false);\n  const [codeClass, setCodeClass] = useState(false);\n\n  function toggleChecked() {\n    setTimeout(() => setCodeClass(!codeClass), 100);\n    setCheckedCode(!checkedCode);\n  }\n\n  function showTotal(total) {\n    return `Total ${total} items`;\n  }\n\n  return (\n    <Card className=\"hp-border-color-black-40\">\n      <Row>\n        <Col className=\"hp-mb-16\" lg={12} span={20}>\n          <h4>Mini size</h4>\n          <p className=\"hp-p1-body\">Mini size pagination.</p>\n        </Col>\n\n        <Col lg={12} span={4} className=\"hp-text-right\">\n          <Button\n            onClick={toggleChecked}\n            type=\"text\"\n            icon={<RiCodeSSlashLine className=\"hp-text-color-black-80\" />}\n          />\n        </Col>\n\n        <Col span={24}>\n          <Pagination size=\"small\" total={50} className=\"hp-mb-16\" />\n\n          <Divider />\n\n          <Pagination\n            size=\"small\"\n            total={50}\n            showSizeChanger\n            showQuickJumper\n            className=\"hp-mb-16\"\n          />\n\n          <Divider />\n\n          <Pagination\n            size=\"small\"\n            total={50}\n            showTotal={showTotal}\n            className=\"hp-mb-16\"\n          />\n\n          <Divider />\n\n          <Pagination\n            size=\"small\"\n            total={50}\n            disabled\n            showTotal={showTotal}\n            showSizeChanger\n            showQuickJumper\n          />\n        </Col>\n      </Row>\n      \n      {checkedCode && (\n        <SyntaxHighlighter\n          language=\"javascript\"\n          className={`show-code hp-mt-24 ${codeClass && \"show-code-active\"}`}\n          style={monoBlue}\n        >\n          {miniSize}\n        </SyntaxHighlighter>\n      )}\n    </Card>\n  );\n}\n","import React, { useState } from \"react\";\n\nimport SyntaxHighlighter from \"react-syntax-highlighter\";\nimport { monoBlue } from \"react-syntax-highlighter/dist/esm/styles/hljs\";\nimport { simpleMode } from \"./code.js\";\n\nimport { Card, Row, Col, Pagination, Button } from \"antd\";\nimport { RiCodeSSlashLine } from \"react-icons/ri\";\n\nexport default function PaginationSimpleMode() {\n  const [checkedCode, setCheckedCode] = useState(false);\n  const [codeClass, setCodeClass] = useState(false);\n\n  function toggleChecked() {\n    setTimeout(() => setCodeClass(!codeClass), 100);\n    setCheckedCode(!checkedCode);\n  }\n\n  return (\n    <Card className=\"hp-border-color-black-40\">\n      <Row>\n        <Col className=\"hp-mb-16\" lg={12} span={20}>\n          <h4>Simple mode</h4>\n          <p className=\"hp-p1-body\">Simple mode.</p>\n        </Col>\n\n        <Col lg={12} span={4} className=\"hp-text-right\">\n          <Button\n            onClick={toggleChecked}\n            type=\"text\"\n            icon={<RiCodeSSlashLine className=\"hp-text-color-black-80\" />}\n          />\n        </Col>\n\n        <Col span={24}>\n          <Pagination simple defaultCurrent={2} total={50} />\n          \n          <br />\n          \n          <Pagination disabled simple defaultCurrent={2} total={50} />\n        </Col>\n      </Row>\n\n      {checkedCode && (\n        <SyntaxHighlighter\n          language=\"javascript\"\n          className={`show-code hp-mt-24 ${codeClass && \"show-code-active\"}`}\n          style={monoBlue}\n        >\n          {simpleMode}\n        </SyntaxHighlighter>\n      )}\n    </Card>\n  );\n}\n","import React, { useState } from \"react\";\n\nimport SyntaxHighlighter from \"react-syntax-highlighter\";\nimport { monoBlue } from \"react-syntax-highlighter/dist/esm/styles/hljs\";\nimport { prevNext } from \"./code.js\";\n\nimport { Card, Row, Col, Pagination, Button } from \"antd\";\nimport { RiCodeSSlashLine } from \"react-icons/ri\";\n\nexport default function PaginationPrevNext() {\n  const [checkedCode, setCheckedCode] = useState(false);\n  const [codeClass, setCodeClass] = useState(false);\n\n  function toggleChecked() {\n    setTimeout(() => setCodeClass(!codeClass), 100);\n    setCheckedCode(!checkedCode);\n  }\n\n  function itemRender(current, type, originalElement) {\n    if (type === \"prev\") {\n      return <a href=\"#\">Previous</a>;\n    }\n    if (type === \"next\") {\n      return <a href=\"#\">Next</a>;\n    }\n    return originalElement;\n  }\n\n  return (\n    <Card className=\"hp-border-color-black-40\">\n      <Row>\n        <Col className=\"hp-mb-16\" lg={12} span={20}>\n          <h4>Prev and next</h4>\n          <p className=\"hp-p1-body\">Use text link for prev and next button.</p>\n        </Col>\n\n        <Col lg={12} span={4} className=\"hp-text-right\">\n          <Button\n            onClick={toggleChecked}\n            type=\"text\"\n            icon={<RiCodeSSlashLine className=\"hp-text-color-black-80\" />}\n          />\n        </Col>\n\n        <Col span={24}>\n          <Pagination total={500} itemRender={itemRender} />\n        </Col>\n      </Row>\n\n      {checkedCode && (\n        <SyntaxHighlighter\n          language=\"javascript\"\n          className={`show-code hp-mt-24 ${codeClass && \"show-code-active\"}`}\n          style={monoBlue}\n        >\n          {prevNext}\n        </SyntaxHighlighter>\n      )}\n    </Card>\n  );\n}","import React from \"react\";\n\nimport { Row, Col } from \"antd\";\n\nimport PageContent from \"../../../../layout/components/content/page-content\";\nimport BasicPagination from \"./basic\";\nimport PaginationMore from \"./more\";\nimport PaginationChanger from \"./changer\";\nimport PaginationJumper from \"./jumper\";\nimport PaginationMiniSize from \"./miniSize\";\nimport PaginationSimpleMode from \"./simpleMode\";\nimport PaginationPrevNext from \"./prevNext\";\n\nexport default function Pagination() {\n  return (\n    <Row gutter={[32, 32]} className=\"hp-mb-32\">\n      <Col span={24}>\n        <PageContent\n          title=\"Pagination\"\n          desc=\"A long list can be divided into several pages using Pagination, and only one page will be loaded at a time.\"\n          breadcrumb={[\n            {\n              title: \"Components\",\n              link: \"/components/components-page\"\n            },\n            {\n              title: \"Navigation\",\n            },\n            {\n              title: \"Pagination\",\n            }\n          ]}\n        />\n      </Col>\n\n      <Col span={24}>\n        <BasicPagination />\n      </Col>\n\n      <Col span={24}>\n        <PaginationMore />\n      </Col>\n\n      <Col span={24}>\n        <PaginationChanger />\n      </Col>\n\n      <Col span={24}>\n        <PaginationJumper />\n      </Col>\n\n      <Col span={24}>\n        <PaginationMiniSize />\n      </Col>\n\n      <Col span={24}>\n        <PaginationSimpleMode />\n      </Col>\n\n      <Col span={24}>\n        <PaginationPrevNext />\n      </Col>\n    </Row>\n  );\n}\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nimport { Breadcrumb, Col, Row } from \"antd\";\n\nexport default function PageContent(props) {\n  const { title, breadcrumb, desc } = props;\n\n  return (\n    <Col span={24} className=\"hp-bg-black-bg hp-py-sm-32 hp-py-64 hp-px-sm-24 hp-px-md-48 hp-px-80 hp-overflow-hidden\" style={{ borderRadius: 32 }}>\n      <svg\n        width={358}\n        height={336}\n        fill=\"none\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n        className=\"hp-position-absolute-bottom-right hp-rtl-scale-x-n1\"\n      >\n        <path\n          d=\"M730.404 135.471 369.675-6.641l88.802 164.001-243.179-98.8 246.364 263.281-329.128-126.619 114.698 166.726-241.68-62.446\"\n          stroke=\"url(#a)\"\n          strokeWidth={40}\n          strokeLinejoin=\"bevel\"\n        />\n        <defs>\n          <linearGradient\n            id=\"a\"\n            x1={315.467}\n            y1={6.875}\n            x2={397.957}\n            y2={337.724}\n            gradientUnits=\"userSpaceOnUse\"\n          >\n            <stop stopColor=\"#fff\" />\n            <stop offset={1} stopColor=\"#fff\" stopOpacity={0} />\n          </linearGradient>\n        </defs>\n      </svg>\n\n      <Row>\n        <Col sm={12} span={24}>\n          <Row>\n            {\n              title && (\n                <Col span={24}>\n                  <h1 className=\"hp-mb-0 hp-text-color-black-0\">{title}</h1>\n                </Col>\n              )\n            }\n\n            {\n              breadcrumb && (\n                <Col span={24}>\n                  <Breadcrumb className=\"hp-d-flex hp-flex-wrap hp-mt-24\">\n                    <Breadcrumb.Item>\n                      <Link to=\"/\" className=\"hp-text-color-black-0 hp-hover-text-color-primary-2\">Home</Link>\n                    </Breadcrumb.Item>\n\n                    {\n                      breadcrumb.map((item, index) => (\n                        <Breadcrumb.Item key={index}>\n                          <Link to={item.link ? item.link : '#'} className={`hp-text-color-black-0${item.link ? ' hp-hover-text-color-primary-2' : ''}`}>{item.title}</Link>\n                        </Breadcrumb.Item>\n                      ))\n                    }\n                  </Breadcrumb>\n                </Col>\n              )\n            }\n\n            {\n              desc && (\n                <Col span={24}>\n                  <p className=\"h5 hp-mb-0 hp-mt-24 hp-text-color-black-0\">{desc}</p>\n                </Col>\n              )\n            }\n          </Row>\n        </Col>\n      </Row>\n    </Col>\n  );\n}\n"],"sourceRoot":""}