{"version":3,"sources":["view/components/feedback/drawer/basic.jsx","view/components/feedback/drawer/code.js","view/components/feedback/drawer/custom.jsx","view/components/feedback/drawer/submit.jsx","view/components/feedback/drawer/multi.jsx","view/components/feedback/drawer/index.jsx","layout/components/content/page-content/index.jsx"],"names":["BasicDrawer","useState","visible","setVisible","checkedCode","setCheckedCode","codeClass","setCodeClass","className","span","lg","onClick","setTimeout","type","icon","title","placement","width","closable","onClose","language","style","monoBlue","CustomDrawer","setPlacement","Group","defaultValue","onChange","e","target","value","Option","Select","SubmitDrawer","size","bodyStyle","paddingBottom","closeIcon","footer","textAlign","marginRight","layout","hideRequiredMark","gutter","md","Item","name","label","rules","required","message","placeholder","addonBefore","addonAfter","RangePicker","getPopupContainer","trigger","parentElement","TextArea","rows","MultiDrawer","childrenDrawer","setChildrenDrawer","Drawer","desc","breadcrumb","link","PageContent","props","borderRadius","height","fill","xmlns","d","stroke","strokeWidth","strokeLinejoin","id","x1","y1","x2","y2","gradientUnits","stopColor","offset","stopOpacity","sm","to","map","item","index"],"mappings":"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","file":"static/js/76.5b86853a.chunk.js","sourcesContent":["import React, { useState } from \"react\";\n\nimport SyntaxHighlighter from \"react-syntax-highlighter\";\nimport { monoBlue } from \"react-syntax-highlighter/dist/esm/styles/hljs\";\nimport { basic } from \"./code.js\";\n\nimport { Card, Row, Col, Drawer, Button } from \"antd\";\nimport { RiCodeSSlashLine } from \"react-icons/ri\";\n\nexport default function BasicDrawer() {\n  const [visible, setVisible] = useState(false);\n  const [checkedCode, setCheckedCode] = useState(false);\n  const [codeClass, setCodeClass] = useState(false);\n\n  function toggleChecked() {\n    setTimeout(() => setCodeClass(!codeClass), 100);\n    setCheckedCode(!checkedCode);\n  }\n\n  const showDrawer = () => {\n    setVisible(true);\n  };\n\n  const onClose = () => {\n    setVisible(false);\n  };\n\n  return (\n    <Card className=\"hp-border-color-black-40\">\n      <Row>\n        <Col className=\"hp-mb-16\" span={24}>\n          <Row>\n            <Col lg={12} span={20}>\n              <h4>Basic</h4>\n              <p className=\"hp-p1-body\">Basic drawer.</p>\n            </Col>\n\n            <Col lg={12} span={4} className=\"hp-text-right\">\n              <Button\n                onClick={toggleChecked}\n                type=\"text\"\n                icon={<RiCodeSSlashLine className=\"hp-text-color-black-80\" />}\n              />\n            </Col>\n          </Row>\n        </Col>\n\n        <Col span={24}>\n          <Button type=\"primary\" onClick={showDrawer}>\n            Open\n          </Button>\n\n          <Drawer\n            title={<h5 className=\"hp-mb-0\">Basic Drawer</h5>}\n            placement=\"right\"\n            width={346}\n            closable={false}\n            onClose={onClose}\n            visible={visible}\n            className=\"hp-drawer-mobile\"\n          >\n            <p className=\"hp-p1-body\">Some contents...</p>\n            <p className=\"hp-p1-body\">Some contents...</p>\n            <p className=\"hp-p1-body\">Some contents...</p>\n          </Drawer>\n        </Col>\n      </Row>\n\n      {checkedCode && (\n        <SyntaxHighlighter\n          language=\"javascript\"\n          className={`show-code hp-mt-24 ${codeClass && \"show-code-active\"}`}\n          style={monoBlue}\n        >\n          {basic}\n        </SyntaxHighlighter>\n      )}\n    </Card>\n  );\n}\n","export const basic = `\nimport React, { useState } from \"react\";\nimport { Drawer, Button } from \"antd\";\n\nconst [visible, setVisible] = useState(false);\n\nconst showDrawer = () => {\n  setVisible(true);\n};\n\nconst onClose = () => {\n  setVisible(false);\n};\n\nreturn (\n  <>\n    <Button type=\"primary\" onClick={showDrawer}>\n      Open\n    </Button>\n\n    <Drawer\n      title={<h5 className=\"hp-mb-0\">Basic Drawer</h5>}\n      placement=\"right\"\n      width={346}\n      closable={false}\n      onClose={onClose}\n      visible={visible}\n      className=\"hp-drawer-mobile\"\n    >\n      <p className=\"hp-p1-body\">Some contents...</p>\n      <p className=\"hp-p1-body\">Some contents...</p>\n      <p className=\"hp-p1-body\">Some contents...</p>\n    </Drawer>\n  </>\n);\n`;\n\nexport const custom = `\nimport React, { useState } from \"react\";\nimport { Drawer, Button, Radio, Space } from \"antd\";\n\nconst [visible, setVisible] = useState(false);\nconst [placement, setPlacement] = useState(\"left\");\n\nconst showDrawer = () => {\n  setVisible(true);\n};\n\nconst onClose = () => {\n  setVisible(false);\n};\n\nconst onChange = (e) => {\n  setPlacement(e.target.value);\n};\n\nreturn (\n  <>\n    <Space>\n      <Radio.Group defaultValue={placement} onChange={onChange}>\n        <Radio className=\"hp-mr-sm-16 hp-mb-lg-8\" value=\"top\">\n          top\n        </Radio>\n\n        <Radio className=\"hp-mr-sm-16 hp-mb-lg-8\" value=\"right\">\n          right\n        </Radio>\n\n        <Radio className=\"hp-mr-sm-16 hp-mb-lg-8\" value=\"bottom\">\n          bottom\n        </Radio>\n\n        <Radio className=\"hp-mr-sm-16 hp-mb-lg-8\" value=\"left\">\n          left\n        </Radio>\n      </Radio.Group>\n\n      <Button className=\"hp-mb-lg-8\" type=\"primary\" onClick={showDrawer}>\n        Open\n      </Button>\n    </Space>\n\n    <Drawer\n      title={<h5 className=\"hp-mb-0\">Basic Drawer</h5>}\n      placement={placement}\n      closable={false}\n      onClose={onClose}\n      visible={visible}\n      key={placement}\n      className=\"hp-drawer-mobile\"\n    >\n      <p className=\"hp-p1-body\">Some contents...</p>\n      <p className=\"hp-p1-body\">Some contents...</p>\n      <p className=\"hp-p1-body\">Some contents...</p>\n    </Drawer>\n  </>\n);\n`;\n\nexport const submit = `\nimport React, { useState } from \"react\";\n\nimport {\n  Row,\n  Col,\n  Drawer,\n  Form,\n  Button,\n  Input,\n  Select,\n  DatePicker,\n} from \"antd\";\nimport { RiCloseFill, RiAddLine } from \"react-icons/ri\";\n\nconst { Option } = Select;\n\nconst [visible, setVisible] = useState(false);\n\nconst showDrawer = () => {\n  setVisible(true);\n};\n\nconst onClose = () => {\n  setVisible(false);\n};\n\nreturn (\n  <>\n    <Button type=\"primary\" onClick={showDrawer}>\n      <RiAddLine className=\"remix-icon\" size={16} />\n      New account\n    </Button>\n\n    <Drawer\n      className=\"hp-drawer-submit\"\n      title={<h5 className=\"hp-mb-0\">Create a new account</h5>}\n      width={false}\n      onClose={onClose}\n      visible={visible}\n      bodyStyle={{ paddingBottom: 80 }}\n      closeIcon={\n        <RiCloseFill\n          className=\"remix-icon hp-text-color-black-80 hp-text-color-dark-30\"\n          size={24}\n        />\n      }\n      footer={\n        <div\n          style={{\n            textAlign: \"right\",\n          }}\n        >\n          <Button\n            onClick={onClose}\n            type=\"text\"\n            style={{ marginRight: 8 }}\n          >\n            Cancel\n          </Button>\n\n          <Button onClick={onClose} type=\"primary\">\n            Submit\n          </Button>\n        </div>\n      }\n    >\n      <Form layout=\"vertical\" hideRequiredMark>\n        <Row gutter={16}>\n          <Col md={12} span={24}>\n            <Form.Item\n              name=\"name\"\n              label=\"Name\"\n              rules={[\n                { required: true, message: \"Please enter user name\" },\n              ]}\n            >\n              <Input placeholder=\"Please enter user name\" />\n            </Form.Item>\n          </Col>\n\n          <Col md={12} span={24}>\n            <Form.Item\n              name=\"url\"\n              label=\"Url\"\n              rules={[{ required: true, message: \"Please enter url\" }]}\n            >\n              <Input\n                addonBefore=\"http://\"\n                addonAfter=\".com\"\n                placeholder=\"Please enter url\"\n              />\n            </Form.Item>\n          </Col>\n        </Row>\n\n        <Row gutter={16}>\n          <Col md={12} span={24}>\n            <Form.Item\n              name=\"owner\"\n              label=\"Owner\"\n              rules={[\n                { required: true, message: \"Please select an owner\" },\n              ]}\n            >\n              <Select placeholder=\"Please select an owner\">\n                <Option value=\"xiao\">Xiaoxiao Fu</Option>\n                <Option value=\"mao\">Maomao Zhou</Option>\n              </Select>\n            </Form.Item>\n          </Col>\n\n          <Col md={12} span={24}>\n            <Form.Item\n              name=\"type\"\n              label=\"Type\"\n              rules={[\n                { required: true, message: \"Please choose the type\" },\n              ]}\n            >\n              <Select placeholder=\"Please choose the type\">\n                <Option value=\"private\">Private</Option>\n                <Option value=\"public\">Public</Option>\n              </Select>\n            </Form.Item>\n          </Col>\n        </Row>\n\n        <Row gutter={16}>\n          <Col md={12} span={24}>\n            <Form.Item\n              name=\"approver\"\n              label=\"Approver\"\n              rules={[\n                { required: true, message: \"Please choose the approver\" },\n              ]}\n            >\n              <Select placeholder=\"Please choose the approver\">\n                <Option value=\"jack\">Jack Ma</Option>\n                <Option value=\"tom\">Tom Liu</Option>\n              </Select>\n            </Form.Item>\n          </Col>\n\n          <Col md={12} span={24}>\n            <Form.Item\n              name=\"dateTime\"\n              label=\"DateTime\"\n              rules={[\n                { required: true, message: \"Please choose the dateTime\" },\n              ]}\n            >\n              <DatePicker.RangePicker\n                className=\"hp-w-100\"\n                getPopupContainer={(trigger) => trigger.parentElement}\n              />\n            </Form.Item>\n          </Col>\n        </Row>\n\n        <Row gutter={16}>\n          <Col span={24}>\n            <Form.Item\n              name=\"description\"\n              label=\"Description\"\n              rules={[\n                {\n                  required: true,\n                  message: \"please enter url description\",\n                },\n              ]}\n            >\n              <Input.TextArea\n                rows={4}\n                placeholder=\"please enter url description\"\n              />\n            </Form.Item>\n          </Col>\n        </Row>\n      </Form>\n    </Drawer>\n  </>\n);\n`;\n\nexport const multi = `\nimport React, { useState } from \"react\";\nimport { Drawer, Button } from \"antd\";\n\nconst [visible, setVisible] = useState(false);\nconst [childrenDrawer, setChildrenDrawer] = useState(false);\n\nconst showDrawer = () => {\n  setVisible(true);\n};\n\nconst onClose = () => {\n  setVisible(false);\n};\n\nconst showChildrenDrawer = () => {\n  setChildrenDrawer(true);\n};\n\nconst onChildrenDrawerClose = () => {\n  setChildrenDrawer(false);\n};\n\nreturn (\n  <>\n    <Button type=\"primary\" onClick={showDrawer}>\n      Open drawer\n    </Button>\n\n    <Drawer\n      title={<h5 className=\"hp-mb-0\">Multi-level drawer</h5>}\n      width={520}\n      closable={false}\n      onClose={onClose}\n      visible={visible}\n      className=\"hp-drawer-mobile\"\n    >\n      <Button type=\"primary\" onClick={showChildrenDrawer}>\n        Two-level drawer\n      </Button>\n\n      <Drawer\n        title={<h5 className=\"hp-mb-0\">Two-level Drawer</h5>}\n        width={320}\n        closable={false}\n        onClose={onChildrenDrawerClose}\n        visible={childrenDrawer}\n      >\n        <p className=\"hp-p1-body\">This is two-level drawer</p>\n      </Drawer>\n    </Drawer>\n  </>\n);\n`;\n","import React, { useState } from \"react\";\n\nimport SyntaxHighlighter from \"react-syntax-highlighter\";\nimport { monoBlue } from \"react-syntax-highlighter/dist/esm/styles/hljs\";\nimport { custom } from \"./code.js\";\n\nimport { Card, Row, Col, Drawer, Button, Radio, Space } from \"antd\";\nimport { RiCodeSSlashLine } from \"react-icons/ri\";\n\nexport default function CustomDrawer() {\n  const [visible, setVisible] = useState(false);\n  const [placement, setPlacement] = useState(\"left\");\n  const [checkedCode, setCheckedCode] = useState(false);\n  const [codeClass, setCodeClass] = useState(false);\n\n  function toggleChecked() {\n    setTimeout(() => setCodeClass(!codeClass), 100);\n    setCheckedCode(!checkedCode);\n  }\n\n  const showDrawer = () => {\n    setVisible(true);\n  };\n\n  const onClose = () => {\n    setVisible(false);\n  };\n\n  const onChange = (e) => {\n    setPlacement(e.target.value);\n  };\n\n  return (\n    <Card className=\"hp-border-color-black-40\">\n      <Row>\n        <Col className=\"hp-mb-16\" span={24}>\n          <Row>\n            <Col lg={12} span={20}>\n              <h4>Custom Placement</h4>\n              <p className=\"hp-p1-body\">\n                The Drawer can appear from any edge of the screen.\n              </p>\n            </Col>\n\n            <Col lg={12} span={4} className=\"hp-text-right\">\n              <Button\n                onClick={toggleChecked}\n                type=\"text\"\n                icon={<RiCodeSSlashLine className=\"hp-text-color-black-80\" />}\n              />\n            </Col>\n          </Row>\n        </Col>\n\n        <Col span={24}>\n          <Space>\n            <Radio.Group defaultValue={placement} onChange={onChange}>\n              <Radio className=\"hp-mr-sm-16 hp-mb-lg-8\" value=\"top\">\n                top\n              </Radio>\n\n              <Radio className=\"hp-mr-sm-16 hp-mb-lg-8\" value=\"right\">\n                right\n              </Radio>\n\n              <Radio className=\"hp-mr-sm-16 hp-mb-lg-8\" value=\"bottom\">\n                bottom\n              </Radio>\n\n              <Radio className=\"hp-mr-sm-16 hp-mb-lg-8\" value=\"left\">\n                left\n              </Radio>\n            </Radio.Group>\n\n            <Button className=\"hp-mb-lg-8\" type=\"primary\" onClick={showDrawer}>\n              Open\n            </Button>\n          </Space>\n\n          <Drawer\n            title={<h5 className=\"hp-mb-0\">Basic Drawer</h5>}\n            placement={placement}\n            closable={false}\n            onClose={onClose}\n            visible={visible}\n            key={placement}\n            className=\"hp-drawer-mobile\"\n          >\n            <p className=\"hp-p1-body\">Some contents...</p>\n            <p className=\"hp-p1-body\">Some contents...</p>\n            <p className=\"hp-p1-body\">Some contents...</p>\n          </Drawer>\n        </Col>\n      </Row>\n\n      {checkedCode && (\n        <SyntaxHighlighter\n          language=\"javascript\"\n          className={`show-code hp-mt-24 ${codeClass && \"show-code-active\"}`}\n          style={monoBlue}\n        >\n          {custom}\n        </SyntaxHighlighter>\n      )}\n    </Card>\n  );\n}\n","import React, { useState } from \"react\";\n\nimport SyntaxHighlighter from \"react-syntax-highlighter\";\nimport { monoBlue } from \"react-syntax-highlighter/dist/esm/styles/hljs\";\nimport { submit } from \"./code.js\";\n\nimport {\n  Card,\n  Row,\n  Col,\n  Drawer,\n  Form,\n  Button,\n  Input,\n  Select,\n  DatePicker,\n} from \"antd\";\nimport { RiCloseFill, RiAddLine, RiCodeSSlashLine } from \"react-icons/ri\";\n\nconst { Option } = Select;\n\nexport default function SubmitDrawer() {\n  const [visible, setVisible] = useState(false);\n  const [checkedCode, setCheckedCode] = useState(false);\n  const [codeClass, setCodeClass] = useState(false);\n\n  function toggleChecked() {\n    setTimeout(() => setCodeClass(!codeClass), 100);\n    setCheckedCode(!checkedCode);\n  }\n\n  const showDrawer = () => {\n    setVisible(true);\n  };\n\n  const onClose = () => {\n    setVisible(false);\n  };\n\n  return (\n    <Card className=\"hp-border-color-black-40\">\n      <Row>\n        <Col className=\"hp-mb-16\" span={24}>\n          <Row>\n            <Col lg={12} span={20}>\n              <h4>Submit form in drawer</h4>\n              <p className=\"hp-p1-body\">\n                Use a form in Drawer with a submit button.\n              </p>\n            </Col>\n\n            <Col lg={12} span={4} className=\"hp-text-right\">\n              <Button\n                onClick={toggleChecked}\n                type=\"text\"\n                icon={<RiCodeSSlashLine className=\"hp-text-color-black-80\" />}\n              />\n            </Col>\n          </Row>\n        </Col>\n\n        <Col span={24}>\n          <Button type=\"primary\" onClick={showDrawer}>\n            <RiAddLine className=\"remix-icon\" size={16} />\n            New account\n          </Button>\n\n          <Drawer\n            className=\"hp-drawer-submit\"\n            title={<h5 className=\"hp-mb-0\">Create a new account</h5>}\n            width={false}\n            onClose={onClose}\n            visible={visible}\n            bodyStyle={{ paddingBottom: 80 }}\n            closeIcon={\n              <RiCloseFill\n                className=\"remix-icon hp-text-color-black-80 hp-text-color-dark-30\"\n                size={24}\n              />\n            }\n            footer={\n              <div\n                style={{\n                  textAlign: \"right\",\n                }}\n              >\n                <Button\n                  onClick={onClose}\n                  type=\"text\"\n                  style={{ marginRight: 8 }}\n                >\n                  Cancel\n                </Button>\n\n                <Button onClick={onClose} type=\"primary\">\n                  Submit\n                </Button>\n              </div>\n            }\n          >\n            <Form layout=\"vertical\" hideRequiredMark>\n              <Row gutter={16}>\n                <Col md={12} span={24}>\n                  <Form.Item\n                    name=\"name\"\n                    label=\"Name\"\n                    rules={[\n                      { required: true, message: \"Please enter user name\" },\n                    ]}\n                  >\n                    <Input placeholder=\"Please enter user name\" />\n                  </Form.Item>\n                </Col>\n\n                <Col md={12} span={24}>\n                  <Form.Item\n                    name=\"url\"\n                    label=\"Url\"\n                    rules={[{ required: true, message: \"Please enter url\" }]}\n                  >\n                    <Input\n                      addonBefore=\"http://\"\n                      addonAfter=\".com\"\n                      placeholder=\"Please enter url\"\n                    />\n                  </Form.Item>\n                </Col>\n              </Row>\n\n              <Row gutter={16}>\n                <Col md={12} span={24}>\n                  <Form.Item\n                    name=\"owner\"\n                    label=\"Owner\"\n                    rules={[\n                      { required: true, message: \"Please select an owner\" },\n                    ]}\n                  >\n                    <Select placeholder=\"Please select an owner\">\n                      <Option value=\"xiao\">Xiaoxiao Fu</Option>\n                      <Option value=\"mao\">Maomao Zhou</Option>\n                    </Select>\n                  </Form.Item>\n                </Col>\n\n                <Col md={12} span={24}>\n                  <Form.Item\n                    name=\"type\"\n                    label=\"Type\"\n                    rules={[\n                      { required: true, message: \"Please choose the type\" },\n                    ]}\n                  >\n                    <Select placeholder=\"Please choose the type\">\n                      <Option value=\"private\">Private</Option>\n                      <Option value=\"public\">Public</Option>\n                    </Select>\n                  </Form.Item>\n                </Col>\n              </Row>\n\n              <Row gutter={16}>\n                <Col md={12} span={24}>\n                  <Form.Item\n                    name=\"approver\"\n                    label=\"Approver\"\n                    rules={[\n                      { required: true, message: \"Please choose the approver\" },\n                    ]}\n                  >\n                    <Select placeholder=\"Please choose the approver\">\n                      <Option value=\"jack\">Jack Ma</Option>\n                      <Option value=\"tom\">Tom Liu</Option>\n                    </Select>\n                  </Form.Item>\n                </Col>\n\n                <Col md={12} span={24}>\n                  <Form.Item\n                    name=\"dateTime\"\n                    label=\"DateTime\"\n                    rules={[\n                      { required: true, message: \"Please choose the dateTime\" },\n                    ]}\n                  >\n                    <DatePicker.RangePicker\n                      className=\"hp-w-100\"\n                      getPopupContainer={(trigger) => trigger.parentElement}\n                    />\n                  </Form.Item>\n                </Col>\n              </Row>\n\n              <Row gutter={16}>\n                <Col span={24}>\n                  <Form.Item\n                    name=\"description\"\n                    label=\"Description\"\n                    rules={[\n                      {\n                        required: true,\n                        message: \"please enter url description\",\n                      },\n                    ]}\n                  >\n                    <Input.TextArea\n                      rows={4}\n                      placeholder=\"please enter url description\"\n                    />\n                  </Form.Item>\n                </Col>\n              </Row>\n            </Form>\n          </Drawer>\n        </Col>\n      </Row>\n\n      {checkedCode && (\n        <SyntaxHighlighter\n          language=\"javascript\"\n          className={`show-code hp-mt-24 ${codeClass && \"show-code-active\"}`}\n          style={monoBlue}\n        >\n          {submit}\n        </SyntaxHighlighter>\n      )}\n    </Card>\n  );\n}\n","import React, { useState } from \"react\";\n\nimport SyntaxHighlighter from \"react-syntax-highlighter\";\nimport { monoBlue } from \"react-syntax-highlighter/dist/esm/styles/hljs\";\nimport { multi } from \"./code.js\";\n\nimport { Card, Row, Col, Drawer, Button } from \"antd\";\nimport { RiCodeSSlashLine } from \"react-icons/ri\";\n\nexport default function MultiDrawer() {\n  const [visible, setVisible] = useState(false);\n  const [childrenDrawer, setChildrenDrawer] = useState(false);\n  const [checkedCode, setCheckedCode] = useState(false);\n  const [codeClass, setCodeClass] = useState(false);\n\n  function toggleChecked() {\n    setTimeout(() => setCodeClass(!codeClass), 100);\n    setCheckedCode(!checkedCode);\n  }\n\n  const showDrawer = () => {\n    setVisible(true);\n  };\n\n  const onClose = () => {\n    setVisible(false);\n  };\n\n  const showChildrenDrawer = () => {\n    setChildrenDrawer(true);\n  };\n\n  const onChildrenDrawerClose = () => {\n    setChildrenDrawer(false);\n  };\n\n  return (\n    <Card className=\"hp-border-color-black-40\">\n      <Row>\n        <Col className=\"hp-mb-16\" span={24}>\n          <Row>\n            <Col lg={12} span={20}>\n              <h4>Multi-level drawer</h4>\n              <p className=\"hp-p1-body\">\n                Open a new drawer on top of an existing drawer to handle multi\n                branch tasks.\n              </p>\n            </Col>\n\n            <Col lg={12} span={4} className=\"hp-text-right\">\n              <Button\n                onClick={toggleChecked}\n                type=\"text\"\n                icon={<RiCodeSSlashLine className=\"hp-text-color-black-80\" />}\n              />\n            </Col>\n          </Row>\n        </Col>\n\n        <Col span={24}>\n          <Button type=\"primary\" onClick={showDrawer}>\n            Open drawer\n          </Button>\n\n          <Drawer\n            title={<h5 className=\"hp-mb-0\">Multi-level drawer</h5>}\n            width={520}\n            closable={false}\n            onClose={onClose}\n            visible={visible}\n            className=\"hp-drawer-mobile\"\n          >\n            <Button type=\"primary\" onClick={showChildrenDrawer}>\n              Two-level drawer\n            </Button>\n\n            <Drawer\n              title={<h5 className=\"hp-mb-0\">Two-level Drawer</h5>}\n              width={320}\n              closable={false}\n              onClose={onChildrenDrawerClose}\n              visible={childrenDrawer}\n            >\n              <p className=\"hp-p1-body\">This is two-level drawer</p>\n            </Drawer>\n          </Drawer>\n        </Col>\n      </Row>\n\n      {checkedCode && (\n        <SyntaxHighlighter\n          language=\"javascript\"\n          className={`show-code hp-mt-24 ${codeClass && \"show-code-active\"}`}\n          style={monoBlue}\n        >\n          {multi}\n        </SyntaxHighlighter>\n      )}\n    </Card>\n  );\n}\n","import React from \"react\";\n\nimport { Row, Col } from \"antd\";\n\nimport PageContent from \"../../../../layout/components/content/page-content\";\nimport NormalDrawer from \"./basic\";\nimport CustomDrawer from \"./custom\";\nimport SubmitDrawer from \"./submit\";\nimport MultiDrawer from \"./multi\";\n\nexport default function Drawer() {\n  return (\n    <Row gutter={[32, 32]} className=\"hp-mb-32\">\n      <Col span={24}>\n        <PageContent\n          title=\"Drawer\"\n          desc=\"A panel which slides in from the edge of the screen.\"\n          breadcrumb={[\n            {\n              title: \"Components\",\n              link: \"/components/components-page\"\n            },\n            {\n              title: \"Feedback\",\n            },\n            {\n              title: \"Drawer\",\n            }\n          ]}\n        />\n      </Col>\n\n      <Col span={24}>\n        <NormalDrawer />\n      </Col>\n\n      <Col span={24}>\n        <SubmitDrawer />\n      </Col>\n\n      <Col span={24}>\n        <CustomDrawer />\n      </Col>\n\n      <Col span={24}>\n        <MultiDrawer />\n      </Col>\n    </Row>\n  );\n}\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nimport { Breadcrumb, Col, Row } from \"antd\";\n\nexport default function PageContent(props) {\n  const { title, breadcrumb, desc } = props;\n\n  return (\n    <Col span={24} className=\"hp-bg-black-bg hp-py-sm-32 hp-py-64 hp-px-sm-24 hp-px-md-48 hp-px-80 hp-overflow-hidden\" style={{ borderRadius: 32 }}>\n      <svg\n        width={358}\n        height={336}\n        fill=\"none\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n        className=\"hp-position-absolute-bottom-right hp-rtl-scale-x-n1\"\n      >\n        <path\n          d=\"M730.404 135.471 369.675-6.641l88.802 164.001-243.179-98.8 246.364 263.281-329.128-126.619 114.698 166.726-241.68-62.446\"\n          stroke=\"url(#a)\"\n          strokeWidth={40}\n          strokeLinejoin=\"bevel\"\n        />\n        <defs>\n          <linearGradient\n            id=\"a\"\n            x1={315.467}\n            y1={6.875}\n            x2={397.957}\n            y2={337.724}\n            gradientUnits=\"userSpaceOnUse\"\n          >\n            <stop stopColor=\"#fff\" />\n            <stop offset={1} stopColor=\"#fff\" stopOpacity={0} />\n          </linearGradient>\n        </defs>\n      </svg>\n\n      <Row>\n        <Col sm={12} span={24}>\n          <Row>\n            {\n              title && (\n                <Col span={24}>\n                  <h1 className=\"hp-mb-0 hp-text-color-black-0\">{title}</h1>\n                </Col>\n              )\n            }\n\n            {\n              breadcrumb && (\n                <Col span={24}>\n                  <Breadcrumb className=\"hp-d-flex hp-flex-wrap hp-mt-24\">\n                    <Breadcrumb.Item>\n                      <Link to=\"/\" className=\"hp-text-color-black-0 hp-hover-text-color-primary-2\">Home</Link>\n                    </Breadcrumb.Item>\n\n                    {\n                      breadcrumb.map((item, index) => (\n                        <Breadcrumb.Item key={index}>\n                          <Link to={item.link ? item.link : '#'} className={`hp-text-color-black-0${item.link ? ' hp-hover-text-color-primary-2' : ''}`}>{item.title}</Link>\n                        </Breadcrumb.Item>\n                      ))\n                    }\n                  </Breadcrumb>\n                </Col>\n              )\n            }\n\n            {\n              desc && (\n                <Col span={24}>\n                  <p className=\"h5 hp-mb-0 hp-mt-24 hp-text-color-black-0\">{desc}</p>\n                </Col>\n              )\n            }\n          </Row>\n        </Col>\n      </Row>\n    </Col>\n  );\n}\n"],"sourceRoot":""}